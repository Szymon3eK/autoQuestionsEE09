    
    
    1. Którego polecenia nalezy użyć, aby wyraz TEKST został wyświetleny w kolorze czarnym w oknie przeglądarki internetowej?
    A. < body color="black" > TEKST < /font > // Polecenie A nie jest poprawne, ponieważ nie ma takiej właściwości color w tagu body. Wyświetlanie tekstu w oknie przeglądarki nie jest możliwe za pomocą tego polecenia.
    B. < font color="czarny" > TEKST < /font > // Polecenie B również nie jest poprawne. Właściwości color powinno mieć określony kolor w formacie szesnastkowym, a nie nazwie koloru.
    C. < font color="#000000" > TEKST < /font > // Polecenie C jest odpowiednie. <font color="#000000"> oznacza, że tekst będzie wyświetlany w kolorze czarnym. Jest to najpopularniejszy sposób ustalania koloru tekstu w HTML.
    D. < body bgcolor="black" > TEKST < /body > // Polecenie D nie jest poprawne jeśli chodzi o zmianę koloru tekstu, ponieważ bgcolor odnosi się do koloru tła strony, a nie koloru tekstu.
    
    2. W poleceniach, których celem jest odtwarzanie na stronie internetowej dźwięku jako podkładu muzycznego NIE wykorzystuje się atrybutu
    A. loop="10" // Atrybut loop="10" służy do określenia liczby powtórzeń odtwarzania dźwięku. W tym przypadku, dźwięk będzie odtwarzany 10 razy pod rząd.
    B. balance="-10" // Atrybut balance="-10" służy do regulowania balansu dźwięku między lewym a prawym kanałem dźwiękowym. W tym przypadku, wartość -10 oznacza, że dźwięk będzie bardziej słyszalny w lewym kanale.
    C. volume="-100" // Atrybut volume="-100" służy do kontrolowania głośności dźwięku. W tym przypadku, wartość -100 oznacza, że dźwięk będzie całkowicie wyciszony.
    D. href="C:/100.wav" // Atrybut href="C:/100.wav" służy do określenia ścieżki do pliku dźwiękowego, który ma zostać odtworzony. W tym przypadku, plik dźwiękowy o nazwie 100.wav znajduje się na dysku C i zostanie odtworzony.
    
    3. Jakiego znacznika należy użyć, aby przejść do kolejnej linii tekstu, nie tworząc akapitu na stronie interenetowej ?
    A. < p > // Znacznik <p> służy do tworzenia akapitu na stronie internetowej. Nie jest odpowiedzią na to pytanie.
    B. < /b > // Znacznik </b> służy do zamknięcia pogrubionego tekstu. Nie jest odpowiedzią na to pytanie.
    C. < br > // Znacznik <br> służy do przejścia do kolejnej linii tekstu, nie tworząc akapitu na stronie internetowej. To jest poprawna odpowiedź na pytanie.
    D. < /br > // Znacznik </br> nie istnieje, więc nie jest poprawną odpowiedzią na to pytanie.
    
    4. Kaskadowe arkusze stylów tworzy się w celu
    A. ułatwienia formatowania strony // Kaskadowe arkusze stylów tworzy się w celu ułatwienia formatowania strony. Pozwalają one definiować reguły, które określają wygląd elementów na stronie, takie jak kolory, czcionki, marginesy czy tło. Dzięki temu można szybko i łatwo zmieniać wygląd wielu elementów na stronie jednocześnie, co przyspiesza proces tworzenia i edycji projektu.
    B. nadpisywania wartości znaczników już ustawionych na stronie // Kaskadowe arkusze stylów pozwalają nadpisywać wartości znaczników już ustawionych na stronie. Dzięki temu można dostosować wygląd poszczególnych elementów do swoich preferencji lub wymagań projektu. Aktualność i hierarchia reguł CSS decydują o tym, które wartości zostaną zastosowane.
    C. połączenia struktury dokumentu strony z właściwą formą jego prezentacji // Kaskadowe arkusze stylów pozwalają połączyć strukturę dokumentu strony z właściwą formą jego prezentacji. Pozwalają one na odseparowanie warstwy prezentacji od warstwy struktury i zawartości, co ułatwia tworzenie i utrzymanie projektu. Dzięki temu zmiany mogą być dokonywane niezależnie od reszty strony, co zwiększa elastyczność projektu.
    D. blokowania jakichkolwiek zmian w wartościach znaczników już przypisanych w pliku CSS // Kaskadowe arkusze stylów nie blokują żadnych zmian w wartościach znaczników już przypisanych w pliku CSS. Mogą nadpisywać wartości, ale nie uniemożliwiają ich zmiany. W każdej chwili można edytować arkusz stylów i wprowadzić nowe reguły lub zmienić istniejące, co pozwala na modyfikację wyglądu strony.
    
    5. W podanej regule CSS: h1 {color: blue} h1 oznacza
    A. klasę // Klasa to specjalny atrybut, który można przypisać elementowi HTML. Po przypisaniu klasy do elementu, można go stylizować za pomocą CSS.
    B. wartość // Wartość określa wynik działania deklaracji. Może być to konkretna wartość (np. liczba, tekst) lub odwołanie do innej wartości (np. zmienna).
    C. selektor // Selektor to element lub grupa elementów, które mają zostać stylizowane za pomocą CSS. W przykładzie 'h1' jest to selektor dla nagłówka pierwszego stopnia.
    D. deklarację // Deklaracja określa jakie właściwości będą nadane wybranym elementom przez selektor. W przykładzie 'color: blue' to deklaracja zmieniająca kolor tekstu nagłówka h1 na niebieski.
    
    6. Edytor spełniający założenia WYSIWYG musi umożliwiać
    A. tworzenie podstawowej grafiki wektorowej // Punkt A umożliwia tworzenie podstawowej grafiki wektorowej. Oznacza to, że edytor posiada narzędzia pozwalające na rysowanie i edycję prostych kształtów, takich jak linie i krzywe. Grafika wektorowa jest skalowalna bez utraty jakości, dzięki czemu można ją zmieniać bez zniekształceń.
    B. publikację strony na serwerze poprzez wbudowanego klienta FTP // Punkt B umożliwia publikację strony na serwerze poprzez wbudowanego klienta FTP. To oznacza, że edytor posiada funkcję umożliwiającą wysyłanie plików strony na serwer internetowy za pomocą protokołu FTP. Dzięki temu można łatwo udostępnić swoją stronę w Internecie.
    C. obróbkę plików dźwiękowych przed umieszczeniem ich na stronie internetowej // Punkt C dotyczy obróbki plików dźwiękowych przed umieszczeniem ich na stronie internetowej. Oznacza to, że edytor posiada narzędzia pozwalające na edycję i przetwarzanie dźwięków, takich jak przycinanie, zmiana głośności czy dodawanie efektów dźwiękowych. Pozwala to na dopasowanie dźwięków do potrzeb strony internetowej.
    D. uzyskanie zbliżonego wyniku tworzenej strony do jej obrazu w przegladarce interenetowej // Punkt D dotyczy uzyskania zbliżonego wyniku tworzonej strony do jej obrazu w przeglądarce internetowej. Edytor WYSIWYG (What You See Is What You Get) pozwala na tworzenie strony internetowej w sposób, który odzwierciedla jej wygląd w przeglądarce. To oznacza, że podczas edycji można na bieżąco obejrzeć, jak zmiany wpływają na finalny efekt strony.
    
    7. Do graficznego tworzenia stron internetowych należy wykorzystać.
    A. edytor CSS // Edytor CSS to narzędzie służące do tworzenia i edycji arkuszy stylów, które kontrolują wygląd strony internetowej. Jest to program umożliwiający programistom definiowanie różnych stylów i właściwości dla elementów strony, takich jak kolory, czcionki, marginesy czy rozmieszczenie elementów.
    B. przeglądarkę internetową // Przeglądarka internetowa to program, który pozwala nam na przeglądanie stron internetowych. Przeglądarka pobiera i interpretuje kod strony oraz wyświetla jej zawartość. Oprócz tego umożliwia również korzystanie z różnych funkcji, takich jak otwieranie wielu stron jednocześnie, zakładki czy instalowanie dodatkowych wtyczek.
    C. program typu WYSIWYG // Program typu WYSIWYG (What You See Is What You Get) to narzędzie, które umożliwia tworzenie stron internetowych w sposób graficzny, bez konieczności znajomości kodowania HTML i CSS. Działanie tego programu polega na umożliwieniu użytkownikowi projektowania strony za pomocą interfejsu graficznego, który odzwierciedla wygląd rzeczywisty strony. Program automatycznie generuje odpowiedni kod HTML i CSS na podstawie wprowadzonych przez użytkownika zmian.
    D. program MS Office Picture Manager // Program MS Office Picture Manager to narzędzie do zarządzania i edycji obrazów, które jest częścią pakietu Microsoft Office. Choć może być używany do edycji obrazów na stronach internetowych, nie jest on dedykowany do tworzenia stron czy graficznego projektowania. Głównymi funkcjami programu są przycinanie, obracanie, skalowanie i korekcja kolorów obrazów.
    
    8. W procesie walidacji stron internetowych nie bada się
    A. działania linków // W procesie walidacji stron internetowych nie badamy działania linków. Walidacja stron koncentruje się na sprawdzaniu poprawności składni kodu HTML, CSS oraz JavaScript, a także zgodności z ustalonymi standardami i specyfikacjami. Działanie linków jest badane w innych obszarach testowania strony.
    B. błędów składni kodu // W procesie walidacji stron internetowych bada się błędy składni kodu. Błędy składni mogą powodować problemy w wyświetlaniu i działaniu strony. Walidator kodu, taki jak W3C Validator, sprawdza czy kod HTML, CSS i JavaScript jest napisany poprawnie i zgodnie z ustalonymi standardami. Wykrycie błędów składni pozwala na ich naprawę i poprawne działanie strony w przeglądarkach.
    C. zgodności z przeglądarkami // W procesie walidacji stron internetowych badamy zgodność z przeglądarkami. Każda przeglądarka może interpretować kod strony nieco inaczej, co może prowadzić do różnic w wyglądzie i działaniu strony. Walidacja stron sprawdza czy strona wyświetla się poprawnie w różnych przeglądarkach (np. Chrome, Firefox, Safari) oraz czy korzysta z funkcji lub technologii, które są obsługiwane przez większość przeglądarek.
    D. źródła pochodzenia narzędzi edytorskich // W procesie walidacji stron internetowych nie badamy źródła pochodzenia narzędzi edytorskich. Narzędzia edytorskie, takie jak np. Adobe Dreamweaver czy Visual Studio Code, służą do tworzenia kodu strony. Walidacja stron skupia się na analizie samego kodu i jego spójności, niezależnie od tego, jakie narzędzia były wykorzystane do jego stworzenia. Źródło narzędzi edytorskich nie ma wpływu na poprawność działania strony w przeglądarkach.
    
    9. Model opisu przestrzeni barw o parametrach: odcień, nasycenie i jasność, to
    A. HSV // Model opisu przestrzeni barw o parametrach odcienia, nasycenia i jasności to HSV. Jest to skrót od Hue (odcień), Saturation (nasycenie) i Value (jasność). Model ten jest często używany do opisu kolorów w grafice komputerowej i fotografii. Odcień określa ton koloru, nasycenie mierzy ilość szarości w kolorze, a jasność określa intensywność koloru.
    B. RGB // Model RGB to opis przestrzeni barw, gdzie każdy kolor reprezentowany jest jako kombinacja trzech składowych - czerwonej (Red), zielonej (Green) i niebieskiej (Blue). Wartości każdej składowej mogą się mieścić w zakresie od 0 do 255. Model RGB jest powszechnie używany w wyświetlaczach komputerowych i telewizorach, gdzie każdy piksel składa się z trzech diod emitujących te trzy kolory.
    C. CMY // Model CMY to opis przestrzeni barw, gdzie kolory reprezentowane są jako kombinacje trzech składowych - cyjanu (Cyan), magenty (Magenta) i żółcienia (Yellow). Model CMY jest używany w druku, gdzie kolory uzyskiwane są poprzez nakładanie tych trzech barw na białe tło. Przy użyciu odpowiednich proporcji tych składowych można uzyskać szeroką gamę kolorów.
    D. CMYK // Model CMYK jest rozwinięciem modelu CMY, dodając do niego czwartą składową - czerni (Key). Składowa czerni jest dodawana, ponieważ same barwy CMY nie są idealne i przy nakładaniu na siebie mogą tworzyć niepożądane odcienie brązu. Model CMYK jest powszechnie używany w druku do reprodukcji kolorów, gdzie czarny tusz jest dodawany jako oddzielna czwarta płytka drukarska.
    
    10. Wskaż model barw, który stosuje się do wyświetlania kolorów na ekranie monitora komputerowego
    A. HLS // Model barw HLS jest używany do opisu kolorów za pomocą odcieni, nasycenia i jasności. Nie jest stosowany w wyświetlaniu kolorów na ekranie monitora komputerowego.
    B. RGB // Model barw RGB jest najczęściej stosowany do wyświetlania kolorów na ekranie monitora komputerowego. Opiera się na mieszaniu światła czerwonego (Red), zielonego (Green) i niebieskiego (Blue), co pozwala na uzyskanie szerokiej gamy kolorów.
    C. CMY // Model barw CMY jest stosowany w druku przy użyciu kolorów podstawowych: cyjanu (Cyan), magenty (Magenta) i żółcienia (Yellow). Nie jest używany do wyświetlania kolorów na ekranie monitora komputerowego.
    D. CMYK // Model barw CMYK jest używany w druku kolorów i różni się od modelu CMY tym, że zawiera dodatkową warstwę czerni (Black). CMYK jest również nie używany do wyświetlania kolorów na ekranie monitora komputerowego.
    
    11. Który parametr obiektu graficznego ulegnie zmianie po modyfikacji wartości kanału alfa?
    A. Nasycenie barw // Nasycenie barw - to parametr obiektu graficznego określający intensywność i bogactwo kolorów. Modyfikacja wartości kanału alfa nie wpływa na nasycenie barw, więc odpowiedź A jest nieprawidłowa.
    B. Przezroczystość // Przezroczystość - jest to parametr obiektu graficznego określający stopień, w jakim obiekt przepuszcza światło. Modyfikacja wartości kanału alfa wpływa na przezroczystość, więc odpowiedź B jest prawidłowa.
    C. Ostrość krawędzi // Ostrość krawędzi - to parametr obiektu graficznego określający wyraźność i dokładność krawędzi. Modyfikacja wartości kanału alfa nie ma bezpośredniego wpływu na ostrość krawędzi, więc odpowiedź C jest nieprawidłowa.
    D. Kolejność wyświetlenia pikseli // Kolejność wyświetlenia pikseli - to parametr określający, w jakiej kolejności piksele obiektu graficznego są wyświetlane na ekranie. Modyfikacja wartości kanału alfa nie ma wpływu na kolejność wyświetlenia pikseli, więc odpowiedź D jest nieprawidłowa.
    
    12. Jakiego formatu należy użyć do zapisu obrazu z kompresją stratną?
    A. GIF // GIF to format zapisu obrazów, który używa kompresji bezstratnej. Oznacza to, że nie traci się żadnych danych podczas kompresji. Jest powszechnie używany do animacji i obrazów z niewielką ilością kolorów.
    B. PNG // PNG to format zapisu obrazów, który również używa kompresji bezstratnej. Jest doskonały do przechowywania obrazów z przejrzystością, ponieważ obsługuje kanał alfa. PNG oferuje lepszą jakość obrazu niż format GIF, ale generuje większe pliki.
    C. PCX // PCX to format zapisu obrazów, który był popularny w przeszłości, ale teraz jest rzadziej używany. Wykorzystuje kompresję bezstratną i obsługuje wielebitową grafikę. Jego największą wadą jest większy rozmiar plików w porównaniu do innych formatów.
    D. JPEG // JPEG to format zapisu obrazów, który używa kompresji stratnej. W przypadku kompresji stratnej, pewne dane obrazu są tracane w celu zmniejszenia rozmiaru pliku. JPEG jest bardzo popularny w fotografii cyfrowej, ponieważ oferuje dobrą jakość obrazu przy stosunkowo małym rozmiarze pliku.
    
    13. Najprostszy sposób zamiany obiektu oznaczonego cyfrą 1 na obiekt oznaczony cyfrą 2 polega na // pytanie posiada zdjecie D:
    
    14. Jak nazywa się proces przedstawienia, we właściwej dla danego środowiska formie, informacji zawartej w dokumencie elektronicznym?
    A. Mapowanie // Mapowanie - to proces przekształcenia jednego zestawu danych na inny zestaw danych, często na potrzeby analizy lub wizualizacji
    B. Rasteryzacja // Rasteryzacja - to proces konwersji obrazu wektorowego na obraz rastrowy, czyli na zbiór pikseli składających się na grafikę
    C. Renderowanie // Renderowanie - to proces generowania obrazu lub animacji na podstawie danych wejściowych, takich jak modele 3D, tekstury i światła
    D. Teksturowanie // Teksturowanie - to proces nakładania tekstur na modele 3D w celu nadania im szczegółów i realizmu wizualnego
    
    15. Proces filtracji sygnału wejściowego w dziedzinie czasu, obejmujący zasadę superpozycji, związany jest filtrem
    A. liniowym // Filtr liniowy jest to proces filtracji sygnału wejściowego, który działa na zasadzie superpozycji. Oznacza to, że sygnał wyjściowy jest sumą ważonych sygnałów wejściowych. Filtr ten charakteryzuje się liniową zależnością między sygnałem wyjściowym a wejściowym, co oznacza, że odpowiedź filtru na sumę dwóch sygnałów jest równa sumie odpowiedzi na te sygnały indywidualnie. Przykładem filtra liniowego może być filtr dolnoprzepustowy, który przepuszcza sygnały o niskiej częstotliwości, a tłumi sygnały o wysokiej częstotliwości.
    B. przyczynowym // Filtr przyczynowy jest to filtr, który działa na zasadzie przyczyny i skutku. Oznacza to, że odpowiedź filtru na dane wejściowe zależy jedynie od stanu filtru w danym momencie oraz poprzednich wartości sygnałów wejściowych. Filtr przyczynowy może być opisany równaniem różniczkowym lub różnicowym, które określa sposób przetwarzania sygnałów. Przykładem filtra przyczynowego jest filtr dolnoprzepustowy inercyjny, który reaguje na zmiany sygnału wejściowego z opóźnieniem, charakteryzującym się dążeniem do osiągnięcia ustalonej wartości.
    C. niezmiennym w czasie // Filtr niezmiennym w czasie jest to filtr, którego charakterystyka nie zmienia się w czasie. Oznacza to, że odpowiedź filtru na dany sygnał wejściowy jest zawsze taka sama, niezależnie od momentu w którym jest aplikowany. Filtr niezmiennym w czasie może być realizowany za pomocą odpowiednich algorytmów matematycznych, które są niezmienne względem czasu. Przykładem filtra niezmiennego w czasie może być filtr dolnoprzepustowy o stałej charakterystyce amplitudowej i fazowej.
    D. o skończonej odpowiedzi impulsowej // Filtr o skończonej odpowiedzi impulsowej (FIR) jest to filtr, którego odpowiedź na impuls jest skończona w czasie. Oznacza to, że po nałożeniu na filtr impulsu Diraca, sygnał wyjściowy ustala się w określonym czasie i pozostaje stały. Filtry FIR są opisywane za pomocą współczynników, które określają wielkość i czas działania filtru. Przykładem filtra FIR może być filtr górnoprzepustowy, który przepuszcza sygnały o wysokiej częstotliwości, a tłumi sygnały o niskiej częstotliwości.
    
    16. Jak nazywa się podzbiór strukturalnego języka zapytań, związany z formułowaniem zapytań do bazy danych za pomocą polecenia SELECT?
    A. SQL DML (ang. Data Manipulation Language) // SQL DML (ang. Data Manipulation Language) to podzbiór strukturalnego języka zapytań, który umożliwia manipulowanie danymi w bazie danych. Za pomocą polecenia SELECT można formułować zapytania, które służą do wybierania danych z bazy.
    B. SQL DDL (ang. Data Definition Language) // SQL DDL (ang. Data Definition Language) to podzbiór strukturalnego języka zapytań, który umożliwia definiowanie struktury bazy danych, takich jak tworzenie tabel, indeksów, widoków itp. Nie jest bezpośrednio związany z formułowaniem zapytań SELECT.
    C. SQL DCL (ang. Data Control Language) // SQL DCL (ang. Data Control Language) to podzbiór strukturalnego języka zapytań, który umożliwia kontrolę dostępu do danych w bazie. Za pomocą tych poleceń można nadawać uprawnienia użytkownikom, zarządzać transakcjami, tworzyć role itp. Nie jest bezpośrednio związany z formułowaniem zapytań SELECT.
    D. SQL DQL (ang. Data Query Language) // SQL DQL (ang. Data Query Language) to podzbiór strukturalnego języka zapytań, który umożliwia formułowanie zapytań do bazy danych. Polecenie SELECT jest jednym z najważniejszych poleceń w SQL DQL, ponieważ służy do wybierania danych z bazy na podstawie określonych warunków. Jest to poprawna odpowiedź na pytanie, jak nazywa się podzbiór języka związany z poleceniem SELECT.
    
    17. Jakie sa nazwy typowych poleceń języka zapytań SQL, związane z wykonywaniem operacji na danych SQL DML (np.: umieszczanie danych w bazie, kasowanie dokonywanie zmian w danych)?
    A. SELECT, SELECT INTO // SELECT jest poleceniem używanym do pobierania danych z bazy danych. SELECT INTO jest poleceniem używanym do kopiowania danych z jednej tabeli do nowej tabeli.
    B. ALTER, CREATE, DROP // ALTER jest poleceniem używanym do zmiany struktury tabeli, np. dodawanie, usuwanie lub modyfikowanie kolumn. CREATE jest poleceniem używanym do tworzenia nowej tabeli w bazie danych. DROP jest poleceniem używanym do usuwania tabeli z bazy danych.
    C. DENY, GRANT, REVOKE // DENY jest poleceniem używanym do odmawiania określonych uprawnień użytkownikowi. GRANT jest poleceniem używanym do nadawania określonych uprawnień użytkownikowi. REVOKE jest poleceniem używanym do cofania określonych uprawnień użytkownikowi.
    D. DELETE, INSERT, UPDATE // DELETE jest poleceniem używanym do usuwania danych z tabeli. INSERT jest poleceniem używanym do dodawania nowych danych do tabeli. UPDATE jest poleceniem używanym do modyfikowania istniejących danych w tabeli.
    
    18. Jak posortowana będzie lista, utworzona ze wszystkich kolumn tabeli uczniowie i zawierająca uczniów ze średnią większą od 5, która zostanie zwrócona jako wynik przedstawionego zapytania? // pytanie posiada zdjecie D:

    19. Według którego parametru oraz dla ilu tabel zostaną zwrócone wiersze na liście w wyniku przedstawionego zapytania? // pytanie posiada zdjecie D:

    20. Który z obiektów relacyjnej bazy danych, będący kodem języka SQL, może być wywoływany w zapytaniach modyfikujących kolumny danych widoczne jako tabela, bez względu na to czy jest tworzony programowo, czy dynamicznie?
    A. Reguła // Reguła jest elementem obiektowej bazy danych, który definiuje jakie warunki muszą być spełnione przy wprowadzaniu danych do tabeli. Reguły mogą być używane do narzucenia ograniczeń na dane w kolumnach tabeli.
    B. Wyzwalacz // Wyzwalacz jest kodem SQL, który jest automatycznie wywoływany przy określonym zdarzeniu w bazie danych. Mogą być wykorzystywane do wykonywania określonych czynności, takich jak aktualizacja danych lub generowanie raportów, gdy występuje określone zdarzenie.
    C. Procedura składowa // Procedura składowa jest blokiem kodu, który jest przechowywany w bazie danych i może być wywoływany przez inne zapytania SQL. Procedury składowe są przede wszystkim używane do grupowania powtarzającego się kodu i ułatwienia zarządzania bazą danych.
    D. Funkcja zdefiniowana // Funkcja zdefiniowana jest kodem SQL, który wykonuje określoną operację na danych i zwraca wynik. Funkcje zdefiniowane mogą być wywoływane w zapytaniach modyfikujących kolumny danych widoczne jako tabela, niezależnie od sposobu ich tworzenia.
    
    21. Jak nazywa się element bazy danych, za pomocą którego można jedynie odczytać dane z bazy, prezentując je w postaci tekstu lub wykresu?
    A. Tabela // Tabela jest elementem bazy danych, który przechowuje dane w postaci tabeli składającej się z kolumn i wierszy. Może zawierać różne typy danych, takie jak liczby, tekst czy daty. Tabele służą do przechowywania danych w uporządkowany sposób.
    B. Raport // Raport jest elementem bazy danych, który służy do prezentowania danych w postaci tekstu lub wykresu. Raporty mogą być wygenerowane na podstawie danych zapisanych w tabelach lub za pomocą zapytań do bazy danych. Pozwalają na organizację i przedstawianie danych w czytelny sposób.
    C. Zapytanie // Zapytanie to element bazy danych, za pomocą którego możemy manipulować danymi przechowywanymi w bazie. Za pomocą zapytań możemy tworzyć nowe tabele, modyfikować istniejące, dodawać, edytować lub usuwać dane. Zapytania umożliwiają wykonanie specyficznych operacji na danych.
    D. Formularz // Formularz jest elementem bazy danych, który służy do wprowadzania danych do bazy. Może mieć różne pola tekstowe, listy rozwijane, przyciski itp., umożliwiające użytkownikowi wprowadzanie danych w odpowiednich formatach. Formularze ułatwiają wprowadzanie danych do bazy w sposób uporządkowany i kontrolowany.
    
    22. Jakiego typu specjalizowane oprogramowanie narzędziowe należy zainstalować, aby umożliwić wykonywanie jego użytkownikowi operacji na zgromadzonych danych?
    A. Klucz obcy // Klucz obcy - jest to specjalizowane oprogramowanie narzędziowe, które umożliwia użytkownikowi operacje na zgromadzonych danych poprzez relacje między tabelami w bazie danych. Klucz obcy służy do tworzenia powiązań między danymi w różnych tabelach, co umożliwia skuteczne zarządzanie danymi i unikanie duplikacji informacji.
    B. System Zarządzania Bazą Danych (SZBD) // System Zarządzania Bazą Danych (SZBD) - jest to specjalizowane oprogramowanie narzędziowe, które umożliwia użytkownikowi operacje na zgromadzonych danych. SZBD umożliwia tworzenie, modyfikację, przechowywanie, organizację i analizę danych. Zapewnia również mechanizmy zabezpieczające dane przed utratą i dostępem nieautoryzowanym.
    C. Obiektowy System Zarządzania Bazą Danych // Obiektowy System Zarządzania Bazą Danych - jest to specjalizowane oprogramowanie narzędziowe, które umożliwia użytkownikowi operacje na zgromadzonych danych. O-SZBD opiera się na paradygmacie programowania obiektowego i pozwala na przechowywanie i manipulację obiektami w bazie danych. Umożliwia także definiowanie relacji między obiektami i definiowanie metod dostępu do danych.
    D. Otwarty mechanizm komunikacji bazy danych // Otwarty mechanizm komunikacji bazy danych - jest to specjalizowane oprogramowanie narzędziowe, które umożliwia użytkownikowi komunikację z bazą danych poprzez różne protokoły i interfejsy. Otwarty mechanizm komunikacji umożliwia dostęp do danych z różnych aplikacji oraz integrację bazy danych z innymi systemami. Zapewnia elastyczność i skalowalność w wymianie informacji z bazą danych.
    
    23. Co należy zastosować w organizacji danych, aby zapytania w bazie danych były wykonywane szybciej?
    A. Reguły // Reguły: Służą do określania zasad i procedur dotyczących przechowywania, modyfikacji i usuwania danych w bazie danych. Reguły mogą obejmować zakazy, ograniczenia i wymagania dotyczące danych.
    B. Indeksy // Indeksy: Są strukturami danych, które przyspieszają wyszukiwanie danych w bazie danych. Indeksy tworzą drzewo, które zawiera posortowane wartości kluczy i wskazuje na lokalizację danych w bazie danych.
    C. Wartości domyślne // Wartości domyślne: Są to wartości, które są automatycznie przypisywane do kolumny w bazie danych, jeśli nie podano wartości podczas dodawania nowego rekordu. Pozwalają na zapisanie standardowych wartości dla danej kolumny.
    D. Klucze podstawowe // Klucze podstawowe: Są to unikalne identyfikatory, które służą do identyfikowania każdego rekordu w bazie danych. Klucz podstawowy jednoznacznie identyfikuje rekord i zapewnia integralność danych w bazie danych.
    
    24. W programie Microsoft Access formą zabezpieczeń dostępu do danych związaną z tabelą i kwerendą jest
    A. stosowanie makr // Stosowanie makr w programie Microsoft Access służy do tworzenia automatycznych, programowych czynności, które mogą być wywoływane przez użytkownika. Makra mogą być używane do zabezpieczania dostępu do danych poprzez kontrolę wykonywanych czynności.
    B. przypisanie uprawnień // Przypisanie uprawnień w programie Microsoft Access polega na określeniu, jakie czynności i operacje mogą być wykonywane na danych tabeli i kwerendy przez różnych użytkowników. Dzięki temu można kontrolować, kto ma dostęp do danych i jakie czynności może na nich wykonywać.
    C. określanie przestrzeni tabel // Określanie przestrzeni tabel w programie Microsoft Access polega na definiowaniu różnych obszarów, w których dane mogą być przechowywane. Pozwala to na lepszą organizację danych i kontrolę dostępu do poszczególnych obszarów.
    D. wprowadzenie limitów przestrzeni dyskowej // Wprowadzenie limitów przestrzeni dyskowej w programie Microsoft Access oznacza określenie maksymalnej ilości miejsca, które może być wykorzystane przez bazę danych. Dzięki temu można zabezpieczyć się przed nadmiernym rozrostem bazy danych oraz kontrolować dostęp użytkowników do przestrzeni dyskowej.
    
    25. Które z wymienionych osób odpowiadają za przygotowanie systemu bazy danych do pracy produkcyjnej w sposób ciągły, zarządzanie użytkownikami i instalowanie nowych wersji systemu bazodanowego?
    A. Projektanci narzędzi deweloperskich // Projektanci narzędzi deweloperskich zajmują się tworzeniem różnego rodzaju narzędzi, które ułatwiają programistom pracę przy tworzeniu systemów baz danych. Mogą to być narzędzia do modelowania danych, projektowania schematów czy tworzenia zapytań SQL. Ich zadaniem jest stworzenie przyjaznego i efektywnego narzędzia, które wspomoże programistów w pracy z bazą danych.
    B. Administratorzy systemu bazy danych // Administratorzy systemu bazy danych są odpowiedzialni za przygotowanie systemu bazy danych do pracy produkcyjnej. Ich zadaniem jest zarządzanie bazą danych, w tym tworzenie, modyfikacja i usuwanie tabel, indeksów i innych struktur danych. Dodatkowo, administrowanie bazą danych polega na zarządzaniu użytkownikami, przyznawaniu im odpowiednich uprawnień oraz monitorowaniu wydajności i bezpieczeństwa bazy danych. Administratorzy systemu bazy danych także są odpowiedzialni za instalowanie nowych wersji systemu bazodanowego i dbanie o jego stabilność i dostępność.
    C. Administratorzy serwerów i sieci komputerowych // Administratorzy serwerów i sieci komputerowych zajmują się zarządzaniem infrastrukturą, na której działają systemy baz danych. Ich zadaniem jest utrzymanie sprzętu, na którym działają serwery baz danych oraz konfigurowanie i monitorowanie sieci komputerowych. Administratorzy serwerów i sieci komputerowych są odpowiedzialni za zapewnienie odpowiedniej wydajności i dostępności serwerów baz danych poprzez konserwację sprzętu oraz optymalizację i administrowanie siecią.
    D. Projektanci i programiści Systemu Zarządzania Bazą Danych. // Projektanci i programiści Systemu Zarządzania Bazą Danych (SZBD) są odpowiedzialni za tworzenie i utrzymanie systemu zarządzania bazą danych. Ich zadaniem jest projektowanie struktury bazy danych, tworzenie schematów, definiowanie zasad integralności danych oraz implementacja logiki biznesowej w systemie bazodanowym. Projektanci i programiści SZBD również są odpowiedzialni za optymalizację zapytań SQL, dbanie o wydajność oraz bezpieczeństwo bazy danych.
    
    26. Z jakimi mechanizmami nadawania zabezpieczeń, dającymi możliwości wykonywania operacji na bazie danych, związane są zagadnienia zarządzania kontami, użytkownikami i uprawnieniami?
    A. Z regułami // Reguły są mechanizmem nadawania zabezpieczeń, które określają warunki, na podstawie których użytkownik może wykonywać operacje na bazie danych. Reguły mogą obejmować takie aspekty jak dostęp do konkretnych tabel lub kolumn, dodawanie lub usuwanie danych itp.
    B. Z atrybutami // Atrybuty są cechami przypisanymi do kont użytkowników lub obiektów w bazie danych. Mogą one kontrolować dostęp do danych, określać poziom uprawnień użytkownika lub obiektu oraz ograniczać możliwe operacje na danych.
    C. Z przywilejami obiektowymi // Przywileje obiektowe są mechanizmem nadawania uprawnień na poziomie konkretnych obiektów w bazie danych. Pozwalają one kontrolować dostęp do konkretnych tabel, widoków, procedur składowanych itp. oraz decydować, jakie operacje użytkownik może wykonać na tych obiektach.
    D. Z przywilejami systemowymi // Przywileje systemowe są mechanizmem nadawania uprawnień na poziomie systemu bazodanowego. Pozwalają one kontrolować dostęp do całej bazy danych, zarządzać użytkownikami, ich kontami i innymi zasobami systemowymi oraz decydować o ogólnych uprawnieniach użytkowników w kontekście systemu.
    
    27. Metoda udostępniania bazy danych w programie Microsoft Access, dotycząca wszystkich obiektów bazy umieszczonych na dysku sieciowym i używanych jednocześnie przez różne osoby nosi nazwę
    A. folderu sieciowego // Folder sieciowy to metoda udostępniania bazy danych w programie Microsoft Access. Polega na umieszczeniu wszystkich obiektów bazy danych na dysku sieciowym, co pozwala na jednoczesne korzystanie z tych obiektów przez różne osoby. Dzięki temu, użytkownicy mają dostęp do aktualnej wersji bazy danych i mogą ją współdzielić.
    B. serwera bazy danych // Serwer bazy danych dotyczy programu Microsoft Access. Jest to dedykowany komputer lub urządzenie, które przechowuje bazę danych i udostępnia ją innym użytkownikom. Serwer bazy danych zapewnia bezpieczny dostęp do danych, zarządzanie użytkownikami oraz kontrolę nad uprawnieniami dostępu.
    C. dzielonej bazy danych // Dzielona baza danych odnosi się do metody udostępniania bazy danych w programie Microsoft Access. Wszystkie obiekty bazy danych są przechowywane w jednym pliku bazy danych, który jest dostępny dla wielu użytkowników jednocześnie. Dzięki temu, użytkownicy mogą współpracować nad tym samym projektem, dodawać, edytować i usuwać dane.
    D. witryny programu SharePoint // Witryna programu SharePoint jest niezwiązana z programem Microsoft Access. SharePoint to platforma do udostępniania i zarządzania treściami oraz współpracy. Nie ma ona bezpośredniego związku z bazą danych w Accessie, ale może być wykorzystana jako miejsce przechowywania plików związanych z bazą danych, takich jak raporty czy formularze.
    
    28. Jakie należy posiadać uprawnienia, aby wykonać i odtworzyć kopię zapasową bazy danych Microsoft SQL Server 2005 Express?
    A. Users // Uprawnienia 'Users' nie umożliwiają wykonania i odtworzenia kopii zapasowej bazy danych Microsoft SQL Server 2005 Express.
    B. Security users // Uprawnienia 'Security users' nie umożliwiają wykonania i odtworzenia kopii zapasowej bazy danych Microsoft SQL Server 2005 Express.
    C. Użytkownik lokalny // Uprawnienia 'Użytkownik lokalny' nie umożliwiają wykonania i odtworzenia kopii zapasowej bazy danych Microsoft SQL Server 2005 Express.
    D. Administrator systemu // Do wykonania i odtworzenia kopii zapasowej bazy danych Microsoft SQL Server 2005 Express wymagane są uprawnienia administratora systemu.
    
    29. Typ zmiennej w języku JavaScript
    A. nie występuje // Typ zmiennej w języku JavaScript nie występuje. W JavaScriptzie nie musimy deklarować typu zmiennej przed jej użyciem. Możemy przypisać do zmiennej różne typy danych, takie jak liczby, napisy, obiekty czy funkcje, i JavaScript sam rozpozna typ zmiennej na podstawie przypisanej wartości.
    B. jest tylko jeden // W języku JavaScript istnieje tylko jeden typ zmiennej. Wszystkie zmienne są traktowane jako obiekty. Możemy manipulować nimi przy użyciu właściwości i metod zawartych w prototypach.
    C. następuje poprzez przypisanie wartości // Typ zmiennej w języku JavaScript następuje poprzez przypisanie wartości. Jeśli przypiszemy do zmiennej liczbę, jej typ zostanie automatycznie uznany za typ liczbowy. Podobnie, jeśli przypiszemy do zmiennej napis, zostanie ona uznana za typ tekstowy. Ten mechanizm nazywany jest wnioskowaniem typów.
    D. musi być zadeklarowany na początku skryptu // Typ zmiennej w języku JavaScript nie musi być zadeklarowany na początku skryptu. W JavaScriptzie nie musimy określać typu zmiennej podczas jej deklaracji. Możemy tworzyć zmienne w dowolnym miejscu w skrypcie, a ich typ będzie określany na podstawie przypisanej wartości.
    
    30. Zmienne typu int odnoszą się do liczb
    A. naturalnych // Zmienna typu int odnosi się do liczb naturalnych, czyli do liczb dodatnich oraz do zera. Nie uwzględnia żadnych ułamków ani liczb ujemnych.
    B. całkowitych // Zmienna typu int odnosi się do liczb całkowitych, czyli do liczb dodatnich, do zera oraz do liczb ujemnych. Nie uwzględnia żadnych ułamków.
    C. w notacji stałoprzecinkowej // Notacja stałoprzecinkowa nie jest związana bezpośrednio z zmiennymi typu int. Jest to sposób zapisu liczb, który polega na wyrażeniu liczby w postaci iloczynu wartości liczby oraz potęgi liczby 10.
    D. w notacji zmiennoprzecinkowej // Notacja zmiennoprzecinkowa nie jest związana bezpośrednio z zmiennymi typu int. Jest to sposób zapisu liczb, który uwzględnia zarówno część całkowitą, jak i część ułamkową liczby.
    
    31. Co definiuje w języku C++ przedstawiony fragment kodu? // pytanie posiada zdjecie D:

    32. Sposób programowania, w którym ciąg poleceń (sekwencji instrukcji) przekazywanych komputerowi jest postrzegany jako program, nosi nazwę programowania
    A. stanowego // Programowanie stanowe to sposób programowania, w którym zachowanie programu zależy od aktualnego stanu systemu. Program zawiera instrukcje, które określają, jak program ma reagować na różne zdarzenia i zmieniać stan systemu, co powoduje zmianę wyników działania.
    B. logicznego // Programowanie logiczne to sposób programowania, w którym program jest zbudowany z faktów i reguł logicznych. Program obejmuje stwierdzenia, z których system logiczny wyprowadza odpowiedzi na pytania logiczne, opierając się na wnioskowaniu.
    C. funkcyjnego // Programowanie funkcyjne to sposób programowania, w którym program składa się z funkcji, które przekształcają dane wejściowe w dane wyjściowe. Programowanie funkcyjne promuje niemutowalność danych i unika efektów ubocznych, co czyni programy bardziej przewidywalnymi i łatwymi do testowania.
    D. imperatywnego // Programowanie imperatywne to sposób programowania, w którym program składa się z sekwencji instrukcji, które precyzują kroki, które program musi podjąć, aby osiągnąć zamierzone wyniki. Programowanie imperatywne operuje na zmiennych i wprowadza pojęcia takie jak pętle i warunki, umożliwiając dynamiczne sterowanie przepływem programu.
    
    33. Które wartości będą kolejno wypisane w wyniku działania przedstawionego skryptu // pytanie posiada zdjecie D:

    34. Fragment kodu prezentuje składnię języka // pytanie posiada zdjecie D:

    35. Jaki program komputerowy przekształca kod źródłowy, napisany w konkretnym języku programowania, na język komputera?
    A. Debugger // Debugger - narzędzie programistyczne używane do analizy i rozwiązywania błędów w programach. Pozwala na znalezienie i naprawienie problemów oraz obserwowanie procesu działania programu podczas jego wykonywania.
    B. Kompilator // Kompilator - program komputerowy, który przekształca kod źródłowy napisany w konkretnym języku programowania na kod maszynowy, czyli język zrozumiały dla komputera. Działa przez analizowanie i tłumaczenie kodu w jednym języku na inny.
    C. Edytor kodu źródłowego // Edytor kodu źródłowego - narzędzie programistyczne służące do tworzenia i edycji kodu źródłowego programów. Oferuje funkcje ułatwiające pracę programistom, takie jak podświetlanie składni, automatyczne uzupełnianie kodu czy refaktoryzację.
    D. Środowisko programistyczne // Środowisko programistyczne - zestaw narzędzi obejmujących edytor kodu, kompilator, debugger oraz różne inne funkcje ułatwiające tworzenie programów. Zapewnia integrację tych narzędzi i umożliwia efektywną pracę programistom.
    
    -------------------------------------------------------------------------------------- PRZERWA DO 95 ------------------------------------------

    

95. Częstotliwość próbkowania ma wpływ na
    A. jakość cyfrowego dzwięku // Częstotliwość próbkowania ma wpływ na jakość cyfrowego dźwięku. Jest to liczba próbek dźwięku, które są pobierane na sekundę. Im wyższa częstotliwość próbkowania, tym lepsza jest jakość dźwięku, ponieważ więcej szczegółów dźwięku jest rejestrowanych i zachowywanych. Dzięki temu dźwięk jest bardziej wiernie odtwarzany i brzmienie staje się bardziej naturalne.
    B. jakość analogowego dzwięku // Częstotliwość próbkowania nie ma wpływu na jakość analogowego dźwięku. Proces próbkowania dotyczy przetwarzania dźwięku cyfrowego, a nie analogowego. Analogowy dźwięk jest rejestrowany bezpośrednio przez urządzenia, takie jak mikrofony, i nie wymaga próbkowania. Jakość analogowego dźwięku zależy od jakości urządzeń i sygnału, a nie od częstotliwości próbkowania.
    C. amplitudę fali dźwiękowej utworu // Częstotliwość próbkowania nie ma wpływu na amplitudę fali dźwiękowej utworu. Amplituda fali dźwiękowej zależy od energii dźwięku i jest mierzona jako różnica między najwyższym a najniższym punktem na fali. Częstotliwość próbkowania odnosi się do liczby próbek dźwięku na sekundę i nie wpływa na same skoki amplitudy.
    D. skalę głośności zapisanego utworu // Częstotliwość próbkowania nie ma wpływu na skalę głośności zapisanego utworu. Skala głośności zależy od ustawień odtwarzacza dźwięku lub urządzenia, takiego jak wzmacniacz. Częstotliwość próbkowania dotyczy samego procesu rejestracji dźwięku i nie ma bezpośredniego wpływu na finalny poziom głośności utworu.
    
    96. Wysokość dźwięku zależy od
    A. siły wzbudzenia drgania // Siła wzbudzenia drgań wpływa na amplitudę fali akustycznej, czyli na jej głośność. Im większa siła wzbudzenia, tym głośniejszy dźwięk.
    B. sposobu pobudzania drgania // Sposób pobudzania drgań odnosi się do rodzaju oddziaływania na źródło dźwięku. Może to być np. uderzenie, wstrząs, podmuch powietrza itp.
    C. czasu drgania źródła dzwięku // Czas drgań źródła dźwięku nie ma bezpośredniego wpływu na wysokość dźwięku. Jest natomiast związany z trwaniem fali akustycznej.
    D. częstotliwości drgania fali akustycznej // Częstotliwość drgań fali akustycznej określa wysokość dźwięku. Im wyższa częstotliwość, tym wyższy dźwięk.
    
    97. Typ stało-znakowy w języku SQL to
    A. char // Typ stało-znakowy w języku SQL to char. Jest to typ danych służący do przechowywania ciągów znaków o stałej długości. Długość znaków musi być zadeklarowana podczas tworzenia tabeli. Przykładowo, jeśli zadeklarujesz pole typu char(10), to będzie ono zawsze zajmować 10 znaków, nawet jeśli wprowadzisz krótszy ciąg znaków.
    B. text // Typ text w języku SQL służy do przechowywania ciągów znaków o zmiennej długości. Można w nim przechowywać bardzo długie teksty, nie ma ograniczenia co do maksymalnej długości. Pole typu text zajmuje tyle miejsca, ile potrzeba na przechowanie wprowadzonego tekstu.
    C. time // Typ time w języku SQL służy do przechowywania danych czasowych, takich jak godzina, minuta i sekunda. Może być używany do przechowywania zarówno konkretnych godzin, jak i przedziałów czasowych. Na przykład, możemy użyć typu time do zapisania godziny rozpoczęcia i zakończenia danego wydarzenia.
    D. bool // Typ bool w języku SQL służy do przechowywania wartości logicznych, takich jak prawda (true) lub fałsz (false). Może być używany do wyrażania warunków i podejmowania decyzji na podstawie tych wartości. Przykładowo, możemy użyć typu bool do określenia, czy dany użytkownik jest zalogowany (true) czy nie (false).
    
    98. Operator arytmetyczny modulo w języku SQL to
    A. / // Operator / w języku SQL jest operatorem dzielenia. Służy do dzielenia jednej wartości przez drugą.
    B. || // Operator || w języku SQL jest operatorem konkatenacji. Służy do łączenia dwóch ciągów znaków w jeden.
    C. & // Operator & w języku SQL jest operatorem bitowego AND. Służy do wykonania operacji logicznej AND na dwóch liczbach binarnych.
    D. % // Operator % w języku SQL jest operatorem modulo. Służy do obliczenia reszty z dzielenia jednej liczby przez drugą.
    
    99. Polecenie w języku SQL ALTER TABLE USA... ma za zadanie
    A. usunięcie tabeli USA // Punkt A polega na usunięciu tabeli USA.
    B. modyfikację tabeli USA // Punkt B polega na modyfikacji tabeli USA. Możemy zmieniać różne aspekty tabeli, takie jak dodawanie nowych kolumn, zmiana typu danych, zmiana nazw kolumn, dodawanie indeksów, itp.
    C. nadpisanie starej tabeli USA // Punkt C polega na nadpisaniu starej tabeli USA. Może to oznaczać usunięcie starej tabeli i utworzenie nowej tabeli z taką samą nazwą i zmodyfikowaną strukturą.
    D. utworzenie nowej tabeli USA // Punkt D polega na utworzeniu nowej tabeli USA. Możemy określić strukturę tabeli, jakie kolumny powinny znaleźć się w tabeli oraz ich typy danych.
    
    100. Kod: SELECT imie, pesel, wiek FROM dane WHERE wiek IN (18,30) spowoduje wybranie:
    A. imion, nazwisk i numerów PESEL osób w wieku poniżej 18 lat // Punkt A oznacza, że kod SELECT wybiera imiona, numery PESEL i wiek osób poniżej 18 lat.
    B. imion, numerów PESEL i wieku osób z przedziału od 18 do 30 lat // Punkt B oznacza, że kod SELECT wybiera imiona, numery PESEL i wiek osób w przedziale wiekowym od 18 do 30 lat.
    C. imion, numerów PESEL i wieku osób posiadających powyżej 30 lat // Punkt C oznacza, że kod SELECT wybiera imiona, numery PESEL i wiek osób powyżej 30 lat.
    D. imion, numerów PESEL i wieku osób w wieku równym 18 lub 30 lat // Punkt D oznacza, że kod SELECT wybiera imiona, numery PESEL i wiek osób w wieku równym 18 lub 30 lat.
    
    101. Aby policzyć wszystkie wiersze tabeli Koty należy użyć polecenia:
    A. SELECT COUNT(*) FROM Koty // Polecenie SELECT COUNT(*) FROM Koty służy do policzenia wszystkich wierszy tabeli Koty. Zwraca liczbę wierszy w formie pojedynczej liczby całkowitej.
    B. SELECT ROWNUM() FROM Koty // Polecenie SELECT ROWNUM() FROM Koty jest niepoprawne. ROWNUM nie jest funkcją, ale pseudo-kolumną w bazie danych Oracle, która przypisuje unikalny numer do każdego wiersza w wyniku zapytania.
    C. SELECT COUNT(Koty) AS ROWNUM // Polecenie SELECT COUNT(Koty) AS ROWNUM jest niepoprawne. ROWNUM jest pseudo-kolumną, a COUNT(Koty) próbuje policzyć ilość wartości w kolumnie Koty, co nie jest prawidłowe.
    D. SELECT COUNT(ROWNUM) FROM Koty // Polecenie SELECT COUNT(ROWNUM) FROM Koty jest niepoprawne. ROWNUM jest pseudo-kolumną, która przypisuje unikalny numer do wiersza, ale nie możemy używać jej w funkcji COUNT, ponieważ nie zawiera rzeczywistych danych.
    
    102. Aby podczas tworzenia tabeli utworzyć klucz obcy na wielu kolumnach, należy użyć polecenia
    A. CONSTRAINT(nazwisko,imie) FOREIGN KEY REFERENCES osoby (nazwisko, imie) // Polecenie CONSTRAINT(nazwisko,imie) FOREIGN KEY REFERENCES osoby (nazwisko, imie) tworzy klucz obcy na wielu kolumnach. Klucz obcy to mechanizm w bazach danych, który umożliwia powiązanie danych z dwóch tabel. W tym przypadku, klucz obcy łączy kolumny 'nazwisko' i 'imie' w tabeli osoby z kolumnami 'nazwisko' i 'imie' w tworzonej tabeli.
    B. CONSTRAINT(nazwisko,imie) FOREIGN REFERENCES KEY osoby (nazwisko, imie) // Polecenie CONSTRAINT(nazwisko,imie) FOREIGN REFERENCES KEY osoby (nazwisko, imie) jest niepoprawne i nie powinno być używane.
    C. CONSTRAINT fk_osoba_uczen FOREIGN KEY (nazwisko, imie) REFERENCES osoby (nazwisko,imie) // Polecenie CONSTRAINT fk_osoba_uczen FOREIGN KEY (nazwisko, imie) REFERENCES osoby (nazwisko,imie) to prawidłowy sposób tworzenia klucza obcego na wielu kolumnach. Jest ona składająca się z trzech części: nazwa CONSTRAINT, nazwa klucza obcego (fk_osoba_uczen) oraz deklaracja, że kolumny 'nazwisko' i 'imie' są kluczami obcymi, które powiązują tabelę z tabelą osoby.
    D. CONSTRAINT fk_osoba_uczen FOREIGN KEY ON (nazwisko, imie) REFERENCES osoby (nazwisko,imie) // Polecenie CONSTRAINT fk_osoba_uczen FOREIGN KEY ON (nazwisko, imie) REFERENCES osoby (nazwisko,imie) jest niepoprawne i nie powinno być używane.
    
    103. W algebrze relacji operacja selekcji polega na
    A. wyelminowaniu pustych wierszy // Operacja selekcji polega na wyeliminowaniu pustych wierszy.
    B. wybraniu krotek spełniających określone warunki // Operacja selekcji polega na wybraniu krotek spełniających określone warunki.
    C. wybraniu krotek niezawierających wartości NULL // Operacja selekcji polega na wybraniu krotek niezawierających wartości NULL.
    D. wyelminowaniu krotek z powtarzającymi się polami // Operacja selekcji polega na wyeliminowaniu krotek z powtarzającymi się polami.
    
    104. Relacja w bazach danych jest
    A. logicznym połączeniem tabel // Relacja w bazach danych jest logicznym połączeniem tabel. Oznacza to, że dane w jednej tabeli są powiązane z danymi w innej tabeli za pomocą kluczy lub indeksów. Relacje pozwalają na skorelowanie i złączenie danych z różnych tabel, co ułatwia analizowanie i pobieranie danych z bazy.
    B. kluczem głównym w relacji tabel // Klucz główny w relacji tabel jest unikalnym identyfikatorem, który służy do jednoznacznego identyfikowania rekordów w tabeli. Klucz główny może być składnikiem relacji między tabelami poprzez logiczne połączenie. Dzięki kluczowi głównemu można skorelować dane między tabelami, aby uzyskać kompletną informację na temat powiązanych rekordów.
    C. algebraicznym połączeniem tabel // Algebraiczne połączenie tabel jest niepoprawnym pojęciem w kontekście baz danych. Relacje między tabelami są oparte na logicznym połączeniu, a nie na działaniach algebraicznych. Pojęcie algebraicznego połączenia tabel nie istnieje w kontekście baz danych.
    D. połączeniem dwóch pól jednej tabeli // Połączenie dwóch pól jednej tabeli nie jest relacją w bazach danych. Relacja występuje pomiędzy dwiema lub więcej tabelami, a nie w obrębie jednej tabeli. Połączenie dwóch pól jednej tabeli może być jedynie zwykłym powiązaniem między wartościami w tych polach.
    
    105. Wskaż poprawną kolejność etapów projektowania relacyjnej bazy danych
    A. Selekcja, Określenie relacji, Określenie kluczy podstawowych tabel, Określenie zbioru danych // Selekcja polega na wybraniu odpowiednich tabel i atrybutów, które będą stanowić podstawę bazy danych.
    B. Określenie relacji, Określenie kluczy podstawowych tabel, Selekcja, Określenie zbioru danych // Określenie relacji polega na ustaleniu zależności między tabelami, na przykład poprzez wyznaczenie kluczy obcych.
    C. Określenie kluczy podstawowych tabel, Określenie zbioru danych, Selekcja, Określenie relacji // Określenie kluczy podstawowych tabel polega na wybraniu atrybutów, które będą unikalnie identyfikować każdą rekord w tabelach.
    D. Określenie zbioru danych, Selekcja, Określenie kluczy podstawowych tabel, Określenie relacji // Określenie zbioru danych polega na określeniu, jakie informacje będą przechowywane w bazie danych.
    
    106. Formularze do obsługi baz danych tworzy się w celu
    A. raportowania danych // Formularze do obsługi baz danych tworzy się w celu raportowania danych.
    B. wyszukiwania wierszy spełniających dane kryteria // Formularze do obsługi baz danych tworzy się w celu wyszukiwania wierszy spełniających dane kryteria.
    C. wprowadzenia powiązań w relacyjnych bazach danych // Formularze do obsługi baz danych tworzy się w celu wprowadzenia powiązań w relacyjnych bazach danych.
    D. wygodniejszego wprowadzania, edytowania i usuwania danych // Formularze do obsługi baz danych tworzy się w celu wygodniejszego wprowadzania, edytowania i usuwania danych.
    
    107. Integralność referencyjna w modelu relacyjnych baz danych oznacza, że
    A. wartość klucza głównego oraz klucza obcego nie jest pusta // Integralność referencyjna w modelu relacyjnych baz danych oznacza, że wartość klucza głównego oraz klucza obcego nie jest pusta.
    B. klucz główny lub klucz obcy nie zawierają wartości NULL // Integralność referencyjna w modelu relacyjnych baz danych oznacza, że klucz główny lub klucz obcy nie zawierają wartości NULL.
    C. każdemu kluczowi głównemu odpowiada dokładnie jeden klucz obcy w tabeli lub tabelach powiązanych // Integralność referencyjna w modelu relacyjnych baz danych oznacza, że każdemu kluczowi głównemu odpowiada dokładnie jeden klucz obcy w tabeli lub tabelach powiązanych.
    D. wartość klucza obcego w danej tabeli musi być albo równa wartości klucza głównego w tabeli z nia powiązanej albo równa wartości NULL // Integralność referencyjna w modelu relacyjnych baz danych oznacza, że wartość klucza obcego w danej tabeli musi być albo równa wartości klucza głównego w tabeli z nią powiązanej albo równa wartości NULL.
    
    108. Deklaracja w języku JavaScript: var x=true; powoduje, że zmienna x jest typu
    A. logicznego // Zmienna x jest typu logicznego, co oznacza że może przechowywać jedną z dwóch wartości - true (prawda) lub false (fałsz). W tym przypadku, zmienna x przyjmuje wartość true.
    B. liczbowego // Zmienna x nie jest typu liczbowego. W tym przypadku, zmienna x nie może przechowywać wartości liczbowych.
    C. ciąg znaków // Zmienna x nie jest typu ciągu znaków. W tym przypadku, zmienna x nie może przechowywać tekstowych wartości.
    D. wyliczeniowego // Zmienna x nie jest typu wyliczeniowego. W tym przypadku, zmienna x nie jest powiązana ze zdefiniowanym wcześniej zestawem stałych wartości.
    
    109. Obiekt typu array w języku Javascript służy do przechowywania
    A. wielu wartości lub funkcji // Obiekt typu array w języku Javascript służy do przechowywania wielu wartości lub funkcji. Może zawierać różne typy danych, takie jak liczby, tekst czy obiekty.
    B. wielu wartości dowolnego typu // Obiekt typu array w języku Javascript służy do przechowywania wielu wartości dowolnego typu. Może zawierać liczby, tekst, obiekty, funkcje i inne.
    C. wielu wartości wyłącznie liczbowych // Obiekt typu array w języku Javascript nie ogranicza się jedynie do przechowywania wartości liczbowych. Może zawierać dowolne typy danych.
    D. wielu wartości wyłącznie tekstowych // Obiekt typu array w języku Javascript nie ogranicza się jedynie do przechowywania wartości tekstowych. Może zawierać różne typy danych, takie jak liczby, obiekty czy funkcje.
    
    110. Ukrywanie pewnych pól lub metod obiektów danej klasy tak, aby były one dostępne tylko metodom wewnętrznym tej klasy lub funkcjom zaprzyjaźnionym, to
    A. polimorfizm // Polimorfizm to mechanizm programowania, który pozwala na tworzenie wielu funkcji o tej samej nazwie, ale różnym zachowaniu. W kontekście pytania, polimorfizm nie opisuje ukrywania pól lub metod obiektów danej klasy.
    B. hermetyzacja // Hermetyzacja to mechanizm programowania, który pozwala na ukrywanie pewnych pól lub metod obiektów danej klasy tak, aby były one dostępne tylko metodom wewnętrznym tej klasy lub funkcjom zaprzyjaźnionym. Dzięki hermetyzacji możemy kontrolować dostęp do danych i zapewniać bezpieczeństwo aplikacji.
    C. konkatenacja // Konkatenacja to operacja, w której łączymy ze sobą dwa napisy lub ciągi znaków. W kontekście pytania, konkatenacja nie ma związku z ukrywaniem pól lub metod obiektów.
    D. dziedziczenie // Dziedziczenie to mechanizm programowania, który umożliwia tworzenie nowych klas na podstawie istniejących klas. Dzięki dziedziczeniu można dziedziczyć pola i metody z innych klas, co pozwala na tworzenie hierarchii klas i reużywanie kodu. Jednak dziedziczenie nie opisuje ukrywania pól lub metod obiektów.
    
    111. Odwoływanie funkcji do samej siebie to
    A. iteracja // Iteracja to proces powtarzania pewnej czynności w celu osiągnięcia jakiegoś rezultatu. Nie ma tu odwołania do samej funkcji, więc nie jest to odpowiedź poprawna.
    B. rekurencja // Rekurencja to odwoływanie funkcji do samej siebie. Działa na zasadzie wywołania funkcji, która w swoim ciele zawiera odwołanie do siebie samej. Jest to przydatne w rozwiązywaniu problemów, które mają strukturę podobną do poddrzewa. Na przykład, obliczanie silni liczby n można zaimplementować za pomocą rekurencji, gdzie silnia n jest zdefiniowana jako n * silnia n-1.
    C. hermetyzacja // Hermetyzacja to proces ukrywania szczegółów implementacji w celu zapewnienia bezpieczeństwa i uproszczenia interfejsu. Nie ma tu odwołania do samej funkcji, więc nie jest to odpowiedź poprawna.
    D. dziedziczenie // Dziedziczenie to mechanizm, który umożliwia dziedziczenie właściwości i zachowań jednej klasy przez inną. Nie ma tu odwołania do samej funkcji, więc nie jest to odpowiedź poprawna.
    
    112. W języku PHP zmienna $_GET jest zmienną
    A. predefiniowaną, używaną do przekazywania danych do skryptów PHP poprzez adres strony // Zmienna $_GET w języku PHP jest predefiniowaną zmienną, która służy do przekazywania danych do skryptów PHP poprzez adres strony. Dzięki temu możemy przesłać dane z innych stron lub formularzy do skryptu PHP i wykorzystać je w naszym kodzie.
    B. predefiniowaną, używaną do gromadzenia wartości formularza po nagłówkach zlecenia HTTP (danych z formularza nie można zobaczyć w adresie) // Zmienna $_GET jest również predefiniowaną zmienną, ale używaną do gromadzenia wartości formularza po nagłówkach zlecenia HTTP. Oznacza to, że dane z formularza nie są widoczne w adresie strony. Możemy użyć tej zmiennej do przechwycenia danych z formularza w celu ich dalszej obróbki w skrypcie PHP.
    C. zdefiniowaną przez twórcę strony, służącą do przekazywania danych z formularza przez adres strony // Zmienna $_GET nie jest zdefiniowana przez twórcę strony, ale jest używana do przekazywania danych z formularza poprzez adres strony. Możemy ją wykorzystać do przekazania danych do innego skryptu lub strony, które to będzie mogło odebrać i wykorzystać te dane.
    D. zwykłą, zdefiniowaną przez twórcę strony // Zmienna $_GET jest zwykłą zmienną, zdefiniowaną przez twórcę strony. Może ona służyć do różnych celów w zależności od potrzeb i logiki działania danego skryptu PHP. Może przechowywać wartości, które będą wykorzystane w kodzie PHP lub wyświetlone na stronie.
    
    113. W języku PHP w instrukcji switch musi występować
    A. instrukcja default // W przypadku języka PHP, instrukcja default w instrukcji switch nie jest wymagana. Instrukcja default jest opcjonalna i używana jako domyślny przypadek, gdy żaden z przypadków case nie pasuje do podanego wyrażenia.
    B. konstrukcja switch(wyrażenie) // Konstrukcja switch(wyrażenie) jest niezbędna w języku PHP, ponieważ umożliwia wybór jednego przypadku do wykonania spośród wielu możliwości. Wyrażenie jest ewaluowane, a następnie porównywane z każdym przypadkiem case.
    C. przynajmniej dwie instrukcje case // W języku PHP nie ma konieczności posiadania przynajmniej dwóch instrukcji case w instrukcji switch. Może istnieć tylko jedno wyrażenie case lub wiele wyrażeń case z różnymi wartościami, które mają zostać porównane z wyrażeniem w switch.
    D. instrukcja break po każdej instrukcji case // W instrukcji switch w języku PHP jest zalecane umieszczenie instrukcji break po każdym przypadku case. Instrukcja break przerywa wykonanie instrukcji switch i przechodzi do pierwszej instrukcji za instrukcją switch. Jeśli instrukcja break nie zostanie użyta, wykonanie będzie kontynuowane od pierwszego pasującego przypadku do końca instrukcji switch.
    
    114. Konstruktor w języku PHP jest metodą o nazwie
    A. _new // Metoda o nazwie _new, która jest konstruktorem w języku PHP. Służy do tworzenia nowych obiektów i inicjalizacji ich właściwości.
    B. _open // Metoda o nazwie _open, która nie jest poprawnym konstruktorem w języku PHP. Nie ma żadnej funkcji i nie jest używana w konstrukcji obiektów.
    C. _create // Metoda o nazwie _create, która nie jest poprawnym konstruktorem w języku PHP. Nie ma żadnej funkcji i nie jest używana w konstrukcji obiektów.
    D. _construct // Metoda o nazwie _construct, która jest poprawnym konstruktorem w języku PHP. Jest wywoływana automatycznie podczas tworzenia nowego obiektu i służy do inicjalizacji jego właściwości.
    
    115. Debugger to program służący do
    A. badania właściwości programu // Debugger to program, który służy do badania właściwości programu. Dzięki niemu możemy analizować zachowanie programu, sprawdzać wartości zmiennych oraz monitorować wywołania funkcji.
    B. sprawdzania szybkości programu // Debugger nie jest narzędziem do sprawdzania szybkości programu. Służy on głównie do analizy kodu i znajdowania błędów, a nie do pomiaru wydajności programu.
    C. wyszukiwania błędów w kodzie programu // Poprawna odpowiedź to C. Debugger służy głównie do wyszukiwania błędów w kodzie programu. Dzięki niemu możemy śledzić wykonanie programu linia po linii, analizować zmienne i wykrywać potencjalne błędy logiczne czy składniowe.
    D. zoptymalizowanie pamięci używanej przez aplikację // Debugger nie ma bezpośredniego wpływu na zoptymalizowanie pamięci używanej przez aplikację. Zoptymalizowanie pamięci to proces, w którym skupiamy się na zmniejszeniu zużycia pamięci przez program, co może być osiągnięte poprzez optymalizację struktur danych i zarządzanie pamięcią.
    
    116. Kod zamieszczony w ramce spowoduje wypisanie liczb // pytanie posiada zdjecie D:

    117. Który kod jest alternatywny do kodu zamieszczonego w ramce? // pytanie posiada zdjecie D:

    118. Zamieszczony w ramce fragment skryptu w języku JavaScript // pytanie posiada zdjecie D:

    119. Zamieszczony w ramce fragment kodu w JavaScript wypisze // pytanie posiada zdjecie D:

    120. Który fragment kodu JavaScript zwróci wartość true?
    A. "a" > "b" // Operator " > " w JavaScript porównuje leksykograficznie dwie wartości. W przypadku tego kodu, "a" jest mniejsze od "b", więc wyrażenie zwróci wartość false.
    B. "ab" > "c" // Operator " > " w JavaScript porównuje leksykograficznie dwie wartości. W przypadku tego kodu, "ab" jest większe od "c", więc wyrażenie zwróci wartość true.
    C. "abc" > "def" // Operator " > " w JavaScript porównuje leksykograficznie dwie wartości. W przypadku tego kodu, "abc" jest mniejsze od "def", więc wyrażenie zwróci wartość false.
    D. "def" > "abc" // Operator " > " w JavaScript porównuje leksykograficznie dwie wartości. W przypadku tego kodu, "def" jest większe od "abc", więc wyrażenie zwróci wartość true.
    
    121. W kodzie PHP znak "//" oznacza
    A. początek skryptu // Punkt A: Znak '//' w kodzie PHP oznacza początek komentarza jednoliniowego. Kiedy linia kodu zaczyna się od '//', jest ona ignorowana przez interpreter PHP i nie zostaje wykonana. Stosuje się go do dodawania krótkich komentarzy, które nie mają wpływu na działanie programu.
    B. operator alernatywy // Punkt B: Znak '//' nie oznacza operatora alternatywy w kodzie PHP.
    C. operator dzielenia całkowitego // Punkt C: Znak '//' nie oznacza operatora dzielenia całkowitego w kodzie PHP.
    D. początek komentarza jednoliniowego // Punkt D: Znak '//' w kodzie PHP oznacza początek komentarza jednoliniowego. Po tym znaku wszystko, co znajduje się po nim w danej linii, jest traktowane jako komentarz i nie ma wpływu na działanie programu. Jest to przydatne do dodawania wyjaśnień lub notatek do kodu.
    
    122. Zapisując hasło użytkownika serwisu WWW (np. bankowości internetowej), w celu jego zabezpieczenia przed odtajnieniem, zwykle używa się funkcji
    A. klucza // Funkcja klucza używana jest do zabezpieczenia hasła użytkownika serwisu WWW przed odtajnieniem. Jest to specjalny algorytm, który zamienia oryginalne hasło na zaszyfrowaną postać. Dzięki temu, nawet jeśli intruz przechwyci zaszyfrowane hasło, nie będzie w stanie odczytać prawdziwej wartości. Funkcje klucza są projektowane w taki sposób, aby były trudne do złamania, co zapewnia bezpieczeństwo użytkowników serwisu internetowego.
    B. cyklometrycznych // Funkcje cyklometryczne nie są stosowane do zabezpieczania haseł użytkownika serwisu WWW. Są to matematyczne funkcje, które dotyczą okresowości oraz oscylacji. Nie mają one zastosowania w kontekście zabezpieczania danych.
    C. abstrakcyjnych // Funkcje abstrakcyjne również nie są używane do zabezpieczania haseł użytkownika serwisu WWW. Są to funkcje, które służą głównie do tworzenia modeli teoretycznych oraz abstrakcyjnych struktur danych.
    D. mieszających // Funkcje mieszające są używane do zabezpieczenia haseł użytkownika serwisu WWW. Są to specjalne algorytmy, które zamieniają oryginalne hasło na unikalny kod, zwany też skrótem. Skróty haseł są trudne do odwrócenia, co sprawia, że przechowywane hasła są bezpieczne przed odtajnieniem. Przy próbie logowania, wprowadzone hasło jest ponownie zamieniane na skrót, który jest porównywany z zapisanym wcześniej. Jeśli się zgadzają, uznaje się to za poprawne hasło.
    
    123. W celu określenia wysokości obrazka wyświetlonego na stronie WWW należy wykorzystać właściwość CSS o nazwie
    A. width // Właściwość CSS o nazwie 'width' służy do określenia szerokości elementu na stronie WWW. Można ustawić wartość w pikselach, procentach lub innym jednostkach.
    B. padding // Właściwość CSS o nazwie 'padding' służy do określenia odstępów wokół zawartości elementu. Można ustawić wartość w pikselach, procentach lub innym jednostkach.
    C. height // Właściwość CSS o nazwie 'height' służy do określenia wysokości elementu na stronie WWW. Można ustawić wartość w pikselach, procentach lub innym jednostkach.
    D. margin // Właściwość CSS o nazwie 'margin' służy do określenia odstępów zewnętrznych wokół elementu. Można ustawić wartość w pikselach, procentach lub innym jednostkach.
    
    124. Aby ustawić czcionkę Verdana w kodzie CSS, należy wykorzystać właściwość
    A. font-family: Verdana; // Właściwość font-family: Verdana; służy do ustalenia czcionki Verdana w kodzie CSS. Czcionka Verdana jest popularna ze względu na jej czysty i czytelny wygląd. Dzięki tej właściwości możliwe jest ustawienie czcionki Verdana dla konkretnego elementu lub całej strony.
    B. font-style: Verdana; // Właściwość font-style: Verdana; nie jest poprawnym sposobem ustawienia czcionki Verdana w kodzie CSS. Ta właściwość służy do kontrolowania stylu czcionki, takiego jak kursywa lub normalny tekst. Nie można użyć właściwości font-style do ustalenia konkretnej czcionki.
    C. font-name: Verdana; // Właściwość font-name: Verdana; nie istnieje w kodzie CSS. Właściwość font-family jest używana do ustalenia rodzaju czcionki, nie font-name.
    D. font-weight: Verdana; // Właściwość font-weight: Verdana; jest niepoprawna. Właściwość font-weight służy do kontrolowania grubości czcionki, takiej jak normalna, pogrubiona lub cienka. Nie można użyć tej właściwości do ustalenia konkretnej czcionki, takiej jak Verdana.
    
    125. Funkcja zapisana językiem PHP służy do // pytanie posiada zdjecie D:

    126. Kwerenda pozwalająca na wprowadzenie zmian w wielu rekordach lub przeniesienie wielu rekordów przy użyciu pojedynczej operacji, nosi nazwę kwerendy
    A. krzyżowej // Kwerenda krzyżowa to taka, która umożliwia wprowadzanie zmian w wielu rekordach lub przenoszenie wielu rekordów przy użyciu pojedynczej operacji.
    B. funkcjonalnej // Kwerenda funkcjonalna to nazwa kwerendy, która również pozwala na wprowadzanie zmian w wielu rekordach lub przenoszenie wielu rekordów, ale z naciskiem na funkcjonalność i efektywność.
    C. wybierającej // Kwerenda wybierająca to taka, która służy do wybierania określonych rekordów z bazy danych, nie wprowadza jednak żadnych zmian w danych.
    D. parametrycznej // Kwerenda parametryczna to takiego rodzaju kwerenda, która używa parametrów do precyzyjnego określenia, jakie dane mają być zwrócone.
    
    127. Wskaż rezultat działania fragmentu kodu JavaScript // pytanie posiada zdjecie D:

    128. Fizyczny model replikacji bazy danych przedstawiony na rysunku jest modelem // pytanie posiada zdjecie D:

    129. Za pomocą którego protokołu należy wysłać pliki na serwer WWW?
    A. DHCP // DHCP to protokół używany do automatycznego przydzielania adresów IP klientom w sieci. Nie jest odpowiedni do wysyłania plików na serwer WWW.
    B. FTP // FTP (File Transfer Protocol) to protokół służący do transferu plików między komputerami w sieci. Jest właściwym protokołem do wysyłania plików na serwer WWW.
    C. POP3 // POP3 (Post Office Protocol version 3) to protokół używany do odbierania poczty elektronicznej. Nie jest odpowiedni do wysyłania plików na serwer WWW.
    D. DNS // DNS (Domain Name System) to system, który tłumaczy adresy domenowe na adresy IP. Nie jest odpowiedni do wysyłania plików na serwer WWW.
    
    130. Wynikiem działania zamieszczonej pętli zapisanej językiem PHP jest wypisanie kolejnych liczb // pytanie posiada zdjecie D:

    131. Które z poleceń naprawi uszkodzoną tabelę w języku SQL?
    A. REGENERATE TABLE tbl_name // Polecenie A. REGENERATE TABLE tbl_name jest niepoprawne i nie naprawi uszkodzonej tabeli w języku SQL. Nie ma takiej funkcji w SQL.
    B. REPAIR TABLE tblname // Polecenie B. REPAIR TABLE tblname jest poprawnym poleceniem używanym do naprawy uszkodzonej tabeli w języku SQL. Naprawa tabeli polega na przywróceniu spójności i integralności danych w tabeli.
    C. OPTIMIZE TABLE tbl_name // Polecenie C. OPTIMIZE TABLE tbl_name służy do optymalizacji tabeli, a nie do naprawy uszkodzeń. Optymalizacja tabeli polega na zoptymalizowaniu struktury i dostępu do danych w celu poprawy wydajności zapytań.
    D. ANALYZE TABLE tbl_name // Polecenie D. ANALYZE TABLE tbl_name jest używane do analizy tabeli i generowania statystyk dla optymalizatora zapytań. Nie naprawia ono uszkodzonej tabeli.
    
    132. Który z wymienionych formatów plików graficznych obsługuje przezroczystość?
    A. JPG // Format pliku JPG nie obsługuje przezroczystości. Jest to popularny format kompresji stratnej, który redukuje jakość obrazu w celu zmniejszenia rozmiaru pliku.
    B. PNG // Format pliku PNG obsługuje przezroczystość. Jest to popularny format graficzny, który utrzymuje wysoką jakość obrazu i obsługuje zarówno przezroczystość tła, jak i częściową przezroczystość.
    C. NEF // Format pliku NEF to format RAW używany przez aparaty Nikon. Nie obsługuje przezroczystości, jest to format zapisujący dane bezstratnie, zachowujący pełne informacje o obrazie.
    D. BMP // Format pliku BMP nie obsługuje przezroczystości. Jest to format prostego mapowania bitowego, który nie kompresuje obrazu, przez co zajmuje duże ilości miejsca na dysku.
    
    133. Który zapis stylu CSS ustawi tło bloku na kolor niebieski?
    A. div {shadow: blue;} // Punkt A: Ten zapis stylu CSS nie ustawi tła bloku na kolor niebieski. Zamiast tego używa właściwości 'shadow', która jest odpowiedzialna za ustalanie cienia elementu.
    B. div {border-color: blue;} // Punkt B: Ten zapis stylu CSS również nie ustawi tła bloku na kolor niebieski. Właściwość 'border-color' jest używana do ustalania koloru krawędzi elementu.
    C. div {color: blue;} // Punkt C: Ten zapis stylu CSS również nie ustawi tła bloku na kolor niebieski. Właściwość 'color' jest używana do ustalania koloru tekstu elementu.
    D. div {background-color: blue;} // Punkt D: Ten zapis stylu CSS jest poprawny i ustawi tło bloku na kolor niebieski. Właściwość 'background-color' jest używana do ustalania koloru tła elementu.
    
    134. Domyślna nazwa pliku konfiguracyjnego serwera Apache to
    A. .configuration // Punkt A: Nazwa pliku konfiguracyjnego serwera Apache to .configuration. Odpowiedź ta jest błędna. Poprawna odpowiedź to D. .htaccess.
    B. configuration.php // Punkt B: Nazwa pliku konfiguracyjnego serwera Apache to configuration.php. Odpowiedź ta jest błędna. Poprawna odpowiedź to D. .htaccess.
    C. htaccess.cnf // Punkt C: Nazwa pliku konfiguracyjnego serwera Apache to htaccess.cnf. Odpowiedź ta jest błędna. Poprawna odpowiedź to D. .htaccess.
    D. .htaccess // Punkt D: Nazwa pliku konfiguracyjnego serwera Apache to .htaccess. Odpowiedź ta jest poprawna. Plik .htaccess jest stosowany do konfiguracji serwera Apache. Pozwala na definiowanie zasad konfiguracji serwisu, takich jak zmiana ustawień katalogu, zarządzanie uprawnieniami dostępu i innych opcji serwera. Plik ten jest umieszczany w katalogu głównym serwisu.
    
    135. Organizacja zajmująca się ustalaniem standardu dla języka HTML nosi nazwę
    A. W3C // W3C to skrót od World Wide Web Consortium. Jest to organizacja, która zajmuje się ustalaniem standardów dla języka HTML. Jej celem jest zapewnienie jednolitości i zgodności w tworzeniu stron internetowych. Dzięki standardom ustalonym przez W3C, programiści i projektanci stron mogą tworzyć kod HTML, który będzie działać poprawnie na różnych przeglądarkach i urządzeniach.
    B. ISO // ISO to skrót od International Organization for Standardization. Jest to organizacja międzynarodowa, która zajmuje się ustalaniem standardów w różnych dziedzinach, w tym także w informatyce. Jednak w kontekście pytania, ISO nie jest odpowiedzią poprawną, ponieważ nie jest bezpośrednio związane z ustalaniem standardu dla języka HTML.
    C. NASK // NASK to skrót od Naukowa i Akademicka Sieć Komputerowa. Jest to polska organizacja, która zajmuje się rozwojem i utrzymaniem krajowej infrastruktury sieciowej oraz rozwojem technologii internetowych. Nie jest jednak odpowiedzią poprawną w kontekście pytania, ponieważ nie jest bezpośrednio związane z ustalaniem standardu dla języka HTML.
    D. WYSIWYG // WYSIWYG to skrót od What You See Is What You Get. Jest to technologia edytora, która umożliwia użytkownikowi podgląd dokładnie takiego wyglądu dokumentu, jak będzie wyglądał po wydrukowaniu lub opublikowaniu. Nie jest to odpowiedź poprawna, ponieważ nie jest związane z organizacją zajmującą się ustalaniem standardu dla języka HTML.
    
    136. Który z wymienionych systemów nie jest systemem CMS?
    A. Joomla // Joomla jest systemem CMS, który służy do tworzenia i zarządzania stronami internetowymi. Pozwala na łatwe dodawanie, edytowanie i usuwanie treści oraz dostosowywanie wyglądu strony.
    B. Adobe Flash // Adobe Flash nie jest systemem CMS. Jest to technologia do tworzenia animacji, interaktywnych aplikacji multimedialnych i gier. Flash umożliwia wyświetlanie grafiki, dźwięku i wideo w przeglądarce, ale nie jest przeznaczony do zarządzania treścią strony.
    C. WordPress // WordPress jest jednym z najpopularniejszych systemów CMS na świecie. Umożliwia tworzenie stron internetowych oraz blogów. Daje użytkownikom możliwość dodawania, edytowania i publikowania treści w łatwy sposób, bez konieczności znajomości programowania.
    D. Drupal // Drupal to kolejny system CMS, który umożliwia tworzenie i zarządzanie stronami internetowymi. Jest bardziej skomplikowany od WordPressa i oferuje większe możliwości personalizacji. Drupal jest popularny wśród dużych firm i organizacji, ze względu na swoje zaawansowane funkcje i możliwość skalowania.
    
    137. Która ze zdefiniowanych funkcji w języku PHP jako wynik zwraca połowę kwadratu wartości przekazanej?
    A. function licz($a) { echo $a*$a/2; } // Funkcja licz($a) wypisuje na ekranie wynik mnożenia wartości $a przez siebie, a następnie dzieli go przez 2. Nie zwraca żadnej wartości. W przypadku wartości $a = 4, funkcja wypisze 8 na ekranie.
    B. function licz($a) { return $a/2; } // Funkcja licz($a) zwraca wartość $a podzieloną przez 2. Nie wypisuje żadnego wyniku na ekranie. Przykładowo, dla wartości $a = 10, funkcja zwróci 5.
    C. function licz($a) { return $a*$a/2; } // Funkcja licz($a) zwraca wynik pomnożenia wartości $a przez samą siebie, a następnie podzielenia go przez 2. Nie wypisuje wyniku na ekranie. Dla wartości $a = 6, funkcja zwróci 18.
    D. function licz($a) { echo $a/2; } // Funkcja licz($a) wypisuje na ekranie wartość $a podzieloną przez 2. Nie zwraca żadnej wartości. Jeśli $a = 12, funkcja wypisze 6 na ekranie.
    
    138. W strukturalnych językach programowania w celu przechowania informacji o 50 uczniach (ich imionach, nazwiskach, średniej ocen) należy użyć
    A. tablicy 50 elementów o składowych strukturalnych // Tablica 50 elementów o składowych strukturalnych służy do przechowywania informacji o 50 uczniach w językach programowania. Każdy element tablicy może zawierać imię, nazwisko i średnią ocenę jednego ucznia. Dzięki temu można łatwo przechowywać i manipulować danymi każdego ucznia.
    B. struktury 50 elementów o składowych typu tablicowego // Struktura 50 elementów o składowych typu tablicowego również służy do przechowywania informacji o 50 uczniach. Tym razem jednak każdy element struktury może zawierać tablicę, która przechowuje imię, nazwisko i średnią ocenę jednego ucznia. Jest to alternatywny sposób organizacji danych, który może być bardziej elastyczny w niektórych przypadkach.
    C. tablicy 50 elementów o składowych łańcuchowych // Tablica 50 elementów o składowych łańcuchowych różni się od poprzednich opcji tym, że każdy element tablicy może zawierać łańcuch znaków. Jest to użyteczne, gdy potrzebujemy przechowywać tylko imiona lub nazwiska uczniów, a nie wszystkie trzy informacje. Jednak w tym pytaniu nie jest to optymalne rozwiązanie, ponieważ potrzebujemy przechowywać pełne informacje o uczniach.
    D. klasy 50 elementów typu tablicowego // Klasa 50 elementów typu tablicowego to inna opcja, która również umożliwia przechowywanie informacji o 50 uczniach. W tym przypadku każdy element klasy jest tablicą, która przechowuje imię, nazwisko i średnią ocenę jednego ucznia. Klasy są bardziej zaawansowaną koncepcją w językach programowania i mogą mieć dodatkowe metody i właściwości, które ułatwiają manipulację danymi.
    
    139. Aby zobaczyć wyniki działania skryptu napisanego w języku PHP, będącego elementem strony WWW, musi być on
    A. zinterpretowany po stronie serwera // Punkt A - skrypt napisany w języku PHP, będący elementem strony WWW, musi być zinterpretowany po stronie serwera. Oznacza to, że serwer na którym znajduje się strona WWW musi posiadać interpreter PHP, który przetworzy kod PHP na wyniki i wygeneruje odpowiednią zawartość do przesłania klientowi. Dopiero wtedy wyniki działania skryptu będą widoczne dla użytkownika.
    B. skompilowany po stronie klienta // Punkt B - skrypt napisany w języku PHP nie jest skompilowany po stronie klienta. Skrypt PHP jest interpretowany po stronie serwera, więc nie ma potrzeby kompilacji po stronie klienta. Klient (czyli przeglądarka internetowa) nie musi posiadać żadnego specjalnego oprogramowania czy narzędzi do kompilacji skryptów PHP, aby zobaczyć wyniki działania.
    C. skompilowany po stronie serwera // Punkt C - skrypt napisany w języku PHP nie jest skompilowany po stronie serwera. Zamiast tego, jest on interpretowany po stronie serwera. Oznacza to, że serwer, na którym znajduje się strona WWW, posiada specjalny interpreter PHP, który przetwarza kod PHP na wyniki. Dopiero po przetworzeniu kodu skryptu, serwer generuje odpowiednią zawartość do przesłania klientowi.
    D. zinterpretowany po stronie klienta // Punkt D - skrypt napisany w języku PHP nie jest zinterpretowany po stronie klienta. Interpretacja skryptu PHP odbywa się po stronie serwera. Klient, czyli przeglądarka internetowa, nie ma możliwości samodzielnego zinterpretowania kodu PHP. Wyniki działania skryptu są generowane przez serwer i przesyłane do klienta jako gotowa strona WWW.
    
    140. Projektowanie logicznego układu witryny polega na
    A. rozmieszczeniu elementów w konkretnych miejscach witryny // Projektowanie logicznego układu witryny polega na rozmieszczeniu elementów w konkretnych miejscach witryny. Oznacza to ustalenie, gdzie na stronie znajdą się różne elementy, takie jak nagłówek, treść, menu nawigacyjne, przyciski itp. Poprawne rozmieszczenie elementów pozwala na czytelność i intuicyjne korzystanie z witryny przez użytkowników.
    B. opracowaniu zestawu grafik dla witryny // Opracowanie zestawu grafik dla witryny jest osobnym etapem projektowania. Dotyczy to stworzenia grafik, które będą używane na stronie, takich jak logo, tła, ikony, obrazy itp. Grafiki te mają za zadanie wizualnie uatrakcyjnić stronę i przyciągnąć uwagę użytkowników.
    C. zdefiniowaniu treści witryny // Zdefiniowanie treści witryny obejmuje określenie, jakie informacje będą się na niej znajdować. To obejmuje teksty, zdjęcia, filmy i inne media, które przekazują treść i przekaz strony. Odpowiednio dobrana treść jest kluczowa dla skutecznej komunikacji z użytkownikami i ich zainteresowania.
    D. ustaleniu adresów URL dla podstron witryny // Ustalenie adresów URL dla podstron witryny dotyczy stworzenia czytelnych i zrozumiałych linków, które będą prowadzić do różnych części witryny. Poprawnie skonfigurowane adresy URL ułatwiają nawigację po stronie oraz indeksowanie witryny przez wyszukiwarki. Przykładowo, adres URL dla podstrony 'Kontakt' może być www.mojawitryna.pl/kontakt.
    
    141. Prosta animacja może być zapisana w formacie
    A. PSD // Punkt A to format PSD. PSD to skrót od Photoshop Document. Jest to format pliku używany przez program Adobe Photoshop do przechowywania i edytowania grafiki. Format PSD obsługuje wiele warstw, co pozwala na zaawansowaną edycję obrazów.
    B. BMP // Punkt B to format BMP. BMP to skrót od Bitmap Image File. Jest to prosty format pliku graficznego, który przechowuje obrazy bez straty jakości. BMP nie obsługuje kompresji, co oznacza, że pliki mogą być duże, ale mają wysoką jakość.
    C. GIF // Punkt C to format GIF. GIF to skrót od Graphics Interchange Format. Jest to format pliku graficznego, który obsługuje animacje. GIF wykorzystuje technikę kompresji stratowej, co oznacza, że pliki są mniejsze, ale mogą tracić na jakości. W formacie GIF można tworzyć proste animacje, które powtarzają się w pętli.
    D. TIFF // Punkt D to format TIFF. TIFF to skrót od Tagged Image File Format. Jest to format pliku graficznego, który obsługuje wiele typów danych, takich jak obrazy, zdjęcia i dokumenty tekstowe. TIFF oferuje wysoką jakość i może przechowywać zarówno obrazy z kompresją stratną, jak i bezstratną.
    
    142. Która z instrukcji umożliwia wysłanie tekstu do przeglądarki?
    A. echo // Instrukcja echo umożliwia wysłanie tekstu do przeglądarki. Jest to najbardziej podstawowa i najczęściej używana instrukcja w języku PHP. Służy do wyświetlania tekstu lub wartości zmiennych na stronie internetowej. Po wykonaniu instrukcji echo, tekst zostaje przesłany do przeglądarki i jest widoczny dla użytkownika.
    B. exit // Instrukcja exit służy do zakończenia działania skryptu w języku PHP. Po wykonaniu instrukcji exit, program przerywa swoje działanie i nie wykona żadnego kodu poza instrukcjami za tą instrukcją. Jest to przydatne w sytuacjach, gdy chcemy zakończyć działanie programu w określonym momencie.
    C. break // Instrukcja break służy do zakończenia pętli w języku PHP. Gdy wywołana jest instrukcja break wewnątrz pętli (np. for, while), pętla natychmiast się zatrzymuje i wykonanie programu przechodzi do pierwszej linii kodu po pętli. Jest to przydatne, gdy chcemy przerwać pętlę w trakcie jej działania.
    D. type // Instrukcja type w języku PHP nie istnieje. Nie jest to prawidłowa instrukcja w tym języku. Dlatego nie jest możliwe opisanie, co taka instrukcja robi i jak działa.
    
    143. Aby stworzyć tabelę w bazie danych, należy zastosować polecenie SQL
    A. ADD TABLE // Polecenie 'ADD TABLE' nie istnieje w języku SQL. W celu stworzenia tabeli w bazie danych, należy użyć polecenia 'CREATE TABLE'. Polecenie to tworzy nową tabelę w bazie danych i definiuje jej strukturę, tj. nazwę, typy danych kolumn oraz ewentualne ograniczenia.
    B. NEW TABLE // Polecenie 'NEW TABLE' nie istnieje w języku SQL. W celu stworzenia tabeli w bazie danych, należy użyć polecenia 'CREATE TABLE'. Polecenie to tworzy nową tabelę w bazie danych i definiuje jej strukturę, tj. nazwę, typy danych kolumn oraz ewentualne ograniczenia.
    C. PLUS TABLE // Polecenie 'PLUS TABLE' nie istnieje w języku SQL. W celu stworzenia tabeli w bazie danych, należy użyć polecenia 'CREATE TABLE'. Polecenie to tworzy nową tabelę w bazie danych i definiuje jej strukturę, tj. nazwę, typy danych kolumn oraz ewentualne ograniczenia.
    D. CREATE TABLE // Polecenie 'CREATE TABLE' służy do tworzenia tabeli w bazie danych. Polecenie to definiuje strukturę nowej tabeli, tj. jej nazwę, typy danych kolumn oraz ewentualne ograniczenia. Po wykonaniu tego polecenia, tabela zostaje utworzona w bazie danych i można zacząć dodawać do niej dane.
    
    144. Zdarzenie JavaScript, będące reakcją na pojedynczo kliknięty dowolny element strony, nosi nazwę
    A. onClick // onClick jest zdarzeniem JavaScript, które występuje w reakcji na pojedyncze kliknięcie dowolnego elementu strony. Kiedy użytkownik kliknie na dany element, zostaje uruchomiona funkcja obsługująca to zdarzenie. Dzięki temu można wykonać określone działania w odpowiedzi na kliknięcie, na przykład zmienić wygląd elementu lub wywołać inne funkcje.
    B. onDblClick // onDblClick jest zdarzeniem JavaScript, które występuje w reakcji na podwójne kliknięcie dowolnego elementu strony. Kiedy użytkownik dwukrotnie kliknie na dany element w krótkim odstępie czasu, zostaje uruchomiona funkcja obsługująca to zdarzenie. Można wykorzystać onDblClick do wykonania określonych działań, które mają być wywołane tylko po podwójnym kliknięciu.
    C. onLoad // onLoad jest zdarzeniem JavaScript, które występuje, gdy strona lub obraz zostaje w pełni załadowany. Może to być użyteczne, gdy chcemy wykonać pewne działania, gdy użytkownik widzi już całą stronę lub obraz. Na przykład można ukryć preloader lub rozpocząć odtwarzanie wideo automatycznie po załadowaniu.
    D. onKeyDown // onKeyDown jest zdarzeniem JavaScript, które występuje, gdy użytkownik wciska dowolny klawisz na klawiaturze. Można użyć tego zdarzenia do przechwytywania i obsługi wpisywanych przez użytkownika znaków. Na przykład można zablokować konkretny klawisz lub wywołać określone działania w zależności od wciskanych klawiszy.
    
    145. W skład typowego frameworka wchodzą
    A. zarządzanie komunikacją z bazą danych, mechanizm uruchamiania i przetwarzania akcji // Punkt A jest odpowiedzialny za zarządzanie komunikacją z bazą danych. Framework dostarcza mechanizmy, które umożliwiają nawiązanie połączenia z bazą danych, wykonywanie zapytań i manipulację danymi.
    B. domena i obsługa błędów // Punkt B dotyczy obsługi domeny i błędów. Framework zapewnia narzędzia, które umożliwiają definiowanie domeny aplikacji oraz obsługę błędów, tak aby programista mógł skoncentrować się na logice biznesowej.
    C. obsługa formularzy i wbudowany serwer // Punkt C odpowiada za obsługę formularzy i wbudowany serwer. Framework udostępnia funkcje, które ułatwiają tworzenie formularzy oraz dostarcza wbudowany serwer, który pozwala na obsługę żądań HTTP.
    D. mechanizm uruchamiania i przetwarzania akcji, oraz certyfikat http // Punkt D obejmuje mechanizm uruchamiania i przetwarzania akcji, oraz certyfikat HTTP. Framework dostarcza mechanizmy, które pozwalają na uruchamianie i przetwarzanie akcji (czyli operacji) w aplikacji. Dodatkowo, może zawierać funkcje umożliwiające obsługę certyfikatów HTTP, aby zapewnić bezpieczne połączenie z serwerem.
    
    146. W celu stworzenia relacji wiele do wielu łączącej tabele A i B wystarczy, że
    A. tabela A będzie zawierała te same pola co tabela B // W celu stworzenia relacji wiele do wielu łączącej tabele A i B nie jest konieczne, żeby tabela A zawierała te same pola co tabela B.
    B. wiele rekordów z tabeli A zduplikuje się w tabeli B // Wiele rekordów z tabeli A nie powinno duplikować się w tabeli B.
    C. zdefiniuje się trzecią tabelę z kluczami obcymi do tabel A i B // Aby stworzyć relację wiele do wielu pomiędzy tabelami A i B, konieczne jest zdefiniowanie trzeciej tabeli, która będzie zawierać klucze obce do tabel A i B.
    D. tabelę A połączy się z tabelą B poprzez zdefiniowanie kluczy obcych // Tabele A i B należy połączyć poprzez zdefiniowanie kluczy obcych, aby stworzyć relację wiele do wielu.
    
    147. W celu zapewnienia spójności danych w bazie programu Microsoft Access należy skorzystać
    A. z więzów integralności // Więzy integralności w bazie danych programu Microsoft Access służą do zapewnienia spójności danych. Pozwalają na ustalenie zależności między tabelami, np. relacje rodzic-dziecko. Dzięki nim można zapobiec wprowadzaniu w bazie danych danych niezgodnych z tymi ustalonymi zależnościami. Przykładem może być wpisanie do tabeli zamówienia identyfikatora klienta, który nie istnieje w tabeli klientów.
    B. z kwerendy aktualizującej // Kwerenda aktualizująca w programie Microsoft Access służy do aktualizacji danych w tabeli. Umożliwia wprowadzanie zmian w wielu rekordach naraz na podstawie określonego warunku. Na przykład, można użyć kwerendy aktualizującej, aby zmienić cenę wszystkich produktów w tabeli o określonym rodzaju.
    C. z defragmentacji bazy // Defragmentacja bazy danych w programie Microsoft Access służy do optymalizacji i poprawy efektywności działania bazy danych. Polega na organizacji danych w sposób bardziej efektywny, poprzez usunięcie luk i reorganizację danych na dysku. Defragmentacja pomaga zwiększyć szybkość działania bazy danych i zmniejszyć rozmiar pliku.
    D. z archiwizacji bazy // Archiwizacja bazy danych w programie Microsoft Access polega na tworzeniu kopii zapasowych danych w celu ich zabezpieczenia przed utratą lub uszkodzeniem. Poprzez regularne tworzenie kopii zapasowych można zapewnić możliwość przywrócenia danych w przypadku awarii systemu, awarii sprzętu lub przypadkowego usunięcia danych. Kopie zapasowe można przechowywać na zewnętrznych nośnikach, takich jak dyski zewnętrzne lub chmurze.
    
    148. W załączonym fragmencie kodu CSS kolor jest zapisany w postaci // pytanie posiada zdjecie D:

    149. W języku skryptowym JavaScript zmienne mogą być deklarowane
    A. w momencie pierwszego użycia zmiennej // W języku skryptowym JavaScript zmienne mogą być deklarowane w momencie pierwszego użycia zmiennej. Oznacza to, że nie musimy deklarować zmiennej z góry, ale możemy to zrobić w momencie, gdy po raz pierwszy będziemy jej używać. Jest to wygodne, ponieważ nie musimy z góry znać wszystkich zmiennych, które będziemy potrzebować w skrypcie. Dodatkowo, pozwala to uniknąć niepotrzebnego zajmowania miejsca w pamięci komputera, gdy zmienna nie jest używana.
    B. tylko na początku skryptu // W języku skryptowym JavaScript zmienne mogą być deklarowane tylko na początku skryptu. Oznacza to, że musimy zadeklarować wszystkie zmienne, których będziemy używać na początku skryptu, przed rozpoczęciem wykonywania innych instrukcji. Jest to bardziej tradycyjny sposób deklarowania zmiennych, który jest bardziej czytelny i przewidywalny, ale może być mniej elastyczny w niektórych przypadkach.
    C. tylko jeśli podamy typ zmiennej i jej nazwę // W języku skryptowym JavaScript zmienne mogą być deklarowane tylko jeśli podamy typ zmiennej i jej nazwę. Oznacza to, że musimy określić typ zmiennej (np. number, string, boolean) oraz jej nazwę podczas deklaracji. Jest to jednak opcjonalne, ponieważ JavaScript jest językiem dynamicznie typowanym i potrafi samodzielnie określić typ zmiennej na podstawie wartości, którą do niej przypiszemy.
    D. zawsze z poprzedzającym nazwę znakiem $ // W języku skryptowym JavaScript zmienne mogą być zawsze poprzedzone znakiem $. Jednakże, znak $ nie jest częścią składni deklaracji zmiennych w JavaScript. Oznacza to, że nie jest wymagane ani zalecane dodawanie znaku $ przed nazwą zmiennej. Możemy go użyć w nazwie zmiennej, ale nie ma to żadnego specjalnego znaczenia semantycznego czy funkcjonalnego.
    
    150. W językach programowania zmienna typu integer służy do przechowywania
    A. znaku // Zmienna typu integer służy do przechowywania znaku.
    B. liczby całkowitej // Zmienna typu integer służy do przechowywania liczby całkowitej.
    C. liczby rzeczywistej // Zmienna typu integer nie służy do przechowywania liczby rzeczywistej.
    D. wartości logicznej // Zmienna typu integer nie służy do przechowywania wartości logicznej.
    
    151. Jeśli rozmiar pliku graficznego jest zbyt duży do publikacji w Internecie, należy
    A. dodać kanał alfa // Dodanie kanału alfa jest nieodpowiednie w tym przypadku. Kanał alfa służy do dodawania przezroczystości do obrazu i nie wpływa na rozmiar pliku.
    B. zmniejszyć jego rozdzielczość // Zmniejszenie rozdzielczości obrazu pozwala na zmniejszenie ilości pikseli w obrazie, co redukuje rozmiar pliku. Jest to skuteczna metoda, jeśli zależy nam na zmniejszeniu rozmiaru pliku graficznego.
    C. zwiększyć jego głębię kolorów // Zwiększenie głębi kolorów obrazu polega na zwiększeniu liczby dostępnych kolorów w palecie, co może zwiększyć rozmiar pliku. Nie jest to odpowiednie rozwiązanie w kontekście zmniejszania rozmiaru pliku graficznego.
    D. zapisać w formacie BMP // Format BMP (Bitmap) jest jednym z formatów zapisu grafiki rastrowej. Jednakże, zapisywanie pliku graficznego w formacie BMP nie zmniejsza jego rozmiaru. W związku z tym, nie jest to odpowiednia metoda dla tego problemu.
    
    152. Które z poleceń umożliwia dodanie kolumny zadaniekompletne do tabeli zadania?
    A. ALTER TABLE zadania ADD COLUMN zadaniekompletne int // Polecenie ALTER TABLE umożliwia dodanie kolumny zadaniekompletne do tabeli zadania. Sposób tego dodania to użycie instrukcji ADD COLUMN, po której podajemy nazwę nowej kolumny (zadaniekompletne) oraz jej typ danych (int, czyli wartość całkowita). Dzięki temu poleceniu możemy rozszerzyć strukturę tabeli o nową kolumnę, która będzie przechowywać informacje o tym, czy zadanie zostało wykonane w pełni (kompletne) czy nie.
    B. ADD COLUMN zadaniekompletne WITH zadania // Polecenie ADD COLUMN WITH zadania nie istnieje. Nie ma takiej możliwości dodania kolumny do tabeli w ten sposób.
    C. CREATEINDEX zadania ADD COLUMN zadaniekompletne int // Polecenie CREATEINDEX nie służy do dodawania kolumny do tabeli. Służy ono do tworzenia indeksu na już istniejącej kolumnie. Dodatkowo, poprawne użycie tego polecenia powinno wyglądać inaczej, zamiast ADD COLUMN należy użyć słowa kluczowego INDEX.
    D. INSERT INTO zadania VALUES zadaniakompletne // Polecenie INSERT INTO służy do wstawiania nowego wiersza do tabeli, a nie do dodawania kolumny. Poprawne użycie tego polecenia powinno zawierać konkretne wartości, które chcemy wstawić do tabeli, a nie samo nazwanie kolumny.
    
    153. W bazie danych, w celu uporządkowania listy uczniów według roku urodzenia, należy użyć polecenia
    A. SELECT imie,nazwisko,klasa from uczniowie group by rok_urodzenia // Polecenie A nie jest odpowiednie w tym przypadku, ponieważ używa polecenia GROUP BY do grupowania uczniów według roku urodzenia, a nie uporządkowania ich w kolejności. Nie zapewnia ono posortowania według rok_urodzenia.
    B. SELECT imie,nazwisko,klasa from uczniowie order by rok_urodzenia // Polecenie B jest poprawne, ponieważ używa polecenia ORDER BY do uporządkowania uczniów według rok_urodzenia w kolejności rosnącej. Dzięki temu można uzyskać listę uczniów posortowaną według ich daty urodzenia.
    C. SELECT imie,nazwisko,klasa from uczniowie order by nazwisko // Polecenie C nie jest odpowiednie w tym przypadku, ponieważ używa polecenia ORDER BY do uporządkowania uczniów według nazwiska, a nie według rok_urodzenia.
    D. SELECT imie,nazwisko,klasa from uczniowie where rok_urodzenia = 1994 // Polecenie D nie jest odpowiednie w tym przypadku, ponieważ używa polecenia WHERE do filtrowania uczniów, którzy urodzili się w konkretnym roku (1994), a nie do uporządkowania ich według roku urodzenia.
    
    154. Wskaż dwa sposoby zabezpieczenia bazy danych Microsoft Access
    A. Ustalanie hasła do otwarcia bazy danych oraz zabezpieczeń na poziomie użytkownika // Ustalanie hasła do otwarcia bazy danych - jest to metoda, dzięki której możemy zabezpieczyć dostęp do naszej bazy danych przed osobami niepowołanymi. Po ustawieniu hasła, aby otworzyć bazę danych, konieczne jest podanie poprawnego hasła.
    B. Zaszyfrowanie pliku bazy danych oraz SMSy z kodem autoryzującym // Zabezpieczenia na poziomie użytkownika - polegają na określeniu uprawnień i ograniczeń dla poszczególnych użytkowników bazy danych. Dzięki temu możemy kontrolować, które czynności mogą być wykonane przez poszczególne osoby w bazie danych, jak np. odczyt, zapis, modyfikacja danych.
    C. Funkcje anonimowe oraz ustalenie hasła otwarcia bazy danych // Funkcje anonimowe - nie mają zastosowania w kontekście zabezpieczania bazy danych Microsoft Access.
    D. Ustalenie zabezpieczeń na poziomie użytkownika oraz sesji // Ustalenie zabezpieczeń na poziomie użytkownika oraz sesji - pozwala na kontrolowanie dostępu do bazy danych na poziomie użytkownika oraz w trakcie pojedynczej sesji. Możemy określić, które operacje mogą być wykonane przez poszczególnych użytkowników, jak również ustalić, jak długo użytkownik może być zalogowany do bazy danych.
    
    155. W zamieszczonym przykładzie pseudoklasa hover sprawi, że styl pogrubiony będzie przypisany // pytanie posiada zdjecie D:

    156. Certyfikat SSL jest stosowany do
    A. zapisania danych o sesjach tworzonych w witrynie // Certyfikat SSL jest stosowany do zapisania danych o sesjach tworzonych w witrynie. Dzięki niemu można zapewnić poufność i integralność informacji przekazywanych podczas sesji użytkownika.
    B. zidentyfikowania właściciela domeny // Certyfikat SSL jest również używany do zidentyfikowania właściciela domeny. Potwierdza, że strona internetowa jest kontrolowana przez rzeczywistą organizację lub osobę, co pomaga w budowaniu zaufania użytkowników.
    C. deszyfracji transmitowanych danych // Certyfikat SSL nie jest odpowiedzialny za deszyfrację transmitowanych danych. Jego głównym zadaniem jest zapewnienie bezpiecznego połączenia przez szyfrowanie danych, ale rozszyfrowanie odbywa się po stronie odbiorcy.
    D. blokowania szkodliwego oprogramowania w witrynie // Certyfikat SSL nie ma bezpośredniego wpływu na blokowanie szkodliwego oprogramowania w witrynie. Jego głównym celem jest zapewnienie bezpieczeństwa połączenia, ale ochrona przed złośliwym oprogramowaniem zależy od innych rodzajów zabezpieczeń, takich jak programy antywirusowe czy firewall.
    
    157. W języku SQL przywilej SELECT polecenia GRANT pozwala użytkownikowi baz danych na
    A. odczyt danych z tabeli // Polecenie GRANT przywileju SELECT w języku SQL umożliwia użytkownikowi baz danych odczyt danych z tabeli. Dzięki temu przywilejowi użytkownik będzie mógł przeglądać dane znajdujące się w określonej tabeli.
    B. tworzenie tabeli // Przywilej SELECT nie pozwala użytkownikowi na tworzenie tabeli. Służy jedynie do odczytu danych istniejących w tabeli.
    C. usunięcie danych z tabeli // Przywilej SELECT nie daje możliwości usunięcia danych z tabeli. Służy jedynie do odczytu danych.
    D. modyfikowanie danych w tabeli // Przywilej SELECT nie umożliwia modyfikowania danych w tabeli. Pozwala tylko na odczyt danych z tabeli.
    
    158. W języku HTML atrybut alt znacznika img jest wykorzystywany w celu zdefiniowania
    A. ścieżki i nazwy pliku źródłowego grafiki // Atrybut alt znacznika img służy do zdefiniowania ścieżki i nazwy pliku źródłowego grafiki.
    B. tekstu, który będzie wyświetlony, jeśli nie może być wyświetlona grafika // Atrybut alt znacznika img oznacza tekst, który będzie wyświetlony, jeśli nie może być wyświetlona grafika.
    C. podpisu, który zostanie wyświetlony pod grafiką // Atrybut alt znacznika img nie służy do definiowania podpisu, który zostanie wyświetlony pod grafiką.
    D. atrybutów grafiki, takich jak rozmiar, obramowanie, wyrównanie // Atrybut alt znacznika img nie kontroluje atrybutów grafiki, takich jak rozmiar, obramowanie i wyrównanie.
    
    159. Warunek zapisany językiem PHP wypisze liczbę, gdy // pytanie posiada zdjecie D:

    160. Analizując przedstawiony kod zapisany w języku HTML, można stwierdzić, że w przeglądarce // pytanie posiada zdjecie D:

    161. Baza danych zawiera tabelę o nazwie pracownicy o polach: nazwisko, imie, pensja, wiek. Jak wygląda składnia polecenia wyznaczającego średnią pensję pracowników?
    A. select AVG (nazwisko) into pensja // Polecenie A jest błędne. Nie można użyć funkcji AVG do obliczenia średniej pensji na podstawie pola nazwiska. Poprawny zapis to select AVG(pensja) from pracownicy.
    B. select VAR (pracownicy) into pensja // Polecenie B jest błędne. Nie można użyć funkcji VAR do obliczenia średniej pensji na podstawie tabeli pracownicy. Poprawny zapis to select AVG(pensja) from pracownicy.
    C. select AVG (pensja) from pracownicy // Polecenie C jest poprawne. Używa funkcji AVG do obliczenia średniej pensji na podstawie pola pensja w tabeli pracownicy.
    D. select VAR (pensja) from nazwisko // Polecenie D jest błędne. Nie można użyć funkcji VAR do obliczenia średniej pensji na podstawie pola nazwiska. Poprawny zapis to select AVG(pensja) from pracownicy.
    
    162. Do reprezentacji liczb zmiennoprzecinkowych w języku C stosowany jest typ
    A. int // Typ int służy do reprezentacji liczb całkowitych w języku C.
    B. bool // Typ bool służy do reprezentacji wartości logicznych (prawda/fałsz) w języku C.
    C. char // Typ char służy do reprezentacji pojedynczych znaków w języku C.
    D. double // Typ double służy do reprezentacji liczb zmiennoprzecinkowych (zmiennych rzeczywistych) w języku C.
    
    163. Polecenie SQL o treści: UPDATE artykuly SET cena = cena * 0.7 WHERE kod = 2; oznacza
    A. w tabeli artykuly obniża wartość każdego pola cena o 30% dla wszystkich artykułów // Punkt A: W tabeli artykuly obniża wartość każdego pola cena o 30% dla wszystkich artykułów. Oznacza to, że cena każdego artykułu zostaje zmniejszona o 30%.
    B. w tabeli artykuly obniża wartość każdego pola cena dla którego pole kod jest równe 2 // Punkt B: W tabeli artykuly obniża wartość każdego pola cena dla którego pole kod jest równe 2. Oznacza to, że tylko dla artykułów, których kod wynosi 2, cena zostaje zmniejszona.
    C. wprowadzenie w tabeli artykuly nowych pól cena i kod // Punkt C: Opcja C jest nieprawidłowa. Nie ma wprowadzania nowych pól ani dodawania nowych danych do tabeli artykuly.
    D. wprowadzenie w tabeli artykuly pola o nazwie cena ze znacznikiem kod // Punkt D: Opcja D jest nieprawidłowa. Nie ma wprowadzania nowego pola o nazwie 'cena ze znacznikiem kod' do tabeli artykuly.
    
    164. Do edycji grafiki wektorowej stosuje się program
    A. Paint // Program Paint nie jest stosowany do edycji grafiki wektorowej. Jest to prosty program do edycji grafiki rastrowej, który umożliwia rysowanie i modyfikację obrazów piksel po pikselu.
    B. Audacity // Program Audacity również nie jest stosowany do edycji grafiki wektorowej. Jest to narzędzie do edycji dźwięku, które umożliwia nagrywanie, odtwarzanie, cięcie i modyfikację dźwięków.
    C. Wordpad // Program Wordpad to proste narzędzie do edycji tekstu, które nie obsługuje edycji grafiki wektorowej. Jest stworzony głównie do pisania prostych dokumentów tekstowych.
    D. Corel Draw // Program Corel Draw jest jednym z najbardziej popularnych programów do edycji grafiki wektorowej. Pozwala na tworzenie i edycję złożonych ilustracji, logotypów, plakatów itp. Program obsługuje obiekty wektorowe, co oznacza, że grafika może być skalowana bez utraty jakości. Corel Draw oferuje również wiele narzędzi, filtrów i efektów, które ułatwiają tworzenie i edycję grafiki.
    
    165. W programowaniu obiektowym mechanizm współdzielenia pól i metod klasy w taki sposób, że klasa pochodna zawiera metody zdefiniowane w klasie bazowej nazywa się
    A. hermetyzacją // Hermetyzacja to mechanizm programowania obiektowego, który pozwala ukryć szczegóły implementacyjne pól i metod klasy, ograniczając dostęp do nich tylko wewnątrz klasy. Dzięki temu, hermetyzacja zapewnia większe bezpieczeństwo i kontrolę nad danymi i operacjami wykonywanymi na tych danych.
    B. wirtualizacją // Wirtualizacja to mechanizm programowania obiektowego, który umożliwia tworzenie metod wirtualnych w klasach bazowych. Metoda wirtualna to taka, która może zostać przesłonięta przez metody o tej samej nazwie w klasach pochodnych. Dzięki temu, w czasie wykonywania programu, przy wywołaniu danej metody zostanie automatycznie wywołana odpowiednia, przesłonięta metoda z klasy pochodnej.
    C. polimorfizmem // Polimorfizm to mechanizm programowania obiektowego, który pozwala na stosowanie tych samych operacji na różnych typach obiektów. Dzięki polimorfizmowi, za pomocą jednej metody można obsłużyć różne obiekty, co zwiększa elastyczność i ponowne użycie kodu.
    D. dziedziczeniem // Dziedziczenie to mechanizm programowania obiektowego, który umożliwia tworzenie klas pochodnych na podstawie istniejącej klasy bazowej. Klasa pochodna dziedziczy wszystkie pola i metody po klasie bazowej, co pozwala na ponowne wykorzystanie kodu i tworzenie hierarchii klas. Dziedziczenie umożliwia także rozszerzanie funkcjonalności klasy bazowej poprzez dodawanie nowych pól i metod w klasie pochodnej.
    
    166. Który z wymienionych znaczników języka HTML nie jest stosowany w celu formatowania tekstu?
    A. <em> // <em> jest znacznikiem używanym do oznaczania tekstów, które mają być wyróżnione lub pochylone. Powoduje, że tekst jest skośny.
    B. <sub> // <sub> jest znacznikiem używanym do oznaczania dolnych indeksów, które są wyświetlane poniżej linii bazowej tekstu.
    C. <div> // <div> jest znacznikiem używanym do tworzenia bloków lub sekcji, które można formatować i stylizować za pomocą CSS.
    D. <strong> // <strong> jest znacznikiem używanym do oznaczania tekstów, które mają być wyróżnione lub pogrubione. Powoduje, że tekst jest pogrubiony.
    
    167. Aby zdefiniować w języku HTML listę nienumerowaną, należy użyć znacznika
    A. <dd> // Znacznik <dd> jest używany do definiowania opisu elementu w liście opisowej (dl). Jest on zazwyczaj umieszczany po znaczniku <dt>.
    B. <dt> // Znacznik <dt> jest używany do definiowania elementu w liście opisowej (dl), który jest opisywany przez znacznik <dd>.
    C. <ol> // Znacznik <ol> jest używany do definiowania uporządkowanej listy numerowanej. Każdy element listy jest oznaczony numerem.
    D. <ul> // Znacznik <ul> jest używany do definiowania listy nienumerowanej. Każdy element listy jest oznaczony wycinkiem.
    
    168. W języku CSS właściwość font-size przyjmuje, według słów kluczowych, wartości
    A. tylko big i small // W punkcie A właściwość font-size przyjmuje tylko wartości big i small. Wartość big powoduje zwiększenie rozmiaru czcionki, natomiast wartość small powoduje zmniejszenie rozmiaru czcionki.
    B. wyłączenie small, medium, large // W punkcie B właściwość font-size nie przyjmuje wartości small, medium i large. Można używać innych słów kluczowych do określania rozmiaru czcionki.
    C. jedynie small, smaller,large, larger // W punkcie C właściwość font-size przyjmuje jedynie wartości small, smaller, large i larger. Wartość small powoduje zmniejszenie rozmiaru czcionki, a wartość large powoduje zwiększenie rozmiaru.
    D. ze zbioru xx-small, x-small, medium, large, x-large, xx-large // W punkcie D właściwość font-size przyjmuje wartości xx-small, x-small, medium, large, x-large i xx-large. Każda z tych wartości określa inny rozmiar czcionki, zależny od ustawień przeglądarki.
    
    169. W języku CSS, w celu zdefiniowania wewnętrznego górnego marginesu, czyli odstepu między elementem a otaczającym go obramowaniem, należy użyć polecenia
    A. padding-top // Polecenie padding-top w języku CSS służy do definiowania wewnętrznego górnego marginesu. Margines ten określa odstęp między zawartością elementu a jego otaczającym obramowaniem, czyli nerku. Dzięki temu można kontrolować odległość między zawartością elementu a jego górną granicą.
    B. outline-top // Polecenie outline-top nie istnieje w języku CSS. Nie ma możliwości definiowania wewnętrznego górnego marginesu za pomocą tego polecenia.
    C. border-top // Polecenie border-top w języku CSS służy do definiowania obramowania górnego elementu. Obramowanie to jest widoczne jako linia, która otacza zawartość elementu. Nie można go wykorzystać do definiowania wewnętrznego marginesu.
    D. local-top // Polecenie local-top nie istnieje w języku CSS. Nie ma możliwości definiowania wewnętrznego górnego marginesu za pomocą tego polecenia.
    
    170. Funkcja edytor WYSIWYG Adobe Dreamweaver służy do
    A. wyświetlania interaktywnego drzewa struktury HTML dla zawartości statycznej i dynamicznej // Funkcja edytora WYSIWYG Adobe Dreamweaver służy do wyświetlania interaktywnego drzewa struktury HTML dla zawartości statycznej i dynamicznej. Dzięki tej funkcji program pozwala wizualnie edytować kod HTML, co ułatwia projektowanie stron internetowych. Edytor wyświetla drzewo struktury HTML, które pokazuje hierarchię elementów na stronie. Można łatwo dodawać, usuwać i modyfikować elementy, a zmiany są natychmiast odzwierciedlane w kodzie HTML.
    B. definiowania kaskadowych arkuszy stylów dołączonych do witryny // Funkcja edytora WYSIWYG Adobe Dreamweaver umożliwia definiowanie kaskadowych arkuszy stylów (CSS) dołączonych do witryny. CSS jest językiem używanym do stylizacji stron internetowych, takich jak zmiana kolorów, rozmiarów czcionek, układów itp. W Dreamweaverze można w prosty sposób tworzyć i edytować arkusze stylów, które zostaną zastosowane do całej witryny lub tylko do wybranych elementów.
    C. formatowanie tekstu przy pomocy dostępnych znaczników // Funkcja edytora WYSIWYG Adobe Dreamweaver pozwala na formatowanie tekstu przy pomocy dostępnych znaczników HTML. Tekst na stronie internetowej może być pogrubiony, kursywą, podkreślony, linkowany itp. W Dreamweaverze można w łatwy sposób dodawać te formatowania za pomocą intuicyjnego interfejsu graficznego, bez konieczności ręcznego pisania kodu HTML.
    D. tworzenia szablonu strony internetowej // Funkcja edytora WYSIWYG Adobe Dreamweaver umożliwia tworzenie szablonów stron internetowych. Szablony to zbiór elementów, które są wspólne dla wielu stron na stronie internetowej. Dzięki temu można łatwo utrzymywać spójność designu strony. W Dreamweaverze można tworzyć i edytować szablony, a następnie je stosować przy tworzeniu nowych stron, co przyspiesza proces projektowania i ułatwia utrzymanie jednolitego wyglądu witryny.
    
    171. Aby witryna internetowa prawidłowo skalowała się w urządzeniach mobilnych, należy wielkość czcionki zdefiniować
    A. w pikselach // Wielkość czcionki definiuje się w pikselach. Piksele są jednostką wykorzystywaną do określania rozmiaru czcionki na stronie internetowej. Im większa liczba pikseli, tym większa czcionka będzie wyświetlana na stronie.
    B. w procentach // Wielkość czcionki definiuje się w procentach. Jest to jednostka procentowa, która odnosi się do rozmiaru czcionki w stosunku do domyślnej wielkości. Określenie wielkości czcionki w procentach pozwala na skalowanie czcionki w zależności od rozmiaru urządzenia, na którym jest wyświetlana witryna.
    C. w milimetrach // Wielkość czcionki definiuje się w milimetrach. Milimetry są jednostką miary stosowaną do określania rzeczywistego rozmiaru czcionki. Jednakże, korzystanie z tej jednostki może powodować problemy skalowania w różnych urządzeniach, co może prowadzić do nieodpowiedniego wyglądu witryny na różnych ekranach.
    D. tylko znacznikami big i small // Znakotnik big i small nie są jedynymi znacznikami, które mogą definiować rozmiar czcionki. Jednakże, nie są one zalecane ani popularne w dzisiejszych witrynach internetowych. Wstawianie tych znaczników może prowadzić do niejednolitego wyglądu czcionki na stronie.
    
    172. Znacznik meta języka HTML należy umieścić
    A. pomiędzy znacznikami body // Znacznik meta języka HTML należy umieścić pomiędzy znacznikami body. Służy on do umieszczenia dodatkowych informacji o stronie, takich jak autor, słowa kluczowe czy opis. Jest to ważny element dla wyszukiwarek internetowych, ponieważ umożliwia im lepsze zrozumienie treści strony.
    B. w części nagłówkowej witryny internetowej // Znacznik meta języka HTML należy umieścić w części nagłówkowej witryny internetowej. Jest to miejsce, gdzie znajdują się informacje ogólne o stronie, takie jak tytuł, autor czy kodowanie znaków. Znacznik meta zawiera dodatkowe metadane, które przeglądarka i wyszukiwarki mogą wykorzystać do lepszego zrozumienia i interpretacji strony.
    C. pomiędzy znacznikami paragrafu // Znacznik meta języka HTML nie powinien być umieszczany pomiędzy znacznikami paragrafu. Znacznik ten służy do zawierania informacji o stronie i powinien być umieszczony w odpowiednim miejscu, tj. w części nagłówkowej witryny.
    D. w stopce witryny internetowej // Znacznik meta języka HTML nie powinien być umieszczony w stopce witryny internetowej. Stopka zawiera zazwyczaj informacje dodatkowe, takie jak informacje o prawach autorskich czy dane kontaktowe. Znacznik meta powinien być umieszczony w części nagłówkowej strony.
    
    173. Prawidłowy, zgodny ze standardem języka XHTML, zapis samozamykającego się znacznika odpowiadającego za łamanie linii ma postać
    A. </ br> // Znacznik </ br> nie jest prawidłowym samozamykającym się znacznikiem w języku XHTML. Powinien być zapisany jako <br />, gdzie slash wskazuje na zakończenie znacznika.
    B. <br /> // Znacznik <br /> jest poprawnym samozamykającym się znacznikiem w języku XHTML. Służy do łamania linii w tekście.
    C. </br/> // Znacznik </br/> nie jest prawidłowym samozamykającym się znacznikiem w języku XHTML. Powinien być zapisany jako <br />, gdzie slash wskazuje na zakończenie znacznika.
    D. <br> </br> // Znacznik <br> </br> nie jest prawidłowym samozamykającym się znacznikiem w języku XHTML. Więcej niż jeden znacznik nie jest konieczny do łamania linii w tekście.
    
    174. Najprostszą i najmniej pracochłonną metodą przetestowania działania witryny internetowej w wielu przeglądarkach i ich różnych wersjach jest
    A. skorzystanie z walidatora języka HTML // Skorzystanie z walidatora języka HTML jest prostą metodą sprawdzania poprawności strony internetowej pod kątem zgodności z wytycznymi HTML. Walidator analizuje kod HTML i wskazuje na ewentualne błędy, takie jak brakujące znaczniki czy niepoprawna składnia. Jest to łatwy sposób na znalezienie i naprawę poważniejszych problemów w kodzie strony.
    B. skorzystanie z emulatora przeglądarek internetowych np. Browser Sandbox // Skorzystanie z emulatora przeglądarek internetowych, np. Browser Sandbox, pozwala na testowanie działania witryny w różnych przeglądarkach i ich wersjach. Emulator odtwarza środowisko danego przeglądarki, co pozwala na sprawdzenie czy strona wyświetla się poprawnie i działa zgodnie z oczekiwaniami w każdej z przeglądarek, bez konieczności instalacji i testowania na wielu fizycznych urządzeniach.
    C. zainstalowanie na kilku komputerach różnych przeglądarek i testowanie witryny // Zainstalowanie na kilku komputerach różnych przeglądarek i testowanie witryny jest również skutecznym sposobem na sprawdzenie działania witryny w różnych środowiskach. Dzięki temu można upewnić się, że strona działa poprawnie nie tylko na jednym typie przeglądarki, ale również na innych popularnych przeglądarkach, takich jak Chrome, Firefox czy Safari.
    D. testowanie witryny w programie Internet Explorer, zakładając kompatybilność innych przeglądarek // Testowanie witryny w programie Internet Explorer, zakładając kompatybilność innych przeglądarek, może być szybkim rozwiązaniem, ale może prowadzić do błędów w działaniu strony. Pomimo podobieństw między przeglądarkami, każda z nich może wspierać inne funkcje i posiadać inne zachowanie. Dlatego, testowanie tylko w jednej przeglądarce może spowodować nieprawidłowe działanie witryny w innych, bardziej popularnych przeglądarkach.
    
    175. Aby przenieść witrynę na serwer, można skorzystać z oprogramowania
    A. Bugzilla // A. Bugzilla - Bugzilla jest oprogramowaniem służącym do zarządzania błędami w oprogramowaniu. Nie jest ono przeznaczone do przenoszenia witryny na serwer.
    B. Go!Zilla // B. Go!Zilla - Go!Zilla jest menedżerem pobierania plików z internetu. Nie jest ono przeznaczone do przenoszenia witryny na serwer.
    C. FileZilla // C. FileZilla - FileZilla jest oprogramowaniem służącym do transferu plików na serwer. Jest często wykorzystywane do przenoszenia witryn na serwery. Działa poprzez nawiązanie połączenia z serwerem i przesyłanie plików między komputerem a serwerem.
    D. CloneZilla // D. CloneZilla - CloneZilla jest narzędziem do klonowania dysku twardego. Nie jest ono przeznaczone do przenoszenia witryny na serwer.
    
    176. Kolor zapisany kodem RGB, o wartości rgb(255, 128, 16) w kodzie szesnastkowym będzie miał wartość:
    A. #008010 // Odpowiedź A (#008010) jest niepoprawna. Kod RGB o wartości (255, 128, 16) w kodzie szesnastkowym będzie miał wartość #ff8010.
    B. #ff0f10 // Odpowiedź B (#ff0f10) jest niepoprawna. Kod RGB o wartości (255, 128, 16) w kodzie szesnastkowym będzie miał wartość #ff8010.
    C. #ff8010 // Odpowiedź C (#ff8010) jest poprawna. Kod RGB o wartości (255, 128, 16) w kodzie szesnastkowym będzie miał właśnie tę wartość.
    D. #ff8011 // Odpowiedź D (#ff8011) jest niepoprawna. Kod RGB o wartości (255, 128, 16) w kodzie szesnastkowym będzie miał wartość #ff8010.
    
    177. Plik graficzny należy zapisać w formacie GIF, jeżeli
    A. jest to grafika wektorowa // Punkt A oznacza, że plik graficzny powinien być zapisany w formacie GIF, jeśli jest to grafika wektorowa. Grafika wektorowa to rodzaj grafiki, w której obraz jest tworzony przy użyciu ścieżek i krzywych matematycznych. Format GIF jest często używany w przypadku grafik wektorowych, ponieważ pozwala zachować wysoką jakość obrazu bez strat w jakości.
    B. jest to obraz stereoskopowy // Punkt B nie odnosi się bezpośrednio do konkretnego typu pliku graficznego. Obraz stereoskopowy to rodzaj obrazu, który daje efekt trójwymiarowości, gdy jest oglądany przez specjalne okulary. Nie jest wymieniony jako warunek konieczny do zapisu w formacie GIF.
    C. jest potrzeba zapisu obrazu bez kompresji // Punkt C mówi, że plik graficzny powinien być zapisany w formacie GIF, jeśli istnieje potrzeba zapisu obrazu bez kompresji. Format GIF używa algorytmu kompresji stratnej, który może prowadzić do utraty jakości obrazu. Dlatego nie jest odpowiedni do zapisu obrazów bez kompresji.
    D. jest potrzeba zapisu obrazu lub animacji // Punkt D jest poprawną odpowiedzią. Mówi, że plik graficzny powinien być zapisany w formacie GIF, jeśli jest potrzeba zapisu obrazu lub animacji. Format GIF jest często wykorzystywany do zapisu obrazów o stałej kolorystyce oraz prostych animacji, takich jak ożywione ikony czy krótkie pętle animacji.
    
    178. Aby dopasować dźwięk do danego poziomu głośności, należy użyć efektu
    A. wyciszenia // Efekt wyciszenia służy do zmniejszania głośności dźwięku. Jest stosowany w celu redukcji hałasu lub nadmiernego natężenia dźwięku.
    B. normalizacji // Normalizacja jest procesem dostosowania głośności dźwięku do określonego poziomu. Poprzez normalizację, dźwięk jest wyrównywany, co pozwala na bardziej zrównoważone doświadczenie słuchowe.
    C. podbicia basów // Efekt podbicia basów polega na wzmacnianiu częstotliwości basowych w dźwięku. Jest używany w celu dodania głębi i mocy dźwiękom o niższych tonach.
    D. usuwania szumów // Usuwanie szumów jest procesem eliminacji lub redukcji niechcianych szumów lub zakłóceń z dźwięku. Może to być stosowane w celu poprawy jakości dźwięku lub usunięcia niepożądanych dźwięków tła.
    
    179. Instrukcja DROP języka SQL ma za zadanie
    A. usunąć istniejący obiekt // Instrukcja DROP w języku SQL służy do usuwania istniejącego obiektu. Może być wykorzystywana do usuwania tabel, widoków, indeksów, procedur, triggerów i innych obiektów w bazie danych. Po zastosowaniu instrukcji DROP, obiekt zostaje trwale usunięty z bazy danych.
    B. zmienić parametry obiektu // Instrukcja DROP w języku SQL nie służy do zmieniania parametrów obiektu. Jej głównym zadaniem jest usuwanie obiektów, a nie ich modyfikacja.
    C. zaktualizować dane obiektu // Instrukcja DROP w języku SQL nie służy do aktualizacji danych obiektu. Do aktualizacji danych wykorzystuje się instrukcję UPDATE. Instrukcja DROP służy jedynie do usuwania obiektów z bazy danych.
    D. dodać nowy obiekt // Instrukcja DROP w języku SQL nie służy do dodawania nowych obiektów. Służy ona tylko do usuwania istniejących obiektów z bazy danych.
    
    180. Baza danych zawiera tabelę uczniowie z polami: imie, nazwisko, klasa. Aby odnaleźć imiona i nazwiska tych uczniów, których nazwiska rozpoczynają się literą M, należy zastosować polecenie SQL
    A. SELECT nazwisko, imie FROM uczniowie WHERE nazwisko IN "M%"; // Punkt A- SELECT nazwisko, imie FROM uczniowie WHERE nazwisko IN "M%". To polecenie SQL wybierze nazwiska i imiona tych uczniów, których nazwisko zaczyna się od litery M. Wykorzystuje ono operator IN, który sprawdza czy nazwisko znajduje się w podanym zbiorze.
    B. SELECT nazwisko, imie FROM uczniowie WHERE nazwisko LIKE "M%"; // Punkt B- SELECT nazwisko, imie FROM uczniowie WHERE nazwisko LIKE "M%". To polecenie SQL wybierze nazwiska i imiona tych uczniów, których nazwisko rozpoczyna się od litery M. Wykorzystuje ono operator LIKE, który sprawdza czy nazwisko pasuje do podanego wzorca.
    C. SELECT nazwisko, imie FROM uczniowie ORDER BY nazwisko = "M%"; // Punkt C- SELECT nazwisko, imie FROM uczniowie ORDER BY nazwisko = "M%". To polecenie SQL posortuje wyniki według tego, czy nazwisko równa się 'M%'. Jednak nie spełnia ono warunku wyszukiwania uczniów, których nazwiska zaczynają się od litery M.
    D. SELECT nazwisko, imie FROM uczniowie ORDER BY nazwisko IN "M%"; // Punkt D- SELECT nazwisko, imie FROM uczniowie ORDER BY nazwisko IN "M%". To polecenie SQL posortuje wyniki według tego, czy nazwisko znajduje się w zbiorze 'M%'. Jednak nie spełnia ono warunku wyszukiwania uczniów, których nazwiska zaczynają się od litery M.
    
    181. Baza danych zawiera tabele z polami: . Aby wyświetlić wszystkie nazwy artykułów wyłącznie typu pralka, dla których cena jest z przedziału 1000 PLN i 1500 PLN, należy zastosować polecenie
    A. SELECT nazwa FROM artykuly WHERE typ="pralka" AND cena FROM 1000 TO 1500; // W punkcie A, polecenie SELECT nazwa FROM artykuly WHERE typ="pralka" AND cena FROM 1000 TO 1500; działa niepoprawnie. Polecenie to próbuje wyświetlić nazwy artykułów typu pralka, których cena jest z przedziału od 1000 PLN do 1500 PLN. Jednakże, zapis 'FROM 1000 TO 1500' jest niepoprawny w kontekście zapytania SQL. Poprawną składnią dla określenia przedziału jest 'BETWEEN 1000 AND 1500'.
    B. SELECT nazwa FROM artykuly WHERE typ="pralka" OR cena BETWEEN 1000 OR 1500; // W punkcie B, polecenie SELECT nazwa FROM artykuly WHERE typ="pralka" OR cena BETWEEN 1000 OR 1500; działa niepoprawnie. Polecenie to próbuje wyświetlić nazwy artykułów typu pralka lub artykułów, których cena wynosi 1000 PLN lub 1500 PLN. Jednakże, zapis 'BETWEEN 1000 OR 1500' jest niepoprawny w kontekście zapytania SQL. Poprawną składnią dla określenia przedziału jest 'BETWEEN 1000 AND 1500'. Ponadto, używamy operatora logicznego 'OR', który oznacza, że prawdziwe będą wszystkie rekordy spełniające przynajmniej jeden z warunków, dlatego wynikiem zapytania mogą być także artykuły innych typów z ceną 1000 PLN lub 1500 PLN.
    C. SELECT nazwa FROM artykuly WHERE typ="pralka" OR cena BETWEEN 1000 AND 1500; // W punkcie C, polecenie SELECT nazwa FROM artykuly WHERE typ="pralka" OR cena BETWEEN 1000 AND 1500; działa niepoprawnie. Polecenie to próbuje wyświetlić nazwy artykułów typu pralka lub artykułów, których cena jest z przedziału od 1000 PLN do 1500 PLN. Jednakże, nadal używamy operatora logicznego 'OR', który oznacza, że prawdziwe będą wszystkie rekordy spełniające przynajmniej jeden z warunków, dlatego wynikiem zapytania mogą być także artykuły innych typów z ceną z przedziału od 1000 PLN do 1500 PLN.
    D. SELECT nazwa FROM artykuly WHERE typ="pralka" AND cena BETWEEN 1000 AND 1500; // W punkcie D, polecenie SELECT nazwa FROM artykuly WHERE typ="pralka" AND cena BETWEEN 1000 AND 1500; działa poprawnie. Polecenie to wyświetla nazwy artykułów typu pralka, których cena jest z przedziału od 1000 PLN do 1500 PLN. Używamy operatora logicznego 'AND', który oznacza, że prawdziwe będą tylko rekordy spełniające oba warunki - typ równy 'pralka' oraz cena znajdująca się w przedziale od 1000 PLN do 1500 PLN.
    
    182. Wartość pola tabeli pełniącego rolę klucza podstawowego
    A. musi być unikalna // Wartość pola tabeli pełniącego rolę klucza podstawowego musi być unikalna. To oznacza, że żadne inne rekordy w tabeli nie mogą mieć tej samej wartości w tym polu. Klucz podstawowy jest ważny, ponieważ jest używany do jednoznacznej identyfikacji rekordów w tabeli.
    B. jest zawsze typu numerycznego // Typ wartości pola tabeli pełniącego rolę klucza podstawowego może być różny, nie zawsze musi być numeryczny. Może to być także wartość tekstowa, data lub inny typ danych, który najlepiej odpowiada danej tabeli i jej rekordom.
    C. służy do szyfrowania zawartości tabeli // Pole tabeli pełniące rolę klucza podstawowego nie służy do szyfrowania zawartości tabeli. Jego główną funkcją jest jednoznaczne identyfikowanie rekordów.
    D. może przyjmować wartość pustą (NULL) // Wartość pola tabeli pełniącego rolę klucza podstawowego może przyjąć wartość pustą (NULL), ale zazwyczaj nie jest to zalecane. Wartość pusta oznacza brak wartości w tym polu i może prowadzić do problemów przy identyfikacji rekordów.
    
    183. Aby utworzyć relację jeden do wielu, w tabeli po stronie , należy zdefiniować
    A. klucz obcy wskazujący na klucz obcy tabeli po stronie // Aby utworzyć relację jeden do wielu, w tabeli po stronie , należy zdefiniować klucz obcy wskazujący na klucz podstawowy tabeli po stronie. Oznacza to, że w tabeli po stronie wiele, musimy utworzyć klucz obcy, który będzie wskazywał na klucz podstawowy tabeli po stronie jeden. Klucz obcy służy do powiązania rekordów z dwóch tabel i umożliwia tworzenie relacji między nimi.
    B. klucz sztuczny odnoszący się do kluczy podstawowych obu tabel // Opcja B jest niepoprawna. Klucz sztuczny dotyczy tworzenia unikalnego identyfikatora dla każdego rekordu w tabeli, nie jest jednak związany bezpośrednio z tworzeniem relacji jeden do wielu.
    C. klucz obcy wskazujący na klucz podstawowy tabeli po stronie // Poprawna odpowiedź to C. Klucz obcy wskazuje na klucz podstawowy tabeli po stronie jeden. To znaczy, że w tabeli po stronie wiele, mamy klucz obcy, który odnosi się do klucza podstawowego tabeli po stronie jeden. Dzięki temu możemy powiązać rekordy z obu tabel i utworzyć relację jeden do wielu.
    D. klucz podstawowy wskazujący na klucz podstawowy tabeli po stronie // Opcja D jest niepoprawna. Klucz podstawowy wskazujący na klucz podstawowy tabeli po stronie nie ma zastosowania w tworzeniu relacji jeden do wielu. Klucz podstawowy służy do unikalnego identyfikowania rekordu w tabeli.
    
    184. Narzędziem służącym do grupowania i prezentowania informacji z wielu rekordów w celu ich drukowania lub rozpowszechniania jest
    A. raport // Raport jest narzędziem służącym do grupowania i prezentowania informacji z wielu rekordów w celu ich drukowania lub rozpowszechniania. Raporty pozwalają na uporządkowane wyświetlanie danych z bazy danych, zazwyczaj w formie tabeli lub wykresu. Dzięki nim można z łatwością analizować dane i czerpać z nich wnioski.
    B. kwerenda // Kwerenda to narzędzie umożliwiające przeprowadzanie zapytań do bazy danych w celu otrzymania określonych informacji. Kwerendy pozwalają filtrować, sortować i łączyć dane z różnych tabel. Są używane do wydobycia konkretnych informacji z dużej ilości danych oraz do przetwarzania tych danych w celu analizy lub generowania raportów.
    C. formularz // Formularz to narzędzie, które umożliwia wprowadzanie, edytowanie i wyświetlanie danych w bazie danych. Służy do tworzenia interfejsu użytkownika, który ułatwia wprowadzanie danych do systemu. Formularze pozwalają na wygodne i kontrolowane wprowadzanie danych poprzez pola tekstowe, listy rozwijalne, pola wyboru itp.
    D. makropolecenie // Makropolecenie to narzędzie pozwalające na automatyzację czynności w bazie danych. Poprzez tworzenie makr można zdefiniować sekwencje poleceń, które zostaną wykonane w odpowiedniej kolejności. Makropolecenia mogą być wykorzystywane do automatyzacji procesów, takich jak generowanie raportów, aktualizacja danych czy uruchamianie określonych akcji po konkretnych zdarzeniach.
    
    185. Aby uprościć wprowadzenie i edytowanie danych w tabeli, należy zdefiniować
    A. kwerendę SELECT // Kwerenda SELECT to zapytanie do bazy danych, które służy do pobierania konkretnych danych z tabeli. Jest używana, aby wybrać i wyświetlić określone wiersze i kolumny z tabeli.
    B. formularz // Formularz to narzędzie, które umożliwia użytkownikowi wprowadzanie i edytowanie danych w tabeli. Działa jako interfejs między użytkownikiem a bazą danych, zapewniając prosty i intuicyjny sposób wprowadzania danych.
    C. raport // Raport to narzędzie, które służy do prezentacji danych z tabeli w czytelny sposób. Po utworzeniu raportu możemy go wydrukować lub zapisac w formie pliku PDF, Excela lub innych formatów.
    D. filtr // Filtr to funkcja, która umożliwia wyświetlanie tylko tych danych, które spełniają określone kryteria. Działa na podstawie określonych warunków, filtrując i ograniczając widoczność danych w tabeli.
    
    186. Baza danych 6-letniej szkoły podstawowej zawiera tabelę z polami: . Wszyscy uczniowie klas 1-5 zdali do następnej klasy. Aby zwiększyć wartość w polu klasa o 1 należy użyć polecenia
    A. SELECT szkola FROM klasa=klasa+1 WHERE klasa >=1 AND klasa <=5; // Punkt A to zapytanie SELECT, które zwraca pole 'szkola' dla rekordów, gdzie pole 'klasa' jest większe lub równe 1 i mniejsze lub równe 5. Nie zwiększa wartości w polu 'klasa', tylko wyświetla dane.
    B. SELECT nazwisko, imie FROM klasa=klasa+1 WHERE klasa>1 OR klasa <5; // Punkt B to zapytanie SELECT, które zwraca pola 'nazwisko' i 'imie' dla rekordów, gdzie pole 'klasa' jest większe od 1 lub mniejsze od 5. Nie zwiększa wartości w polu 'klasa', tylko wyświetla dane.
    C. UPDATE szkola SET klasa=klasa+1 WHERE klasa>=1 AND klasa <=5; // Punkt C to polecenie UPDATE, które zwiększa wartość w polu 'klasa' o 1 dla rekordów, gdzie pole 'klasa' jest większe lub równe 1 i mniejsze lub równe 5. Aktualizuje wartość w bazie danych.
    D. UPDATE nazwisko, imie SET klasa=klasa+1 WHERE klasa>1 OR klasa<5; // Punkt D jest niepoprawny, ponieważ polecenie UPDATE nie może zawierać nazwisk i imion w klauzuli SET.
    
    187. Uprawnienia obiektowe, nadawane użytkownikom serwera bazy danych, mogą pozwalać lub zabraniać
    A. dziedziczyć uprawnienia // Uprawnienie obiektowe, które pozwala użytkownikom serwera bazy danych dziedziczyć uprawnienia. Dzięki temu, użytkownicy mogą odziedziczyć uprawnienia, które zostały nadane właścicielowi obiektu.
    B. modyfikować role i konta użytkowników // Uprawnienie obiektowe, które umożliwia użytkownikom serwera bazy danych modyfikowanie ról i kont użytkowników. Dzięki temu, użytkownicy mogą zarządzać rolami i kontami innych użytkowników.
    C. wykonywać instrukcje, takie jak tworzenie kopii zapasowej // Uprawnienie obiektowe, które pozwala użytkownikom serwera bazy danych wykonywać instrukcje, takie jak tworzenie kopii zapasowej. Dzięki temu, użytkownicy mogą regularnie tworzyć kopie zapasowe danych, aby zapewnić ich bezpieczeństwo.
    D. wykonywać operacje na bazie, takie jak wstawanie lub modyfikowanie danych // Uprawnienie obiektowe, które umożliwia użytkownikom serwera bazy danych wykonywanie operacji na bazie, takich jak wstawianie lub modyfikowanie danych. Dzięki temu, użytkownicy mogą manipulować danymi w bazie, dodając nowe informacje lub zmieniając istniejące.
    
    188. Przed wykonaniem kopii bezpieczeństwa bazy danych, tak aby kopia ta była poprawna i możliwa do późniejszego odtworzenia, należy sprawdzić
    A. możliwość udostępnienia bazy danych // Punkt A dotyczy możliwości udostępnienia bazy danych. Przed wykonaniem kopii bezpieczeństwa, ważne jest sprawdzenie, czy baza danych jest dostępna i czy można ją udostępnić. Jeśli baza danych jest niedostępna lub nie można jej udostępnić, wykonanie kopii może być niemożliwe.
    B. prawa dostępu do serwera bazy danych // Punkt B dotyczy praw dostępu do serwera bazy danych. Przed wykonaniem kopii bezpieczeństwa, należy sprawdzić, czy posiadamy odpowiednie uprawnienia dostępu do serwera bazy danych. Bez odpowiednich praw dostępu, kopia nie będzie mogła być wykonana.
    C. poprawność składni zapytań // Punkt C dotyczy poprawności składni zapytań. Przed wykonaniem kopii bezpieczeństwa, należy sprawdzić, czy wszystkie zapytania używane w bazie danych są poprawnie sformułowane. Jeśli składnia zapytań jest niepoprawna, utworzenie poprawnej kopii może być niemożliwe.
    D. spójność bazy danych // Punkt D dotyczy spójności bazy danych. Przed wykonaniem kopii bezpieczeństwa, ważne jest sprawdzenie, czy baza danych jest spójna, czyli czy wszystkie dane i relacje między nimi są poprawne. Jeśli baza danych jest niespójna, to skopiowanie jej w takim stanie może prowadzić do nieprawidłowego odtworzenia w przyszłości.
    
    189. W MS SQL Server polecenie RESTORE DATABASE służy do
    A. odtworzenia bazy danych z kopii bezpieczeństwa // Polecenie RESTORE DATABASE w MS SQL Server służy do odtworzenia bazy danych z kopii bezpieczeństwa. Oznacza to, że można przywrócić bazę danych do stanu poprzedniego, korzystając z wcześniej utworzonej kopii zapasowej. Jest to przydatne w sytuacjach, gdy baza danych uległa awarii lub zostały wprowadzone błędne zmiany i konieczne jest przywrócenie poprawnej wersji bazy.
    B. odświeżenia bazy danych z kontrolą więzów integralności // Odświeżenie bazy danych z kontrolą więzów integralności to nie jest funkcja polecenia RESTORE DATABASE w MS SQL Server. Kontrola więzów integralności polega na sprawdzeniu, czy dane w bazie są zgodne z określonymi regułami i zasadami. Jest to ważne, aby zapewnić spójność danych i uniknąć błędów.
    C. przebudowania bazy danych w oparciu o buforowane dane // Przebudowanie bazy danych w oparciu o buforowane dane nie stanowi funkcji polecenia RESTORE DATABASE w MS SQL Server. Buforowanie danych to proces przechowywania części danych w pamięci podręcznej, co przyspiesza dostęp do tych danych. Przebudowa bazy danych to zaawansowana operacja mająca na celu optymalizację struktury bazy danych.
    D. usunięcia bazy danych z serwera centralnego subskrybenta // Usunięcie bazy danych z serwera centralnego subskrybenta to także nie jest funkcja polecenia RESTORE DATABASE w MS SQL Server. Usunięcie bazy danych oznacza trwałe usunięcie wszystkich jej danych i struktury. Jest to operacja nieodwracalna i wymaga ostrożności, ponieważ raz usunięte dane nie mogą być przywrócone.
    
    190. W języku PHP zmienna typu float przyjmuje wartości
    A. logiczne // Zmienna typu float w języku PHP nie przyjmuje wartości logicznych.
    B. nieliczbowe // Zmienna typu float w języku PHP nie przyjmuje wartości nieliczbowych.
    C. tylko całkowite // Zmienna typu float w języku PHP nie przyjmuje tylko wartości całkowitych.
    D. zmiennoprzecinkowe // Zmienna typu float w języku PHP przyjmuje wartości zmiennoprzecinkowe.
    
    191. Dany jest fragment kodu PHP z zdeklarowaną zmienną typu tablicowego. W wyniku wykonania kodu zostanie wpisane imię // pytanie posiada zdjecie D:

    192. Przedstawiony kod języka PHP // pytanie posiada zdjecie D:

    193. W języku JavaScript poprawnie nadana zmienna to
    A. #imie // Zmienna oznaczona jako #imie nie jest poprawnie nadana w języku JavaScript. Nazwa zmiennej musi zaczynać się od litery, dolara ($) lub podkreślenia (_), i może zawierać tylko litery, cyfry, dolary ($) i podkreślenia (_). Nie może zawierać znaku #.
    B. imie2 // Zmienna oznaczona jako imie2 jest poprawnie nadana w języku JavaScript. Nazwa zmiennej zaczyna się od litery 'i', co spełnia kryteria pierwszego znaku. Kolejne znaki to 'm', 'i', 'e' oraz '2', które są dozwolone w nazwie zmiennej.
    C. imię2 // Zmienna oznaczona jako imię2 nie jest poprawnie nadana w języku JavaScript. Nazwa zmiennej zawiera znak 'ę', który nie jest dozwolony w nazwie zmiennej. Nazwa zmiennej może zawierać tylko litery, cyfry, dolary ($) i podkreślenia (_).
    D. imię% // Zmienna oznaczona jako imię% nie jest poprawnie nadana w języku JavaScript. Nazwa zmiennej zawiera znak '%', który nie jest dozwolony w nazwie zmiennej. Nazwa zmiennej może zawierać tylko litery, cyfry, dolary ($) i podkreślenia (_).
    
    194. Zakładając, że zmienne: a, b, c przechowują wartości numeryczne, wynikiem działania warunku będzie wypisanie liczby // pytanie posiada zdjecie D:

    195. Fragment kodu języku PHP ma następującą postać. Wynikiem działania pętli będzie wypisanie liczb: // pytanie posiada zdjecie D:

    196. Zadaniem funkcji zapisanej w języku PHP jest // pytanie posiada zdjecie D:

    197. Wykonanie kodu JavaScript w przeglądarce wymaga
    A. debugowania // W przypadku wykonania kodu JavaScript w przeglądarce, nie jest potrzebne debugowanie. Debugowanie odnosi się do procesu znajdowania i usuwania błędów w kodzie. Jest to pomocne podczas tworzenia lub naprawiania kodu, ale nie jest niezbędne do wykonania kodu w przeglądarce.
    B. kompilowania // Kompilowanie odnosi się do procesu konwertowania kodu źródłowego na kod maszynowy. W przypadku JavaScriptu, nie jest konieczne kompilowanie przed wykonaniem w przeglądarce.
    C. interpretowania // Poprawna odpowiedź to interpretowanie. JavaScript jest językiem interpretowanym, co oznacza, że kod jest czytany linia po linii i natychmiast wykonywany przez przeglądarkę. Przeglądarka przetwarza kod JavaScript na bieżąco.
    D. zamiany na kod maszynowy // Zamiana na kod maszynowy jest procesem tłumaczenia kodu źródłowego na język zrozumiały dla procesora komputera. W przypadku JavaScriptu, nie jest konieczna zamiana na kod maszynowy przed wykonaniem w przeglądarce.
    
    198. Kod strony WWW napisanej w języku PHP
    A. jest wykonywany po stronie klienta // Kod strony WWW napisanej w języku PHP jest wykonywany po stronie serwera. Oznacza to, że kod PHP jest przetwarzany i generuje stronę internetową na serwerze, a następnie wysyłana jest do przeglądarki klienta.
    B. jest wykonywany po stronie serwera // Kod strony WWW napisanej w języku PHP jest wykonywany po stronie serwera. Serwer odbiera żądanie od klienta, przetwarza kod PHP i generuje stronę internetową, która jest następnie wysyłana do przeglądarki klienta.
    C. może być uruchomiony bez obsługi serwera WWW // Kod strony WWW napisanej w języku PHP nie może być uruchomiony bez obsługi serwera WWW. Do przetwarzania kodu PHP wymagane jest środowisko serwera, takie jak Apache, Nginx czy IIS.
    D. jest przetwarzany na tych samych zasadach co JavaScript // Kod strony WWW napisanej w języku PHP przetwarzany jest na inne zasady niż JavaScript. PHP jest językiem skryptowym wykonywanym po stronie serwera, podczas gdy JavaScript jest wykonywany po stronie klienta, czyli w przeglądarce.
    
    199. Zakładając, że zmienna tablicowa $tab jest wypełniona liczbami naturalnymi, wynikiem programu będzie wypisanie // pytanie posiada zdjecie D:

    200. Fragment kodu w języku JavaScript realizujący dodawanie dwóch liczb ma następującą postać. Aby dodawanie wykonane było po kliknięciu przycisku o nazwie , należy w wykropkowane miejsce wstawić // pytanie posiada zdjecie D:

    201. Komentarz w języku JavaScript rozpoczyna się od znaku lub znaków
    A. <!-- // Komentarz w języku JavaScript rozpoczyna się od znaku <!--. Ten znak informuje interpreter JavaScriptu o tym, że następujący tekst ma zostać zignorowany i nie powinien być wykonany.
    B. <? // Znak <? nie jest poprawnym sposobem rozpoczęcia komentarza w języku JavaScript. Może być używany w innych językach, ale nie ma zastosowania w JavaScript.
    C. // // Komentarz w języku JavaScript rozpoczyna się od dwóch ukośników //. Jest to najbardziej powszechny sposób tworzenia komentarzy jednolinijkowych. Wszystko po dwóch ukośnikach jest traktowane jako komentarz i nie jest wykonywane przez interpreter.
    D. # // Znak # nie jest używany do rozpoczynania komentarzy w języku JavaScript. Jest on używany w innych językach, takich jak Python, jako znacznik komentarza.
    
    202. Polecenie pg_connect języka PHP służy do połączenia z bazą
    A. mySQL // Polecenie pg_connect języka PHP służy do nawiązania połączenia z bazą danych mySQL. Pozwala na komunikację z serwerem mySQL i wykonywanie operacji takich jak pobieranie danych, dodawanie nowych rekordów czy aktualizacja istniejących wpisów.
    B. MS SQL // Polecenie pg_connect języka PHP służy do nawiązania połączenia z bazą danych MS SQL. Pozwala na komunikację z serwerem MS SQL i wykonywanie operacji takich jak pobieranie danych, dodawanie nowych rekordów czy aktualizacja istniejących wpisów.
    C. PostgreSQL // Polecenie pg_connect języka PHP służy do nawiązania połączenia z bazą danych PostgreSQL. Pozwala na komunikację z serwerem PostgreSQL i wykonywanie operacji takich jak pobieranie danych, dodawanie nowych rekordów czy aktualizacja istniejących wpisów.
    D. MS ACCESS // Polecenie pg_connect języka PHP służy do nawiązania połączenia z bazą danych MS ACCESS. Pozwala na komunikację z bazą MS ACCESS i wykonywanie operacji takich jak pobieranie danych, dodawanie nowych rekordów czy aktualizacja istniejących wpisów.
    
    203. Aby zamieścić aplikację PHP w internecie, należy jej pliki źródłowe skopiować na serwer za pomocą protokołu
    A. FTP // Protokół FTP (File Transfer Protocol) służy do transferu plików na serwer. Jest używany do skopiowania plików źródłowych aplikacji PHP na serwer, aby były dostępne w Internecie.
    B. HTTP // Protokół HTTP (Hypertext Transfer Protocol) służy do komunikacji między klientem a serwerem w celu przesyłania danych, w tym również aplikacji webowych. Jednak nie jest używany do bezpośredniego kopiowania plików PHP na serwer.
    C. SMTP // Protokół SMTP (Simple Mail Transfer Protocol) jest wykorzystywany do transferu wiadomości e-mail między serwerami. Nie jest używany do kopiowania plików aplikacji PHP na serwer.
    D. NNTP // NNTP (Network News Transfer Protocol) jest protokołem używanym do transferu grup dyskusyjnych w sieci. Nie jest używany do kopiowania plików aplikacji PHP na serwer.
    
    204. Personalizowanie wyglądu strony dla danego użytkownika i jego identyfikacja w serwisie są możliwe dzięki mechanizmowi
    A. obiektów DOM // Obiekty DOM służą do manipulacji strukturą i wyglądem strony internetowej. Pozwalają na dostęp, modyfikację i tworzenie elementów strony za pomocą JavaScript. Dzięki nim można personalizować wygląd strony dla konkretnego użytkownika, np. zmieniać kolor tła, ukrywać lub dodawać elementy.
    B. łączenia z bazą // Łączenie z bazą danych jest jednym ze sposobów przechowywania danych w serwisie. Dzięki temu można identyfikować użytkownika poprzez unikalne ID i dostęp do jego danych. Jednak nie jest to bezpośrednio związane z personalizowaniem wyglądu strony.
    C. formularzy // Formularze umożliwiają komunikację i interakcję użytkownika z serwisem. Są użyteczne przy zbieraniu danych od użytkownika, ale nie służą bezpośrednio do personalizacji wyglądu strony.
    D. cookie // Cookie to małe pliki tekstowe przechowywane na komputerze użytkownika. Są używane do przechowywania informacji o użytkowniku, takich jak preferencje, identyfikacja sesji czy personalizacja strony. Dzięki nim możliwe jest personalizowanie wyglądu strony dla danego użytkownika i jego identyfikacja w serwisie.
    
    205. Automatyczna weryfikacja właściciela strony udostępnianej przez protokół HTTPS jest możliwa dzięki
    A. danym kontaktowym na stronie // Dane kontaktowe na stronie umożliwiają zweryfikowanie właściciela strony poprzez kontakt z nim bezpośrednio. Możemy skorzystać z informacji takich jak adres e-mail lub numer telefonu, które są udostępnione na stronie.
    B. kluczom prywatnym // Klucze prywatne są używane wraz z kluczami publicznymi w protokole szyfrowania SSL/TLS. Właściciel strony może udostępnić swoje klucze prywatne jedynie zaufanym komunikującym się z nią stroną, co pozwala na weryfikację i uwierzytelnienie właściciela.
    C. certyfikatowi SSL // Certyfikat SSL (Secure Sockets Layer) to plik zaszyfrowanych danych, który potwierdza tożsamość strony internetowej. Został wydany przez zaufane centrum certyfikacji i zawiera informacje takie jak nazwa domeny, właściciel, termin ważności itp. Przeglądarki internetowe sprawdzają certyfikat SSL strony, aby potwierdzić, że jest ona wiarygodna i bezpieczna.
    D. danym whois // Dane Whois zawierają informacje o właścicielu domeny, takie jak nazwa firmy, adres, dane kontaktowe. Można je sprawdzić za pomocą publicznej bazy Whois. Jednak dane Whois mogą być nieaktualne lub ograniczone ze względu na politykę prywatności, dlatego nie są głównym sposobem weryfikacji właściciela strony HTTPS.
    
    206. Do grupowania obszarów na poziomie bloków, które będą formatowane za pośrednictwem znaczników, należy użyć
    A. <p> // Znacznik <p> służy do tworzenia akapitów w HTML. Gdy użyjemy tego znacznika, treść zostanie sformatowana jako jeden blok tekstu, z pewnym odstępem nad i pod tekstem.
    B. <div> // Znacznik <div> jest używany do tworzenia bloków na stronie. Możemy go traktować jako kontener, który możemy dowolnie formatować i grupować wewnątrz niego inne elementy HTML.
    C. <span> // Znacznik <span> służy do tworzenia małych fragmentów tekstu lub sekcji, które można stylizować lub manipulować za pomocą CSS lub JavaScript. Jest to użyteczne, gdy chcemy dodać specyficzne style lub funkcjonalności do wybranej części tekstu.
    D. <param> // Znacznik <param> jest używany w kontekście elementu <object> i służy do dostarczania parametrów lub argumentów dla zagnieżdżonego obiektu lub aplikacji zewnętrznej.
    
    207. Znacznik <i> języka HTML służy do
    A. umieszczenia obrazka // Znacznik <i> w języku HTML służy do umieszczenia obrazka.
    B. zdefiniowania formularza // Znacznik <i> w języku HTML służy do zdefiniowania formularza.
    C. zmiany kroju pisma na pochylony // Znacznik <i> w języku HTML służy do zmiany kroju pisma na pochylony.
    D. zdefiniowania nagłówka w tekście // Znacznik <i> w języku HTML służy do zdefiniowania nagłówka w tekście.
    
    208. Poniżej przedstawiono fragment kodu języka HTML. Jest on definicją listy: // pytanie posiada zdjecie D:

    209. Kod języka CSS można umieścić wewnątrz kodu HTML, posługując się znacznikiem
    A. <head> // Znacznik <head> w kodzie HTML służy do definiowania nagłówka dokumentu. Nie ma bezpośredniego związku z umieszczaniem kodu CSS wewnątrz kodu HTML.
    B. <style> // Znacznik <style> w kodzie HTML służy do definiowania stylów CSS dla dokumentu. Można w nim umieścić kod języka CSS, który zostanie zastosowany tylko do danego dokumentu, na którym został umieszczony.
    C. <meta> // Znacznik <meta> w kodzie HTML służy do definiowania metadanych dokumentu, takich jak jego opis, autor, kodowanie znaków itp. Nie ma bezpośredniego związku z umieszczaniem kodu CSS wewnątrz kodu HTML.
    D. <body> // Znacznik <body> w kodzie HTML służy do definiowania treści dokumentu widocznej na stronie. Nie ma bezpośredniego związku z umieszczaniem kodu CSS wewnątrz kodu HTML.
    
    210. Chcąc zdefiniować formatowanie tabeli w języku CSS w taki sposób, aby wiersz, który jest aktualnie wskazywany kursorem myszy, został wyróżniony np. innym kolorem, należy zastosować
    A. pseudoklasę :visited // Pseudoklasa :visited służy do stylizacji odwiedzonych linków. Nie ma zastosowania w formatowaniu tabeli.
    B. pseudoklasę :hover // Pseudoklasa :hover służy do nadawania stylów elementom, gdy na nie najedziemy kursorem myszy. W przypadku tabeli po najechaniu myszą na wiersz, ten wiersz może zmienić kolor na inny, wyróżniający go.
    C. pseudoelement :first-line // Pseudoelement :first-line pozwala stylizować pierwszą linię tekstu w elemencie. Nie ma zastosowania w formatowaniu tabeli.
    D. nowy selektor klasy dla wiersza tabeli // Nowy selektor klasy dla wiersza tabeli oznacza, że tworzymy nową klasę CSS, która będzie miała specjalne style dla wierszy tabeli. Jednak sam w sobie nie umożliwi wyróżnienia wiersza podczas najechania myszą.
    
    211. Aby uzyskać efekt rozstrzelenia liter w selektorze CSS, należy użyć właściwości
    A. letter-transform // Właściwość letter-transform nie istnieje w CSS. Nie może być użyta do uzyskania efektu rozstrzelenia liter w selektorze CSS.
    B. text-decoration // Właściwość text-decoration służy do dodawania ozdobników do tekstu, takich jak podkreślenie, przekreślenie, podwójne podkreślenie itp. Nie jest używana do uzyskiwania efektu rozstrzelenia liter.
    C. letter-spacing // Właściwość letter-spacing jest używana do kontrolowania odstępów między literami w tekście. Może być użyta do uzyskania efektu rozstrzelenia liter w selektorze CSS. Zwiększając wartość letter-spacing, litery będą od siebie bardziej oddzielone, co daje efekt rozstrzelenia.
    D. text-space // Właściwość text-space nie istnieje w CSS. Nie może być użyta do uzyskania efektu rozstrzelenia liter w selektorze CSS.
    
    212. Blok deklaracji postaci background-attachment: scroll powoduje, że
    A. grafika tła będzie powtarzana (kafelki) // Odpowiedź A: Blok deklaracji postaci background-attachment: scroll powoduje, że grafika tła będzie powtarzana (kafelki).
    B. tło strony będzie przewijane razem z tekstem // Odpowiedź B: Blok deklaracji postaci background-attachment: scroll powoduje, że tło strony będzie przewijane razem z tekstem.
    C. tło strony będzie stałe, a tekst będzie się przewijał // Odpowiedź C: Blok deklaracji postaci background-attachment: scroll powoduje, że tło strony będzie stałe, a tekst będzie się przewijał.
    D. grafika tła będzie wyświetlona w prawym górnym rogu strony // Odpowiedź D: Blok deklaracji postaci background-attachment: scroll powoduje, że grafika tła będzie wyświetlona w prawym górnym rogu strony.
    
    213. Ikona, która wyświetlona jest przed adresem, w polu adresowym przeglądarki internetowej lub przy tytule otwartej karty przeglądarki nosi nazwę
    A. iConji // iConji is a type of digital icon used to represent emotions, objects, or concepts in text messages or social media posts. They are often colorful and can add an element of fun and expression to written communication.
    B. favicon // A favicon is a small icon that is displayed in the browser's address bar or next to the title of an open browser tab. It helps users identify a website visually and differentiate it from other open tabs. Favicon files are usually saved as ICO or PNG format.
    C. webicon // Webicon is not a commonly used term in web development. However, it can refer to icons that are specifically designed for use on websites. These icons are usually created using scalable vector graphics (SVG) format and can be easily customized and resized to fit different devices and screen sizes.
    D. emoticon // An emoticon is a combination of characters used to represent facial expressions or emotions in written communication. They are typically formed using punctuation marks, letters, and numbers, and are often used in text messages, emails, and online chats to convey emotions that may be difficult to express through words alone.
    
    214. Aby poprawnie zdefiniować hierarchiczną strukturę tekstu witryny internetowej, należy zastosować
    A. znacznik <div> // Znacznik <div> służy do tworzenia blokowych elementów na stronie. Można go używać do grupowania i stylizacji różnych sekcji tekstu lub elementów wewnątrz witryny.
    B. znaczniki <frame> i <table> // Znaczniki <frame> i <table> służą do tworzenia struktury tabeli na stronie. Znacznik <frame> definiuje pojedynczy obszar, w którym można wyświetlić inny dokument, podczas gdy znacznik <table> służy do tworzenia tabeli i jej zawartości.
    C. znacznik <p> z formatowaniem // Znacznik <p> służy do tworzenia akapitów tekstu na stronie. Może być używany do organizowania i formatowania różnych paragrafów lub bloków tekstu.
    D. znaczniki <h1>, <h2> oraz <p> // Znaczniki <h1>, <h2> oraz <p> służą do tworzenia nagłówków i paragrafów tekstu na stronie. Znacznik <h1> definiuje najważniejszy nagłówek, a <h2> definiuje nagłówek drugiego poziomu. Znacznik <p> jest używany do tworzenia paragrafu tekstu.
    
    215. Która z reguł walidacji strony internetowej jest błędna?
    A. Jeżeli w instrukcji używa się kilku atrybutów, ich kolejność powinna być zgodna z alfabetem, np. <img alt="...." src="...." /> // Reguła A mówi, że jeżeli w instrukcji używa się kilku atrybutów, ich kolejność powinna być zgodna z alfabetem. Na przykład, w przypadku znacznika <img>, atrybuty powinny być podane w kolejności zgodnej z alfabetem, jak np. <img alt='....' src='....' />. Dzięki temu łatwiej jest zlokalizować i zrozumieć atrybuty w instrukcji.
    B. Wyłączanie znaczników musi następować w odwrotnej kolejności, niż były one włączane, np. <p>....<big>...</big></p> // Reguła B mówi, że wyłączanie znaczników musi następować w odwrotnej kolejności, niż były one włączane. Na przykład, jeśli zaczynamy znacznikiem <p>, a następnie używamy znacznika <big>, to zamykamy je w odwrotnej kolejności, czyli najpierw </big>, a potem </p>. Jest to ważne, ponieważ pozwala zachować hierarchię i strukturę znaczników w dokumencie.
    C. Znaczniki, oprócz samozamykających się, działają do momentu ich wyłączenia znakiem "/", np. <p>...</p> // Reguła C mówi, że znaczniki, poza samozamykającymi się, działają do momentu ich wyłączenia znakiem '/'. Na przykład, jeśli mamy znacznik <p>, to cały tekst pomiędzy znacznikiem <p> a </p> będzie traktowany jako zawartość tego znacznika. Możemy dodać tekst, inne znaczniki lub inne elementy do wnętrza tego znacznika, aż do momentu zamknięcia go znakiem '/'.
    D. W znacznikach nie są rozróżniane wielkie i małe litery, np. <p> i <P> to ten sam znacznik // Reguła D mówi, że w znacznikach nie są rozróżniane wielkie i małe litery. Na przykład, <p> i <P> to ten sam znacznik. Nie ma znaczenia czy używamy wielkich czy małych liter w nazwie znacznika, są one traktowane jako równoważne. Dzięki temu nie musimy martwić się o wielkość liter i możemy pisać znaczniki w sposób bardziej elastyczny.
    
    216. Oznaczenie barwy w postaci #ff00e0 jest równoważne zapisowi
    A. rgb(f,0,e0) // Punkt A to zła odpowiedź. Zapis rgb(f,0,e0) nie jest poprawny. Wartość f nie jest liczbą, dlatego odpowiedź jest nieprawidłowa.
    B. rgb(ff,0,e0) // Punkt B to zła odpowiedź. Zapis rgb(ff,0,e0) również nie jest poprawny. Wartość ff nie jest liczbą, dlatego odpowiedź jest niepoprawna.
    C. rgb(255,0,128) // Punkt C to zła odpowiedź. Zapis rgb(255,0,128) jest zbliżony do oznaczenia barwy #ff00e0, ale nie jest identyczny, dlatego nie jest poprawny.
    D. rgb(255,0,224) // Punkt D to poprawna odpowiedź. Zapis rgb(255,0,224) jest równoważny z oznaczeniem barwy #ff00e0. Wartości 255, 0 i 224 odpowiadają kolejno czerwonej, zielonej i niebieskiej składowej koloru w formacie RGB, co tworzy odcień #ff00e0.
    
    217. Formatem zapisu rastrowych plików graficznych z kompresją bezstratną jest
    A. JNG // PNG jest formatem zapisu rastrowych plików graficznych z kompresją bezstratną. Oznacza to, że plik jest skompresowany w taki sposób, który nie powoduje utraty jakości obrazu. W porównaniu do innych formatów kompresji bezstratnej, PNG oferuje również obsługę przezroczystości. Jest to popularny format stosowany w grafice internetowej i obsługiwany przez większość przeglądarek.
    B. PNG // JNG nie jest formatem zapisu rastrowych plików graficznych z kompresją bezstratną. Nie jest znany i popularny jak PNG.
    C. CDR // CDR to format plików graficznych używany przez program CorelDRAW. Jednak nie jest to format z kompresją bezstratną, więc nie jest poprawną odpowiedzią na pytanie.
    D. SVG // SVG to format zapisu wektorowej grafiki, a nie rastrowych plików graficznych. Nie jest to więc poprawna odpowiedź na pytanie o format z kompresją bezstratną.
    
    218. Podczas obróbki grafiki rastrowej w programie z obsługą kanałów dodanie kanału alfa oznacza
    A. dodanie warstwy z przezroczystością // Dodanie kanału alfa oznacza dodanie warstwy z przezroczystością. Kanał alfa określa, które części obrazu są przezroczyste, co pozwala na nakładanie grafiki na inne elementy bez utraty informacji z oryginalnego obrazu.
    B. określenie poprawnego balansu bieli // Nie dotyczy tego pytania.
    C. zwiększenie głębi ostrości obrazu // Nie dotyczy tego pytania.
    D. wyostrzenie krawędzi obrazu // Nie dotyczy tego pytania.
    
    219. Aby pozbyć się nienaturalnego odwzorowania ukośnych krawędzi linii w grafice rastrowej, czyli tak zwanego schodkowania, należy zastosować filtr
    A. szumu // Filtr szumu służy do redukcji zakłóceń i szumów w grafice rastrowej. Działa poprzez wygładzenie tekstury i wyostrzenie detali.
    B. gradientu // Filtr gradientu służy do stworzenia płynnego przejścia pomiędzy kolorami lub wartościami w grafice rastrowej. Działa poprzez obliczanie różnicy intensywności pikseli sąsiadujących i modyfikowanie ich wartości.
    C. pikselizacji // Pikselizacja to proces przekształcania obrazu w grafice rastrowej w taki sposób, aby pojedyncze piksele były widoczne. Działa poprzez zmianę rozdzielczości obrazu i grupowanie pikseli w większe bloki.
    D. antyaliasingu // Antyaliasing służy do redukcji efektu schodkowania i wygładzania krawędzi w grafice rastrowej. Działa poprzez dodawanie subpikseli i modyfikowanie ich wartości na podstawie sąsiadujących pikseli, co daje efekt bardziej naturalnego odwzorowania krawędzi.
    
    220. Formatem bezstratnej kompresji dźwięku jest
    A. MP3 // MP3 to format stratnej kompresji dźwięku, który redukuje rozmiar pliku kosztem pewnej utraty jakości dźwięku.
    B. AAC // AAC to format kompresji dźwięku, który oferuje lepszą jakość dźwięku przy niższym rozmiarze pliku w porównaniu do MP3.
    C. WWA // WWA nie jest formatem bezstratnej kompresji dźwięku. Może być błędem lub nieznalezioną alternatywą.
    D. FLAC // FLAC to format bezstratnej kompresji dźwięku, który umożliwia zachowanie pełnej jakości dźwięku przy mniejszym rozmiarze pliku w porównaniu do formatów stratnej kompresji, takich jak MP3.
    
    221. W języku SQL polecenie INSERT INTO
    A. dodaje tabelę // Polecenie INSERT INTO w języku SQL nie dodaje tabeli. Tabela musi już istnieć przed użyciem tego polecenia. Polecenie to służy do wprowadzenia danych do tabeli.
    B. dodaje pola do tabeli // Polecenie INSERT INTO w języku SQL nie dodaje pól do tabeli. Pola muszą być zdefiniowane w tabeli przed użyciem polecenia INSERT INTO. Polecenie to służy do wprowadzenia danych do tabeli.
    C. wprowadza dane do tabeli // Polecenie INSERT INTO w języku SQL wprowadza dane do tabeli. Używamy go, aby wstawić nowy rekord do tabeli, podając wartości dla odpowiednich pól.
    D. aktualizuje rekordy określoną wartością // Polecenie INSERT INTO w języku SQL nie aktualizuje rekordów określoną wartością. Do aktualizacji rekordów używamy innego polecenia UPDATE. Polecenie INSERT INTO służy do wprowadzenia nowych danych do tabeli.
    
    222. W języku SQL klauzula DISTINCT instrukcji SELECT sprawi, że zwrócone dane
    A. zostaną posortowane // Opcja A. zostaną posortowane oznaczałaby, że wyniki zapytania zostaną uporządkowane według określonego kryterium sortowania, takiego jak np. rosnąca lub malejąca wartość pola. Jednak klauzula DISTINCT nie ma wpływu na sortowanie danych.
    B. nie będą zawierały powtórzeń // Opcja B. nie będą zawierały powtórzeń oznacza, że klauzula DISTINCT usunie z wyników zapytania wszystkie duplikaty wskazanych kolumn. Dzięki temu w wynikach zawsze będą tylko unikalne wartości, niezależnie od tego w jakiej kolejności się pojawiają.
    C. będą spełniały określony warunek // Opcja C. będą spełniały określony warunek oznaczałaby, że klauzula DISTINCT wpływa na to, jakie rekordy zostaną zwrócone w wynikach zapytania, na podstawie spełnienia pewnych warunków logicznych. Jednak klauzula DISTINCT nie ma takiej funkcjonalności.
    D. będą pogrupowane według określonego pola // Opcja D. będą pogrupowane według określonego pola oznaczałaby, że wyniki zapytania zostaną podzielone na grupy na podstawie wartości jednej z kolumn. Ale klauzula DISTINCT nie grupuje danych, tylko usuwa duplikaty, więc ta opcja jest nieprawidłowa.
    
    223. Zdefiniowano bazę danych z tabelą sklepy o polach: nazwa, ulica, miasto, branza. Aby wyszukać wszystkie nazwy sklepów spożywczych zlokalizowanych wyłącznie we Wrocławiu, należy posłużyć się kwerendą:
    A. SELECT sklepy FROM nazwa WHERE branza="spożywczy" BETWEEN miasto="Wrocław"; // Punkt A: W kwerendzie wykorzystuje się błędny składniowo zapis. Nie można zastosować BETWEEN operatora do porównywania wartości w kolumnach nazwa i branza. Ponadto, nie podano warunku dla pola miasto, które ma być równa 'Wrocław'. Ta kwerenda nie zwróci poprawnych wyników.
    B. SELECT sklepy FROM branza="spożywczy" WHERE miasto="Wrocław"; // Punkt B: W kwerendzie podano poprawne kolumny do wyświetlenia (sklepy), ale nie podano żadnego warunku dla pola nazwa. Warunek dotyczy tylko pola branza i miasto, przez co nie zwróci poprawnych wyników. Ta kwerenda też nie jest poprawna.
    C. SELECT nazwa FROM sklepy WHERE branza="spozywczy" OR miasto="Wrocław"; // Punkt C: W kwerendzie użyto poprawnych kolumn i warunków. Zastosowano operator OR, co oznacza, że wyświetlone zostaną sklepy, które mają branzę 'spozywczy' lub miasto 'Wrocław'. Ta kwerenda zwróci wszystkie nazwy sklepów spożywczych zlokalizowanych we Wrocławiu oraz nazwy sklepów z innych branż z Wrocławia.
    D. SELECT nazwa FROM sklepy WHERE branza="spozywczy" AND miasto="Wrocław"; // Punkt D: W kwerendzie użyto poprawnych kolumn i warunków. Zastosowano operator AND, co oznacza, że wyświetlone zostaną tylko sklepy, które mają branzę 'spozywczy' i miasto 'Wrocław'. Ta kwerenda zwróci wszystkie nazwy sklepów spożywczych zlokalizowanych we Wrocławiu.
    
    224. Zdefiniowano bazę danych z tabelą podzespoły o polach: model, producent, typ, cena. Aby wyświetlić wszystkie modele pamięci RAM firmy Kingston w kolejności od najtańszej do najdroższej, należy posłużyć się kwerendą:
    A. SELECT model FROM podzespoly WHERE typ="RAM" AND producent="Kingston" ORDER BY cena ASC; // Zapytanie A zwraca modele pamięci RAM firmy Kingston posortowane według rosnącej ceny. Działanie zapytania polega na wybraniu wszystkich modeli z tabeli podzespoły, gdzie typ jest równy 'RAM' i producent jest równy 'Kingston', a następnie sortuje wyniki rosnąco według ceny.
    B. SELECT model FROM podzespoly WHERE typ="RAM" AND producent="Kingston" ORDER BY cena DESC; // Zapytanie B zwraca modele pamięci RAM firmy Kingston posortowane według malejącej ceny. Działanie zapytania jest podobne do zapytania A, jednak wyniki są sortowane malejąco według ceny.
    C. SELECT model FROM podzespoly WHERE typ="RAM" OR producent="Kingston" ORDER BY cena DESC; // Zapytanie C zwraca modele pamięci RAM firmy Kingston lub dowolnego innego typu podzespołu posortowane według malejącej ceny. Działanie zapytania polega na wybraniu wszystkich modeli z tabeli podzespoły, gdzie typ jest równy 'RAM' lub producent jest równy 'Kingston', a następnie sortuje wyniki malejąco według ceny.
    D. SELECT model FROM producent WHERE typ="RAM" OR producent="Kingston" ORDER BY podzespoly ASC; // Zapytanie D jest niepoprawne, ponieważ odwołuje się do nieistniejącej tabeli 'producent'. Nie wykonuje żadnych działań na tabeli podzespoły, dlatego nie zwraca poprawnej odpowiedzi na zadane pytanie.
    
    225. W celu przyspieszenia operacji na bazie danych należy do pól często wyszukiwanych lub sortowanych
    A. utworzyć indeks // Tworzenie indeksu na polach często wyszukiwanych lub sortowanych przyspiesza operacje na bazie danych. Indeks tworzy strukturę, która umożliwia szybkie odnajdywanie i sortowanie danych według określonych pól.
    B. dodać klucz obcy // Dodawanie klucza obcego jest niezbędne, gdy w bazie danych istnieje zależność między dwoma tabelami. Klucz obcy utrzymuje spójność danych poprzez powiązanie wartości w jednej tabeli z wartościami w innej.
    C. dodać więzy integralności // Dodawanie więzów integralności narzuca reguły dotyczące wartości w określonych polach. Na przykład, może wymagać, aby wartość w polu było unikalne lub aby odwołanie do innego rekordu było ważne.
    D. stworzyć osobną tabelę przechowującą tylko te pola // Tworzenie osobnej tabeli, przechowującej tylko pola często wyszukiwane lub sortowane, może pomóc w przyspieszeniu operacji na bazie danych. Dzięki temu, można skupić się tylko na potrzebnych polach i nie trzeba dokonywać operacji na niepotrzebnych danych.
    
    226. Jednoznacznym identyfikatorem rekordu w bazie danych jest pole
    A. klucza podstawowego // Klucz podstawowy jest jednoznacznym identyfikatorem rekordu w bazie danych. Służy do unikalnego oznaczenia każdego rekordu w tabeli. Dzięki temu pole nie może mieć wartości powtarzających się ani pustych.
    B. klucza obcego // Klucz obcy jest polem w tabeli, które odwołuje się do klucza podstawowego w innej tabeli. Jest wykorzystywany do tworzenia relacji między różnymi tabelami w bazie danych.
    C. numeryczne // Pole numeryczne oznacza, że wartość w tym polu jest liczba. Może służyć do przechowywania danych liczbowych, takich jak wiek, oceny czy ilość produktów.
    D. relacji // Relacja to połączenie między dwoma tabelami w bazie danych. Jest to sposób na reprezentowanie powiązań między danymi. Relacje mogą być jednostronne (np. jeden do wielu) lub wzajemne (np. wiele do wielu).
    
    227. Zdefiniowano bazę danych z tabelą mieszkancy o polach: nazwisko, imie, miasto. Następnie stworzono następujące zapytanie do bazy: SELECT nazwisko, imie FROM mieszkancy WHERE miasto="Poznań" UNION ALL SELECT nazwisko, imie FROM mieszkancy WHERE miasto="Kraków"; Wskaż zapytanie, które zwróci identyczne dane:
    A. SELECT nazwisko, imie FROM mieszkancy AS "Poznań" OR "Kraków"; // Zapytanie A jest niepoprawne. Składnia WHERE miasto HAVING nie jest poprawna. Miasto nie może być używane w parametrze HAVING, tylko w parametrze WHERE.
    B. SELECT nazwisko, imie FROM mieszkancy WHERE miasto HAVING "Poznań" OR "Kraków"; // Zapytanie B jest niepoprawne. Składnia WHERE miasto HAVING nie jest poprawna. Miasto nie może być używane w parametrze HAVING, tylko w parametrze WHERE.
    C. SELECT nazwisko, imie FROM mieszkancy WHERE miasto="Poznań" OR miasto="Kraków"; // Zapytanie C jest poprawne. Wybiera nazwisko i imię z tabeli mieszkancy dla rekordów, gdzie miasto równa się 'Poznań' lub 'Kraków'. Wyniki z dwóch zapytań są łączone za pomocą operatora UNION ALL, zwracając wszystkie pasujące rekordy.
    D. SELECT nazwisko, imie FROM mieszkancy WHERE miasto BETWEEN "Poznań" OR "Kraków"; // Zapytanie D jest niepoprawne. Składnia WHERE miasto BETWEEN 'Poznań' OR 'Kraków' jest niepoprawna. Parametr BETWEEN jest używany do sprawdzania zakresu wartości, nie do porównywania wartości do dwóch różnych warunków miasta.
    
    228. W bazie danych sklepu istnieje tabela artykuly zawierająca pole o nazwie nowy. Aby to pole wypełnić wartościami TRUE dla każdego rekordu, należy zastosować kwerendę
    A. UPDATE artykuly SET nowy=TRUE; // Kwerenda UPDATE artykuly SET nowy=TRUE; służy do aktualizacji wartości pola 'nowy' w tabeli 'artykuly'. Wszystkim rekordom zostanie przypisana wartość TRUE.
    B. INSERT INTO artykuly VALUE nowy=TRUE; // Kwerenda INSERT INTO artykuly VALUE nowy=TRUE; jest niepoprawna. Brakuje klauzuli VALUES, która określa wartości do wstawienia.
    C. UPDATE nowy FROM artykuly VALUE TRUE; // Kwerenda UPDATE nowy FROM artykuly VALUE TRUE; jest niepoprawna. Brakuje klauzuli SET, która określa jakie wartości aktualizować.
    D. INSERT INTO nowy FROM artykuly SET TRUE; // Kwerenda INSERT INTO nowy FROM artykuly SET TRUE; jest niepoprawna. Brakuje klauzuli INTO, która określa tabelę, do której należy wstawić wartości.
    
    229. W MS SQL Server predefiniowana rola o nazwie dbcreator pozwala użytkownikowi na
    A. zarządzanie plikami na dysku // Rola dbcreator w MS SQL Server pozwala użytkownikowi na zarządzanie plikami na dysku.
    B. zarządzanie bezpieczeństwem systemu // Rola dbcreator w MS SQL Server nie pozwala użytkownikowi na zarządzanie bezpieczeństwem systemu.
    C. tworzenie, modyfikowanie, usuwanie i odzyskiwanie bazy danych // Rola dbcreator w MS SQL Server umożliwia użytkownikowi tworzenie, modyfikowanie, usuwanie i odzyskiwanie bazy danych.
    D. wykonywanie każdej operacji na serwerze i posiadanie prawa własności każdej bazy // Rola dbcreator w MS SQL Server nie daje użytkownikowi prawa do wykonywania każdej operacji na serwerze i posiadania prawa własności każdej bazy.
    
    230. Aby odebrać prawa dostępu do serwera MySQL, należy posłużyć się instrukcją
    A. USAGE // Punkt A to instrukcja USAGE. Instrukcja USAGE pozwala na nadanie użytkownikowi praw dostępu do serwera MySQL. Przykład użycia tej instrukcji to: USAGE ON *.* TO 'uzytkownik'@'localhost' IDENTIFIED BY 'haslo';
    B. GRANT // Punkt B to instrukcja GRANT. Instrukcja GRANT pozwala na nadanie określonym użytkownikom określonych uprawnień dostępu do serwera MySQL. Przykład użycia tej instrukcji to: GRANT SELECT, INSERT ON baza_danych.* TO 'uzytkownik'@'localhost' IDENTIFIED BY 'haslo';
    C. DELETE // Punkt C to instrukcja DELETE. Jednak, instrukcja DELETE nie jest wykorzystywana do odebrania praw dostępu do serwera MySQL. Instrukcja DELETE służy do usuwania rekordów z tabel w bazie danych.
    D. REVOKE // Punkt D to instrukcja REVOKE. Instrukcja REVOKE służy do odebrania praw dostępu do serwera MySQL. Przykład użycia tej instrukcji to: REVOKE ALL PRIVILEGES ON baza_danych.* FROM 'uzytkownik'@'localhost';
    
    231. Za pomocą polecenia BACKUP LOG w MS SQL Server można
    A. wykonać pełną kopię bezpieczeństwa // Polecenie BACKUP LOG w MS SQL Server umożliwia wykonanie pełnej kopii bezpieczeństwa. Kopia ta zawiera wszystkie dane z bazy danych, włącznie z historią transakcji. Jest to przydatne w przypadku awarii, umożliwiając przywrócenie bazy danych do poprzedniego stanu.
    B. zalogować sie do kopii bezpieczeństwa // Polecenie BACKUP LOG w MS SQL Server nie służy do logowania się do kopii bezpieczeństwa. Jest to polecenie do wykonywania kopii zapasowych i zarządzania danymi.
    C. wykonać kopię bezpieczeństwa dziennika transakcyjnego // Polecenie BACKUP LOG w MS SQL Server umożliwia wykonanie kopii bezpieczeństwa dziennika transakcyjnego. Dziennik transakcyjny przechowuje wszystkie transakcje, które zostały wykonane na bazie danych. Wykonanie kopii tej części bazy danych jest ważne, aby zapewnić spójność danych i możliwość ich przywrócenia w przypadku awarii.
    D. przeczytać komunikaty wygenerowane podczas tworzenia kopii // Polecenie BACKUP LOG w MS SQL Server nie służy do odczytania komunikatów wygenerowanych podczas tworzenia kopii. Służy ono jedynie do wykonania kopii zapasowej i zarządzania danymi.
    
    232. Polecenie DBCC CHECKDB("sklepAGD", Repair_fast) w MS SQL Server
    A. sprawdzi spójność określonej tabeli // Polecenie DBCC CHECKDB("sklepAGD", Repair_fast) w MS SQL Server sprawdzi spójność określonej tabeli.
    B. sprawdzi spójność bazy danych i naprawi uszkodzone indeksy // Polecenie DBCC CHECKDB("sklepAGD", Repair_fast) w MS SQL Server sprawdzi spójność bazy danych i naprawi uszkodzone indeksy.
    C. sprawdzi spójność bazy danych i wykona kopię bezpieczeństwa // Polecenie DBCC CHECKDB("sklepAGD", Repair_fast) w MS SQL Server nie sprawdzi spójności bazy danych i nie wykona kopii bezpieczeństwa.
    D. sprawdzi spójność określonej tabeli i naprawi uszkodzone rekordy // Polecenie DBCC CHECKDB("sklepAGD", Repair_fast) w MS SQL Server nie sprawdzi spójności określonej tabeli i nie naprawi uszkodzonych rekordów.
    
    233. Aby naprawić bazę danych w MySQL, należy użyć polecenia
    A. FIX // Polecenie FIX nie jest poprawnym poleceniem w MySQL do naprawy bazy danych. Nie powinno się go używać w tym kontekście.
    B. REPAIR // Polecenie REPAIR jest używane do naprawy tabeli lub bazy danych w MySQL. Pozwala na usuwanie uszkodzonych danych i przywracanie integralności struktury tabeli.
    C. UPDATE // Polecenie UPDATE jest używane do modyfikacji danych w tabeli MySQL, ale nie jest odpowiednie do naprawienia bazy danych.
    D. CHANGE // Polecenie CHANGE jest używane do zmiany nazwy kolumny lub zmiany jej definicji w tabeli MySQL, ale nie jest odpowiednie do naprawienia bazy danych.
    
    234. Aby zdefiniować łamanie linii tekstu, np. w zmiennej napisowej, należy posłużyć się znakiem
    A. slash // Znak slash (/) służy do podziału tekstu na linie. Można go używać, aby przenieść tekst do nowej linii w zmiennej napisowej.
    B. b // Znak b nie jest poprawnym znakiem do zdefiniowania łamania linii tekstu.
    C. n // Znak n służy do zdefiniowania nowej linii w zmiennej napisowej. Może być używany, aby przenieść tekst do nowej linii wewnątrz zmiennej tekstowej.
    D. t // Znak t nie jest poprawnym znakiem do zdefiniowania łamania linii tekstu.
    
    235. Dana jest tablica n-elementowa o nazwie t[n]. Zadaniem algorytmu zapisanego w postaci listy kroków jest wypisania sumy // pytanie posiada zdjecie D:

    236. Interpreter PHP wygeneruje błąd i nie wykona kodu, jeżeli programista:
    A. będzie pisał kod bez wcięć // Jeśli programista będzie pisał kod bez wcięć, interpreter PHP wygeneruje błąd i nie wykona kodu. Wcięcia są ważne w PHP, ponieważ określają zasięg bloków kodu. Brak wcięć prowadzi do niepoprawnej struktury kodu i jego nieprawidłowego działania.
    B. nie postawi średnika po wyrażeniu w instrukcji if, jeśli po nim nastąpiła sekcja else // Jeśli programista nie postawi średnika po wyrażeniu w instrukcji if, jeśli po nim nastąpiła sekcja else, interpreter PHP wygeneruje błąd i nie wykona kodu. Średnik jest niezbędny do oznaczenia zakończenia instrukcji, a brak go w takim przypadku jest błędem składniowym.
    C. będzie deklarował zmienne wewnątrz warunku // Jeśli programista będzie deklarował zmienne wewnątrz warunku, interpreter PHP wygeneruje błąd i nie wykona kodu. Zmienne deklarowane wewnątrz warunku mają zasięg tylko w obrębie tego warunku, dlatego próba odwołania się do nich poza nim skutkuje błędem.
    D. pobierze wartość z formularza, w którym pole input nie było wypełnione // Jeśli programista pobierze wartość z formularza, w którym pole input nie było wypełnione, interpreter PHP wygeneruje błąd, ale kod zostanie wykonany. Jednak wartość pobrana z pustego pola input będzie pusta lub null, co może prowadzić do błędów lub nieprawidłowego działania programu.
    
    237. Dana jest tablica o nazwie tab wypełniona liczbami całkowitymi różnymi od zera. Przedstawiony kod zapisany w języku PHP ma za zadanie: // pytanie posiada zdjecie D:

    238. Warunek zapisany w JavaScript jest prawdziwy, gdy zmienna x przechowuje // pytanie posiada zdjecie D:

    239. Przedstawiona funkcja zapisana kodem JavaScript ma za zadanie: // pytanie posiada zdjecie D:

    240. Program debugger służy do:
    A. interpretacji kodu w wirtualnej maszynie Java // Program debugger służy do interpretacji kodu w wirtualnej maszynie Java. Debugger analizuje i wykonuje kod programu w trybie debugowania, umożliwiając programiście kontrolowanie przebiegu programu, wstrzymywanie jego działania i krokowe wykonywanie poszczególnych instrukcji.
    B. analizy wykonywanego programu w celu lokalizacji błędów // Program debugger służy do analizy wykonywanego programu w celu lokalizacji błędów. Poprzez umożliwienie programiście śledzenia stanu programu i wartości zmiennych w trakcie jego działania, debugger pomaga zidentyfikować i naprawić błędy w kodzie.
    C. analizy kodu źródłowego w celu odnalezienia błędów składniowych // Program debugger nie służy do analizy kodu źródłowego w celu odnalezienia błędów składniowych. Zadaniem kompilatora jest sprawdzenie poprawności składni kodu. Debugger natomiast skupia się na analizie działania programu w czasie jego wykonywania.
    D. tłumaczenia kodu zapisanego językiem wyższego poziomu na język maszynowy // Program debugger nie służy do tłumaczenia kodu zapisanego językiem wyższego poziomu na język maszynowy. Tłumaczenie kodu jest zadaniem kompilatora, który przekształca kod źródłowy na kod maszynowy, zrozumiały dla procesora komputera.
    
    241. Funkcja phpinfo() pozwala na:
    A. debugowanie kodu PHP // Funkcja phpinfo() służy do debugowania kodu PHP. Można jej użyć, aby wyświetlić informacje o działaniu kodu i znaleźć ewentualne błędy.
    B. zainicjowanie kodu w języku PHP // Funkcja phpinfo() nie służy do zainicjowania kodu w języku PHP. Służy ona tylko do wyświetlania informacji o środowisku pracy serwera.
    C. sprawdzanie wartości zmiennych użytych w kodzie PHP // Funkcja phpinfo() nie służy do sprawdzania wartości zmiennych użytych w kodzie PHP. Jej zadaniem jest tylko wyświetlanie informacji o serwerze.
    D. uzyskanie informacji o środowisku pracy serwera obsługującego PHP // Funkcja phpinfo() służy do uzyskania informacji o środowisku pracy serwera obsługującego PHP. Można w niej znaleźć informacje takie jak wersja PHP, ustawienia konfiguracyjne, zainstalowane moduły i rozszerzenia.
    
    242. Którego języka należy użyć, aby zapisać skrypt wykonywany po stronie klienta w przegladarce internetowej?
    A. Perl // Perl - Skrypt używany najczęściej po stronie serwera do przetwarzania danych.
    B. PHP // PHP - Skrypt używany najczęściej po stronie serwera do generowania dynamicznych stron internetowych.
    C. Python // Python - Skrypt stosowany zarówno po stronie serwera, jak i klienta. Często używany do tworzenia aplikacji webowych.
    D. JavaScript // JavaScript - Skrypt używany do programowania interaktywnych elementów na stronie internetowej i obsługi zdarzeń po stronie klienta.
    
    243. W języku PHP pobrano z bazy danych wyniki działania kwerendy za pomocą polecenia mysql_query(). Aby otrzymać ze zwróconej kwerendy wierszy danych, należy zastosować polecenie:
    A. mysql_field_len() // Polecenie mysql_field_len() służy do zwracania długości pola w bazie danych. Jest to przydatne w przypadku, gdy chcemy sprawdzić, ile znaków może pomieścić dane pole.
    B. mysql_list_fields() // Polecenie mysql_list_fields() służy do zwracania informacji o polach w tabeli bazy danych. Może być używane do uzyskania nazw pól, typów danych i innych szczegółów dotyczących tabeli.
    C. mysql_fetch_row() // Polecenie mysql_fetch_row() jest używane do pobierania pojedynczego wiersza danych z zwróconej kwerendy. Zwraca tablicę zawierającą wartości każdego pola z danego wiersza. Jest to najczęściej używane polecenie do przetwarzania rezultatów zapytania.
    D. mysql_fetch_lengths() // Polecenie mysql_fetch_lengths() jest używane do zwracania długości każdego pola w zwróconym wierszu kwerendy. Może być przydatne do sprawdzenia, ile znaków zawiera każde pole w bazie danych.
    
    244. Błędy interpretacji kodu PHP są zapisane:
    A. w logu pod warunkiem ustawienia odpowiedniego parametru w pliku php.ini // Błędy interpretacji kodu PHP są zapisane w logu pod warunkiem ustawienia odpowiedniego parametru w pliku php.ini. Jest to specjalny plik konfiguracyjny PHP, w którym znajdują się różne ustawienia dotyczące interpretera. Jednym z tych ustawień jest określenie, gdzie mają być zapisywane błędy interpretacji kodu PHP. Jeśli odpowiedni parametr jest ustawiony w pliku php.ini, to błędy będą zapisywane w logu, który można później przeglądać i analizować w celu znalezienia i naprawienia błędów.
    B. w podglądzie zdarzeń systemu Windows // Błędy interpretacji kodu PHP nie są zapisywane w podglądzie zdarzeń systemu Windows. Podgląd zdarzeń systemu Windows jest narzędziem, które rejestruje różne zdarzenia i błędy dotyczące pracy systemu operacyjnego Windows. Błędy interpretacji kodu PHP są związane bezpośrednio z interpreterem PHP i są zapisywane w innym miejscu (czyli w logu), dlatego nie są widoczne w podglądzie zdarzeń systemu Windows.
    C. w oknie edytora, w którym powstaje kod PHP // Błędy interpretacji kodu PHP nie są zapisywane w oknie edytora, w którym powstaje kod PHP. Okno edytora służy do tworzenia i modyfikacji plików PHP, ale samo okno edytora nie jest odpowiedzialne za zapisywanie i rejestrowanie błędów interpretacji kodu PHP. To zadanie jest realizowane przez interpreter PHP i konfigurację pliku php.ini.
    D. nigdzie, są ignorowanie przez przeglądarkę oraz interpreter kodu PHP // Błędy interpretacji kodu PHP nie są ignorowane przez przeglądarkę ani interpreter kodu PHP. Przeglądarka jest odpowiedzialna za wyświetlanie wyników działania kodu PHP na stronie internetowej, ale nie rejestruje błędów interpretacji kodu PHP. Natomiast interpreter PHP jest odpowiedzialny za interpretację i wykonanie kodu PHP, a błędy interpretacji są zapisywane w logu (o ile odpowiedni parametr jest ustawiony w pliku php.ini) i mogą być analizowane w celu poprawienia kodu.
    
    245. Do uruchomienia systemu CMS Joomla! wymagane jest środowisko:
    A. PHP i MySQL // A. PHP i MySQL - Wymagane jest środowisko PHP i baza danych MySQL do uruchomienia systemu CMS Joomla!. PHP jest językiem programowania serwerowej strony internetowej, który pozwala na generowanie dynamicznych treści, natomiast MySQL jest systemem zarządzania bazą danych, który przechowuje informacje potrzebne do działania systemu.
    B. Apache i PHP // B. Apache i PHP - Wymagane jest środowisko Apache, czyli serwer HTTP, który obsługuje żądania klientów i dostarcza im odpowiedzi, oraz PHP do uruchomienia systemu CMS Joomla!. PHP jest językiem programowania serwerowej strony internetowej, który pozwala na generowanie dynamicznych treści.
    C. Apache, PHP i MySQL // C. Apache, PHP i MySQL - Wymagane jest środowisko Apache, PHP i baza danych MySQL do uruchomienia systemu CMS Joomla!. Apache jest serwerem HTTP, który obsługuje żądania klientów i dostarcza im odpowiedzi. PHP jest językiem programowania serwerowej strony internetowej, który pozwala na generowanie dynamicznych treści, natomiast MySQL jest systemem zarządzania bazą danych, który przechowuje informacje potrzebne do działania systemu.
    D. IIS, PERL i MySQL // D. IIS, PERL i MySQL - Nie jest wymagane środowisko IIS, PERL i MySQL do uruchomienia systemu CMS Joomla!. IIS jest serwerem WWW opracowanym przez firmę Microsoft, PERL jest językiem programowania, natomiast MySQL jest systemem zarządzania bazą danych. Te technologie nie są wykorzystywane przez Joomla!.
    
    246. W języku HTML, aby uzyskać następujący efekt pogrubienia, pochylenia lub zapisania w górnym indeksie należy zapisać kod:
    A. <i>pogrubiony <b>pochylony lub w </i><sup>górnym indeksie</sup> // W punkcie A, aby uzyskać efekt pogrubienia, należy użyć znacznika <b>. Natomiast aby uzyskać efekt pochylenia lub zapisania w górnym indeksie, należy użyć znacznika <i>.
    B. <i>pogrubiony </i><b>pochylony</b> lub w <sub>górnym indeksie</sub> // W punkcie B, aby uzyskać efekt pogrubienia, należy użyć znacznika <b>. Natomiast aby uzyskać efekt pochylenia, należy użyć znacznika <i>. Jeśli chcemy zapisać tekst w górnym indeksie, należy użyć znacznika <sub>.
    C. <b>pogrubiony </b><i>pochylony</i> lub w <sup>górnym indeksie</sup> // W punkcie C, aby uzyskać efekt pogrubienia, należy użyć znacznika <b>. Natomiast aby uzyskać efekt pochylenia, należy użyć znacznika <i>. Jeśli chcemy zapisać tekst w górnym indeksie, należy użyć znacznika <sup>.
    D. <b>pogrubiony <i>pochylony</i></b> lub w <sub>górnym indeksie</sub> // W punkcie D, aby uzyskać efekt pogrubienia i pochylenia jednocześnie, należy zawrzeć tekst wewnątrz znaczników <b> i <i>. Natomiast aby uzyskać efekt zapisania tekstu w górnym indeksie, należy użyć znacznika <sub>.
    
    247. W kodzie HTML zapisano w bloku tekst formatowany pewnym stylem. Aby wtrącić wewnątrz tekstu kilka słów formatowanych innym stylem, należy zastosować znacznik
    A. <hr> // Znacznik <hr> w kodzie HTML jest używany do tworzenia poziomej linii separującej sekcje w dokumencie. Nie jest on używany do formatowania tekstu.
    B. <span> // Znacznik <span> w kodzie HTML jest używany do wtrącania fragmentów tekstu wewnątrz innego tekstu, które mogą być formatowane innym stylem. Może być używany do zmiany koloru, czcionki, rozmiaru lub stylu tekstu.
    C. <table> // Znacznik <table> w kodzie HTML jest używany do tworzenia tabel, które składają się z wierszy i kolumn. Jest to sposób organizacji danych w formie siatki.
    D. <section> // Znacznik <section> w kodzie HTML jest używany do określania sekcji lub części dokumentu. Może być stosowany do grupowania zawartości o podobnej tematyce lub funkcjonalności.
    
    248. Który z zapisów znacznika <meta> jest prawidłowy ze względu na wykorzystane atrybuty?
    A. <meta background = blue> // Tag <meta background = blue> jest nieprawidłowy, ponieważ nie używa się atrybutu background w znaczniku <meta>. Ten atrybut służy do określania tła elementów HTML.
    B. <meta name = "!DOCTYPE"> // Tag <meta name = "!DOCTYPE"> jest nieprawidłowy, ponieważ znacznik <meta> nie używa atrybutu name do określania typów dokumentów. Atrybut name jest używany do określania metadanych strony.
    C. <meta title = "Strona dla hobbystów"> // Tag <meta title = "Strona dla hobbystów"> jest nieprawidłowy, ponieważ znacznik <meta> nie używa atrybutu title do określania tytułu strony. Tytuł strony powinien być umieszczony w znaczniku <title> na początku sekcji head dokumentu HTML.
    D. <meta name = "description" content = "Masz jakieś hobby? To jest strona dla Ciebie!"> // Tag <meta name = "description" content = "Masz jakieś hobby? To jest strona dla Ciebie!"> jest prawidłowy. Znacznik <meta> używa atrybutu name z wartością "description" do określania opisu strony. Atrybut content zawiera zawartość opisu.
    
    249. Który z wymienionych znaczników należy do części <head> dokumentu HTML?
    A. <img> // <img> - znacznik ten służy do wstawiania obrazów wewnątrz dokumentu HTML. Określamy go poprzez atrybut src, który wskazuje ścieżkę do pliku z obrazem.
    B. <title> // <title> - znacznik ten służy do określania tytułu strony, który jest wyświetlany na pasku przeglądarki. Zazwyczaj umieszczamy go w sekcji <head> dokumentu HTML.
    C. <span> // <span> - znacznik ten służy do wskazania fragmentu tekstu, który może zostać stylizowany przy pomocy CSS lub manipulowany za pomocą JavaScript. Jest to element pusty, który nie wpływa na strukturę dokumentu.
    D. <section> // <section> - znacznik ten służy do grupowania treści o podobnej tematyce wewnątrz strony. Może być używany do podziału dokumentu na sekcje, na przykład nagłówki czy treści główne.
    
    250. W języku CSS poniższy zapis sprawi, że koloru zielonego będzie // pytanie posiada zdjecie D:

    251. W języku CSS, aby formatować tekst poprzez przekreślenie, podkreślenie dolne lub górne, należy zastosować
    A. text-align // Właściwość text-align służy do ustalania wyrównania tekstu wewnątrz danego elementu. Może przyjmować wartości takie jak left (lewe), right (prawe) lub center (środkowe). Nie służy do formatowania przez przekreślenie, podkreślenie dolne lub górne.
    B. text-indent // Właściwość text-indent służy do ustalania wcięcia pierwszego wiersza tekstu wewnątrz danego elementu. Może przyjmować wartości w jednostkach takich jak piksele (px) lub procenty (%). Nie służy do formatowania przez przekreślenie, podkreślenie dolne lub górne.
    C. text-transform // Właściwość text-transform służy do zmiany stylu pisania tekstu wewnątrz danego elementu. Może przyjmować wartości takie jak uppercase (duże litery), lowercase (małe litery) lub capitalize (pierwsze litery dużymi). Nie służy do formatowania przez przekreślenie, podkreślenie dolne lub górne.
    D. text-decoration // Właściwość text-decoration służy do dodawania dekoracji do tekstu wewnątrz danego elementu. Może przyjmować wartości takie jak none (brak dekoracji), underline (podkreślenie dolne), overline (podkreślenie górne) lub line-through (przekreślenie). Zastosowanie odpowiedniego wartości umożliwia formatowanie przez przekreślenie, podkreślenie dolne lub górne.
    
    252. W języku CSS poniższy zapis sprawi, że kolor żółty przyjmie czcionka // pytanie posiada zdjecie D:

    253. W języku CSS poniższy zapis użyty na stronie, na której jest kilka paragrafów, a każdy z nich ma po kilka linii sprawi, że // pytanie posiada zdjecie D:

    254. Który znacznik lub grupa znaczników nie są stosowane do definiowania struktury strony HTML?
    A. <header>, <footer> // Znaczniki <header> oraz <footer> służą do definiowania nagłówka i stopki strony. Znajdują się one na początku lub końcu struktury strony i zawierają informacje ogólne dotyczące strony, takie jak logo, tytuł, menu nawigacyjne.
    B. <i>, <b>, <u> // Znaczniki <i>, <b> oraz <u> służą do nadawania odpowiednio kursywy, pogrubienia oraz podkreślenia tekstu. Nie są one stosowane do definiowania struktury strony, a jedynie do formatowania tekstu wewnątrz innych znaczników.
    C. <section> // Znacznik <section> służy do definiowania sekcji strony. Dzięki niemu można logicznie podzielić zawartość strony na mniejsze części, takie jak nagłówek, treść główna lub stopka. Ułatwia to zarządzanie i stylizację poszczególnych sekcji.
    D. <div> // Znacznik <div> służy do definiowania bloku strony. Jest on powszechnie wykorzystywany do grupowania elementów HTML oraz nadawania im wspólnych stylów. Dzięki temu można łatwiej manipulować i zarządzać elementami na stronie.
    
    255. Który z przedstawionych kodów HTML sformatuje tekst według wzoru? (uwaga: słowo "stacji" jest zapisane większą czcionką niż reszta słów w tej linii) // pytanie posiada zdjecie D:

    256. Kolor zapisany w postaci szesnastkowej o wartości #11FE07 w kodzie RGB ma postać
    A. rgb(17,FE,7) // Odpowiedź A. rgb(17,FE,7) jest błędna. W kodzie RGB wartości kolorów są zapisywane jako liczby dziesiętne od 0 do 255, a wartość FE w systemie szesnastkowym odpowiada 254 w systemie dziesiętnym. Więc poprawna odpowiedź to D. rgb(17,254,7).
    B. rgb(11,127,7) // Odpowiedź B. rgb(11,127,7) jest błędna. W kodzie RGB wartości kolorów są zapisywane jako liczby dziesiętne od 0 do 255, a wartość 11 jest poprawna dla pierwszej liczby w RGB, ale wartość 127 nie odpowiada szesnastkowej wartości FE. Więc poprawna odpowiedź to D. rgb(17,254,7).
    C. rgb(17,255,7) // Odpowiedź C. rgb(17,255,7) jest błędna. W kodzie RGB wartości kolorów są zapisywane jako liczby dziesiętne od 0 do 255, a wartość 255 nie odpowiada szesnastkowej wartości FE. Więc poprawna odpowiedź to D. rgb(17,254,7).
    D. rgb(17,254,7) // Odpowiedź D. rgb(17,254,7) jest poprawna. W kodzie RGB wartości kolorów są zapisywane jako liczby dziesiętne od 0 do 255, a wartość 17 odpowiada pierwszej liczbie w RGB, wartość 254 odpowiada szesnastkowej wartości FE, a wartość 7 odpowiada trzeciej liczbie w RGB.
    
    257. Które ze zdań jest prawdziwe w stosunku do grafiki rastrowej?
    A. Podczas przekształcania polegającego na skalowaniu, skalowany obraz nie zmienia jakości // Podczas przekształcania polegającego na skalowaniu, skalowany obraz nie zmienia jakości.
    B. Zapisywany obraz jest opisywany za pośrednictwem figur geometrycznych umieszczonych w układzie współrzędnych // Zapisywany obraz jest opisywany za pośrednictwem figur geometrycznych umieszczonych w układzie współrzędnych.
    C. Grafika rastrowa nie jest zapisana w formacie WMF (ang. Windows Metafile Format - format metaplików w Windows) // Grafika rastrowa nie jest zapisana w formacie WMF (ang. Windows Metafile Format - format metaplików w Windows).
    D. Jest to prezentacja obrazu za pomocą pionowo-poziomej siatki odpowiednio kolorowanych pikseli na monitorze komputera, drukarce lub innym urządzeniu wyjściowym // Jest to prezentacja obrazu za pomocą pionowo-poziomej siatki odpowiednio kolorowanych pikseli na monitorze komputera, drukarce lub innym urządzeniu wyjściowym.
    
    258. Który z formatów grafiki jest najbardziej odpowiedni do zapisu obrazu z przezroczystością na potrzeby strony internetowej?
    A. JPG // Format graficzny JPG jest kompresowany stratnie, co oznacza, że nie zachowuje pełnej jakości obrazu. Nie obsługuje przezroczystości, co oznacza, że tło obrazu zawsze będzie widoczne.
    B. PNG // Format graficzny PNG jest kompresowany bezstratnie, co oznacza, że zachowuje pełną jakość obrazu. Obsługuje przezroczystość, co oznacza, że można tworzyć obrazy z widocznym tłem.
    C. BMP // Format graficzny BMP jest formatem bezstratnym, który może przechowywać obrazy o dużej jakości, ale nie obsługuje przezroczystości. Nie jest powszechnie używany na stronach internetowych ze względu na duży rozmiar plików.
    D. SVG // Format graficzny SVG to format wektorowy, który bazuje na definicjach matematycznych, co oznacza, że nie traci jakości przy skalowaniu. Obsługuje przezroczystość i jest idealny do tworzenia grafiki, ikon i logotypów na stronach internetowych.
    
    259. W czasie przetwarzania dźwięku, aby pozbyć się niechcianych odgłosów spowodowanych złą jakością mikrofonu, należy zastosować narzędzie
    A. echa // Narzędzie echa jest używane w celu dodania powtórzeń dźwięku, co tworzy efekt rozmieszczenia dźwięków w przestrzeni i nadaje im głębię.
    B. obwiedni // Obwiednia w kontekście przetwarzania dźwięku odnosi się do wyglądu dźwięku w czasie. Jest to krzywa, która określa zmiany amplitudy dźwięku w czasie, co pozwala na kontrolę nad dynamiką dźwięku.
    C. wyciszenia // Narzędzie wyciszenia służy do redukcji głośności dźwięku lub całkowitego wyłączenia sygnału dźwiękowego. Jest często stosowane do eliminacji niepożądanych dźwięków w nagraniach lub do przygotowania tła dźwiękowego.
    D. usuwania szumów // Narzędzie usuwania szumów jest używane do eliminacji szumów tła lub innych niechcianych odgłosów z nagrania. Działa poprzez analizę spektrum dźwiękowego i usuwanie częstotliwości, które są charakterystyczne dla szumów.
    
    260. Aby obraz zmieniał się płynnie w filmie, liczba klatek (nieprzenikających się wzajemnie) na sekundę musi znajdować się przynajmniej w zakresie
    A. 16-19 fps // Jeśli liczba klatek na sekundę wynosi od 16 do 19, obraz w filmie może wydawać się nieco zacięty i niepłynny. Ruchy i akcje mogą być trudne do śledzenia.
    B. 20-23 fps // Przy liczbie klatek na sekundę od 20 do 23, obraz w filmie będzie bardziej płynny, ale nadal może występować niewielkie zacięcia podczas szybszych ruchów lub intensywnych akcji.
    C. 24-30 fps // Optymalny zakres to od 24 do 30 klatek na sekundę. Dzięki temu obraz w filmie będzie płynny i naturalny, a ruchy oraz akcje łatwiejsze do śledzenia.
    D. 31-36 fps // Przy liczbie klatek na sekundę od 31 do 36, obraz w filmie będzie bardzo płynny. Jednak różnica w płynności w porównaniu do zakresu C może być niezauważalna dla większości widzów.
    
    261. W poleceniu CREATE TABLE języku SQL atrybut określający, która kolumna tabeli jest kluczem podstawowym, to
    A. UNIQUE // Atrybut UNIQUE oznacza, że wartości w danej kolumnie muszą być unikalne, czyli żadna wartość nie może się powtarzać.
    B. MAIN KEY // Odpowiedź B - MAIN KEY - nie jest poprawna. Nie istnieje w języku SQL taki atrybut.
    C. PRIMARY KEY // Atrybut PRIMARY KEY określa, która kolumna tabeli jest kluczem podstawowym, czyli unikalnym identyfikatorem każdego rekordu w tabeli. Dzięki temu atrybutowi zapewniamy unikalność i indeksowanie danych w tabeli.
    D. IDENTITY FIELD // Atrybut IDENTITY FIELD nie istnieje w języku SQL. Jest to błędna odpowiedź.
    
    262. Dana jest tabela psy o polach: imie, rasa, telefon_wlasciciela, rok_szczepienia. Aby wyszukać telefony właścicieli, których psy były szczepione przed 2015 rokiem, należy użyć polecenia SQL
    A. SELECT psy FROM rok_szczepienia < 2015 // W punkcie A należy użyć polecenia SQL 'SELECT psy FROM rok_szczepienia < 2015'. Jednakże, to nie jest poprawna odpowiedź, ponieważ nie podano żadnej kolumny, z której mają zostać pobrane dane. W zapytaniu brakuje również klauzuli 'WHERE', która określa warunek, że rok szczepienia musi być mniejszy niż 2015. Dlatego ta odpowiedź nie jest poprawna.
    B. SELECT imie, rasa FROM psy WHERE rok_szczepienia > 2015 // W punkcie B należy użyć polecenia SQL 'SELECT imie, rasa FROM psy WHERE rok_szczepienia > 2015'. Ten kod wybierze imię i rasę psów z tabeli 'psy', które zostały zaszczepione po 2015 roku. Jednakże, to nie jest poprawna odpowiedź, ponieważ pytanie wymaga wyszukania telefonów właścicieli, a nie imion i ras psów. Dlatego ta odpowiedź nie jest poprawna.
    C. SELECT telefon_wlasciciela FROM psy WHERE rok_szczepienia < 2015 // W punkcie C należy użyć polecenia SQL 'SELECT telefon_wlasciciela FROM psy WHERE rok_szczepienia < 2015'. Ten kod wybierze telefony właścicieli psów z tabeli 'psy', których psy były zaszczepione przed 2015 rokiem. To jest poprawna odpowiedź, ponieważ spełnia warunek wyszukania telefonów właścicieli psów z zadanymi szczepieniami.
    D. SELECT telefon_wlasciciela FROM psy WHERE rok_szczepienia > 2015 // W punkcie D należy użyć polecenia SQL 'SELECT telefon_wlasciciela FROM psy WHERE rok_szczepienia > 2015'. Jednakże, to nie jest poprawna odpowiedź, ponieważ pytanie wymaga wyszukania telefonów właścicieli, których psy były szczepione przed 2015 rokiem, a nie po nim. Dlatego ta odpowiedź nie jest poprawna.
    
    263. Na rysunku została przedstawiona relacja jeden do wielu. Łączy ona // pytanie posiada zdjecie D:

    264. W bazie danych sklepu spożywczego pod koniec dnia jest tworzony raport wyświetlający te produkty wraz z ich dostawcami, dla których stan magazynowy jest mniejszy niż 10 sztuk. Do zdefiniowania tego raportu posłużono się kwerendą
    A. SELECT // Punkt A - SELECT: Jest to kwerenda używana w bazach danych do pobierania i wyświetlania danych. W tym przypadku, poprzez wykonanie kwerendy SELECT na bazie danych sklepu spożywczego, tworzony jest raport wyświetlający produkty i ich dostawców, dla których stan magazynowy jest mniejszy niż 10 sztuk.
    B. UPDATE // Punkt B - UPDATE: Jest to polecenie używane w bazach danych do aktualizacji istniejących rekordów. Jednak w tym scenariuszu nie jest używane do tworzenia raportu na podstawie stanu magazynowego produktów.
    C. INSERT INTO // Punkt C - INSERT INTO: Jest to polecenie używane do wstawiania nowych rekordów do tabeli w bazie danych. W tym przypadku, nie jest używane do tworzenia raportu na podstawie stanu magazynowego, ale do wstawiania nowych danych.
    D. CHECK TABLE // Punkt D - CHECK TABLE: Jest to polecenie używane w bazach danych do sprawdzania i naprawiania uszkodzeń tabeli. Jednak w tym przypadku, nie jest używane do tworzenia raportu na podstawie stanu magazynowego.
    
    265. Wskaż polecenie SQL dodające pole miesiacSiewu do istniejącej tabeli rosliny
    A. UPDATE rosliny ADD miesiacSiewu int // Polecenie SQL UPDATE rosliny ADD miesiacSiewu int dodaje nowe pole miesiacSiewu do istniejącej tabeli rosliny. Pole to będzie przechowywać wartości typu integer.
    B. CREATE TABLE rosliny {miesiacSiewu int} // Polecenie SQL CREATE TABLE rosliny {miesiacSiewu int} tworzy nową tabelę o nazwie rosliny z jednym polem miesiacSiewu typu integer. Nie jest to polecenie dodające pole do istniejącej tabeli.
    C. ALTER TABLE rosliny ADD miesiacSiewu int // Polecenie SQL ALTER TABLE rosliny ADD miesiacSiewu int dodaje nowe pole miesiacSiewu do istniejącej tabeli rosliny. Pole to będzie przechowywać wartości typu integer.
    D. INSERT INTO rosliny VALUES (miesiacSiewu int) // Polecenie SQL INSERT INTO rosliny VALUES (miesiacSiewu int) wstawia nowy wiersz do tabeli rosliny z wartością dla pola miesiacSiewu jako miesiacSiewu int. Nie jest to polecenie dodające pole do istniejącej tabeli.
    
    266. Polecenie serwera MySQL przedstawione poniżej sprawi, że użytkownikowi tkowal zostaną // pytanie posiada zdjecie D:

    267. W serwerze MySQL nadanie roli o nazwie DBManager przyznaje użytkownikowi prawa umożliwiające
    A. monitorowanie serwera // Punkt A - monitorowanie serwera: Użytkownik o roli DBManager ma prawo do monitorowania serwera MySQL. Oznacza to, że może sprawdzać jego aktualne parametry, takie jak zużycie pamięci, liczba połączeń czy wydajność. Dzięki temu może śledzić stan serwera i w razie potrzeby podejmować odpowiednie działania.
    B. wszelkie operacje na bazach danych serwera // Punkt B - wszelkie operacje na bazach danych serwera: Użytkownik o roli DBManager posiada prawa umożliwiające wykonywanie wszelkich operacji na bazach danych serwera MySQL. Może tworzyć, usuwać, modyfikować i zarządzać strukturą danych, jak również wykonywać zapytania i manipulować danymi w bazach.
    C. tworzenie użytkowników serwera i ustawianie im haseł // Punkt C - tworzenie użytkowników serwera i ustawianie im haseł: Użytkownik o roli DBManager ma uprawnienia do tworzenia nowych użytkowników serwera MySQL oraz ustawiania im haseł. Dzięki temu może zarządzać kontami użytkowników i kontrolować dostęp do baz danych, co ma istotne znaczenie dla bezpieczeństwa danych.
    D. wszystkie operacje na bazach danych i użytkownikach serwera // Punkt D - wszystkie operacje na bazach danych i użytkownikach serwera: Użytkownik o roli DBManager posiada pełną kontrolę nad operacjami na bazach danych i użytkownikach serwera MySQL. Może wykonywać wszystkie możliwe operacje, takie jak tworzenie, usuwanie, modyfikacja baz danych i użytkowników, jak również monitorowanie ich działań i zarządzanie nimi.
    
    268. W bazie danych wykonano następujące polecenie dotyczące praw użytkownika adam. Po wykonaniu poleceń użytkownik adam będzie miał prawa do // pytanie posiada zdjecie D:

    269. Wskaż poprawną zasadę dotyczącą spójności danych w bazie danych
    A. pole klucza obcego nie może być puste // Pole klucza obcego nie może być puste. Jest to zasada dotycząca spójności danych w bazie danych, która wymaga, aby żadne pole klucza obcego nie mogło mieć wartości NULL. Pole klucza obcego jest używane do ustalenia relacji między dwoma tabelami w bazie danych.
    B. pole klucza podstawowego nie może być puste // Pole klucza podstawowego nie może być puste. Jest to zasada dotycząca spójności danych w bazie danych, która wymaga, aby żadne pole klucza podstawowego nie mogło mieć wartości NULL. Pole klucza podstawowego jest unikalne dla każdego rekordu w tabeli i jest używane do jednoznacznego identyfikowania rekordu.
    C. pole klucza podstawowego musi posiadać utworzony indeks // Pole klucza podstawowego musi posiadać utworzony indeks. Jest to zasada dotycząca spójności danych w bazie danych, która wymaga, aby pole klucza podstawowego miało utworzony indeks. Indeksowanie pola klucza podstawowego przyspiesza wyszukiwanie rekordów i zapewnia unikalność wartości w tym polu.
    D. w relacji 1..n pole klucza obcego jest połączone z polem klucza obcego innej tabeli // W relacji 1..n pole klucza obcego jest połączone z polem klucza obcego innej tabeli. Jest to zasada dotycząca spójności danych w bazie danych, która oznacza, że w relacji jeden do wielu pole klucza obcego w jednej tabeli jest połączone z polem klucza obcego innej tabeli. Dzięki temu można nawiązać zależność między rekordami różnych tabel.
    
    270. Aby naprawić uszkodzoną tabelę w MySQL, należy wydać polecenie
    A. FIX TABLE // Polecenie FIX TABLE jest używane w MySQL do naprawy uszkodzonej tabeli. Powoduje ono wykonanie szybkich napraw na tabeli, takich jak naprawa indeksów, optymalizacja tabeli i usuwanie błędów z metadanymi. Jest to przydatne, gdy tabela wykazuje problemy związane z uszkodzeniem danych.
    B. CHECK TABLE // Polecenie CHECK TABLE służy do sprawdzenia integralności tabeli w MySQL. Działa poprzez skanowanie tabeli i sprawdzanie, czy każdy wiersz i kolumna spełnia wymagania struktury tabeli. Jeśli zostaną wykryte jakiekolwiek niezgodności, polecenie zwróci informacje o tych problemach.
    C. REPAIR TABLE // Polecenie REPAIR TABLE jest używane do naprawy uszkodzonej tabeli w MySQL. Przeszukuje ono tabelę w poszukiwaniu uszkodzonych rekordów i podejmuje działania naprawcze, takie jak usuwanie uszkodzonych wierszy, naprawa indeksów i przywracanie integralności danych w tabeli.
    D. RESOLVE TABLE // Polecenie RESOLVE TABLE nie istnieje w MySQL. Poprawną odpowiedzią jest polecenie REPAIR TABLE, które służy do naprawy uszkodzonej tabeli.
    
    271. W formularzu dane z pola input o typie number zostały zapisane do zmiennej a, a następnie przetworzone w skrypcie JavaScript w następujący sposób. Zmienna z będzie typu // pytanie posiada zdjecie D:

    272. Aby w pliku z rozszerzeniem php umieścić kod w języku PHP należy użyć znaczników
    A. <php .......... /> // Znaczniki <php .......... /> są niepoprawne. W języku PHP do umieszczenia kodu należy użyć znaczników <?php .......... ?>. Te znaczniki oznaczają początek i koniec kodu PHP w pliku.
    B. <?php .......... ?> // Poprawna odpowiedź to znaczniki <?php .......... ?>. Znacznik <?php oznacza początek kodu PHP, a ?> oznacza jego koniec. Wszystko co znajduje się między tymi znacznikami jest interpretowane jako kod PHP.
    C. <php> ......... </php> // Znaczniki <php> ......... </php> są niepoprawne. W języku PHP nie ma zamknięcia bloku kodu.
    D. <?php> ........ <php?> // Znaczniki <?php> ........ <php?> są niepoprawne. Znaczniki <?php ?> oznaczają początek i koniec kodu PHP, więc nie ma potrzeby używania dodatkowego otwarcia i zamknięcia języka PHP.
    
    273. Ile iteracji będzie miała pętla zapisana w języku PHP, zakładając, że zmienna sterująca nie jest modyfikowana we wnętrzu pętli? // pytanie posiada zdjecie D:

    274. W JavaScript wynik operacji jest równy wartości NaN, jeśli skrypt próbował wykonać
    A. funkcję parseFloat zamiast parseInt na zmiennej liczbowej // A. funkcja parseFloat zamienia napis na liczbę zmiennoprzecinkową. Jeśli zmienna liczbowa zawiera inne znaki niż liczby, wynik działania będzie NaN (Not a Number).
    B. działanie arytmetyczne, a zawartość zmiennej była napisem // B. Wynik operacji arytmetycznej będzie NaN, jeśli którakolwiek ze zmiennych zawiera napis zamiast liczby. JavaScript nie może wykonać operacji arytmetycznej na napisie.
    C. działanie arytmetyczne na dwóch zmiennych liczbowych dodatnich // C. Wynik operacji arytmetycznej będzie typem NaN tylko wtedy, gdy przynajmniej jedna ze zmiennych liczbowych jest dodatnia, a druga ujemna. Jeśli obie zmienne są dodatnie, wynik będzie liczbą.
    D. funkcję sprawdzającą długość napisu, a zawartość zmiennej była liczbą // D. Funkcja sprawdzająca długość napisu zwróci wynik NaN, jeśli zawartość zmiennej jest liczbą zamiast napisem. JavaScript oczekuje napisów jako argumentów dla tej funkcji.
    
    275. W instrukcji warunkowej języka JavaScript należy sprawdzić przypadek, gdy wartość zmiennej a jest z przedziału (0, 100), natomiast wartość zmiennej b jest większa od zera. Warunek taki jest prawidłowo zapisany w nastepujący sposób
    A. if (a>0 || a<100 || b<0) // W tym warunku sprawdzana jest wartość zmiennej a. Jeśli ta wartość jest większa od zera i jednocześnie mniejsza od 100, oraz wartość zmiennej b jest większa od zera, to warunek zostanie spełniony i kod w bloku 'if' zostanie wykonany.
    B. if (a>0 && a<100 && b>0) // W tym warunku sprawdzane są trzy warunki jednocześnie: wartość zmiennej a musi być większa od zera, mniejsza od 100, oraz wartość zmiennej b musi być większa od zera. Jeśli wszystkie te warunki są spełnione, to warunek zostanie spełniony i kod w bloku 'if' zostanie wykonany.
    C. if ((a>0 || a<100) && b>0) // W tym warunku sprawdzane są dwa warunki: wartość zmiennej a może być większa od zera lub mniejsza od 100, oraz wartość zmiennej b musi być większa od zera. Jeśli którykolwiek z tych warunków jest spełniony, to warunek zostanie spełniony i kod w bloku 'if' zostanie wykonany.
    D. if ((a>0 && a<100) || b<0) // W tym warunku sprawdzane są dwa warunki jednocześnie: wartość zmiennej a musi być większa od zera i jednocześnie mniejsza od 100, lub wartość zmiennej b może być mniejsza od zera. Jeśli którykolwiek z tych warunków jest spełniony, to warunek zostanie spełniony i kod w bloku 'if' zostanie wykonany.
    
    276. Dla dowolnego a z przedziału (0,99) zadaniem funkcji zapisanej w języku Java Script jest: // pytanie posiada zdjecie D:

    277. Zapis w języku JavaScript ma za zadanie // pytanie posiada zdjecie D:

    278. Aby wykonać kod zapisany językiem PHP wystarczy, że w systemie zainstalowano
    A. przeglądarkę internetową // Przeglądarka internetowa nie jest wystarczająca do wykonania kodu PHP. Potrzeba serwera WWW z interpreterem PHP. Przeglądarka służy jedynie do wyświetlania strony internetowej po przetworzeniu przez serwer PHP.
    B. serwer WWW z interpreterem PHP // Serwer WWW z interpreterem PHP jest niezbędny do wykonania kodu PHP. Serwer ten interpretuje kod PHP i generuje stronę internetową, która jest przedstawiana przez przeglądarkę użytkownikowi.
    C. serwer WWW z serwerem MySQL // Serwer WWW z serwerem MySQL nie jest wystarczający do wykonania kodu PHP. Serwer MySQL służy do przechowywania i zarządzania bazą danych, natomiast interpreter PHP jest potrzebny do przetwarzania kodu PHP.
    D. serwer WWW, parser PHP oraz serwer MySQL // Serwer WWW, parser PHP oraz serwer MySQL są wszystkie potrzebne do wykonania kodu PHP. Serwer WWW odpowiada za obsługę żądań HTTP, parser PHP interpretuje kod PHP, a serwer MySQL przechowuje i zarządza bazą danych, jeśli jest potrzebna w kodzie PHP.
    
    279. Pętla zapisana w języku PHP wstawi do tablicy liczby // pytanie posiada zdjecie D:

    280. Wymaganiem aplikacji internetowej jest, aby ta była wykonywana po stronie klienta. W którym języku należy zaimplementować tę aplikację?
    A. Perl // Perl - Perl to interpretowany język skryptowy, wykorzystywany głównie do przetwarzania tekstów oraz wykonywania prostych zadań. Nie jest zalecany do implementowania aplikacji internetowych wykonywanych po stronie klienta, ponieważ nie został stworzony do tego celu.
    B. PHP // PHP - PHP to popularny język skryptowy powszechnie używany do tworzenia aplikacji internetowych. Może być wykorzystywany zarówno po stronie serwera, jak i po stronie klienta, ale jest bardziej efektywny po stronie serwera.
    C. Python // Python - Python to wszechstronny język programowania używany zarówno w tworzeniu aplikacji desktopowych, jak i internetowych. Może być używany do implementowania aplikacji internetowych po stronie klienta, ale nie jest najpopularniejszym wyborem w tej dziedzinie.
    D. JavaScript // JavaScript - JavaScript jest jednym z najpopularniejszych języków programowania używanych do tworzenia aplikacji internetowych po stronie klienta. Jest wbudowany w przeglądarki internetowe i umożliwia interakcję z użytkownikiem oraz modyfikację zawartości strony. Jest to więc odpowiedni język do implementacji aplikacji internetowych wymaganych po stronie klienta.
    
    281. Zadaniem funkcji PHP o nazwie mysql_num_rows() jest
    A. ponumerować rekordy w bazie danych // Funkcja mysql_num_rows() w PHP nie ponumerowuje rekordów w bazie danych. Jej zadaniem jest zwrócenie liczby wierszy znajdujących się w wyniku zapytania. Służy do sprawdzenia, ile rekordów spełnia określone kryteria w zapytaniu do bazy danych.
    B. zwrócić kolejny rekord z wynikami zapytania // Funkcja mysql_num_rows() w PHP nie zwraca kolejnego rekordu z wynikami zapytania. Jej zadaniem jest tylko zwrócenie liczby wierszy znajdujących się w wyniku zapytania.
    C. zwrócić liczbę wierszy znajdujących się w wyniku zapytania // Funkcja mysql_num_rows() w PHP właśnie zwraca liczbę wierszy znajdujących się w wyniku zapytania. Jest to przydatne, gdy chcemy sprawdzić ile rekordów spełnia określone kryteria w zapytaniu i użyć tej informacji w dalszej części kodu.
    D. zwrócić rekord, którego numer podany został w parametrze funkcji // Funkcja mysql_num_rows() w PHP nie zwraca rekordu, którego numer podany został w parametrze funkcji. Jej zadaniem jest tylko zwrócenie liczby wierszy znajdujących się w wyniku zapytania.
    
    282. Jaka treść komunikatu powinna być wstawiona w przedstawionym kodzie PHP zamiast znaków zapytania? // pytanie posiada zdjecie D:

    283. Testy aplikacji internetowej mające za zadanie sprawdzenie skalowalności aplikacji i bazy danych oraz architektury serwera i konfiguracji noszą nazwę testów
    A. kompatybilności // Testy kompatybilności aplikacji internetowej mają na celu sprawdzenie jej skalowalności oraz odpowiedniego działania na różnych platformach, przeglądarkach i systemach operacyjnych. Testują one również komunikację aplikacji z bazą danych oraz zewnętrznymi systemami.
    B. bezpieczeństwa // Testy bezpieczeństwa aplikacji internetowej służą do identyfikacji potencjalnych luki w zabezpieczeniach aplikacji. Sprawdzają one, czy aplikacja jest odporna na ataki typu SQL injection, cross-site scripting (XSS), nieautoryzowany dostęp czy uwierzytelnianie.
    C. funkcjonalnych // Testy funkcjonalne aplikacji internetowej mają na celu sprawdzenie, czy funkcjonalności aplikacji działają zgodnie z wymaganiami. Testują one podstawowe operacje, takie jak logowanie, przekierowania, wysyłanie formularzy czy wyświetlanie danych.
    D. użyteczności // Testy użyteczności aplikacji internetowej mają na celu ocenę łatwości użytkowania i zrozumiałości interfejsu dla użytkowników. Oceniają one czy interakcja z aplikacją jest intuicyjna, czy przyciski i funkcje są łatwo dostępne oraz czy wygląd i układ elementów są przyjazne dla użytkownika.
    
    284. Aby prawidłowo udokumentować linię kodu języka Java Script, należy po znakach // wpisać komentarz // pytanie posiada zdjecie D:

    285. Aby stronę WWW można było przesłać do przeglądarki internetowej w postaci zaszyfrowanej, należy użyć protokołu
    A. HTTPS // Protokół HTTPS (Hypertext Transfer Protocol Secure) jest używany do zabezpieczenia przesyłanych danych między stroną internetową a przeglądarką. Działa na zasadzie dodatkowego warstwowania danych w celu ich szyfrowania, co chroni prywatność użytkowników i zapobiega nieautoryzowanemu dostępowi do informacji.
    B. HTTP // Protokół HTTP (Hypertext Transfer Protocol) jest podstawowym protokołem komunikacyjnym używanym w sieci WWW. Działa na zasadzie przesyłania niezaszyfrowanych danych między serwerem a przeglądarką. Nie zapewnia zabezpieczenia danych ani prywatności użytkowników.
    C. SFTP // Protokół SFTP (SSH File Transfer Protocol) jest protokołem służącym do przesyłania plików w sposób bezpieczny. Wykorzystuje protokół SSH do uwierzytelniania i szyfrowania danych. Jest często stosowany w celu zdalnego zarządzania serwerami.
    D. SSH // Protokół SSH (Secure Shell) jest protokołem sieciowym umożliwiającym bezpieczne połączenie z innymi komputerami. Wykorzystuje technikę szyfrowania i uwierzytelniania, co umożliwia bezpieczną transmisję danych. SSH jest często używane do zdalnego zarządzania serwerami.
    
    286. W języku HTML, aby uzyskać efekt jak na przykładzie, należy zastosować konstrukcję // pytanie posiada zdjecie D:

    287. Zapis znacznika HTML w postaci // pytanie posiada zdjecie D:

    288. W części nagłówkowej kodu HTML zapisano tekst przedstawiony na obrazku. Zapisany tekst zostanie wyświetlony // pytanie posiada zdjecie D:

    289. Przeglądarka internetowa wyświetliła stronę w następujący sposób. Wskaż kod HTML, który poprawnie definiuje przedstawioną hierarchiczną strukturę tekstu: // pytanie posiada zdjecie D:

    290. W języku CSS, przedstawiony zapis sprawi, że plik rysunek.png będzie // pytanie posiada zdjecie D:

    291. W języku CSS, aby zdefiniować niestandardowe odstępy między wyrazami, stosuje się właściwość
    A. line-spacing // Właściwość A. line-spacing w języku CSS służy do określania odstępów pomiędzy liniami tekstu. Można ustawić wartość w pikselach, emach lub procentach. Im większa wartość, tym większy odstęp między liniami.
    B. white-space // Właściwość B. white-space w języku CSS kontroluje sposób obsługi białych znaków w tekście. Domyślnie jest ustawiona na 'normal', co oznacza, że dodatkowe białe znaki są łączone w jeden. Można zmienić na 'nowrap', aby zapobiec złamaniu wierszy, lub na 'pre', aby zachować oryginalny układ tekstu.
    C. word-spacing // Właściwość C. word-spacing w języku CSS pozwala regulować odstępy między wyrazami w tekście. Można ustawić wartość w pikselach, emach lub procentach. Im większa wartość, tym większy odstęp między wyrazami.
    D. letter-space // Właściwość D. letter-spacing w języku CSS kontroluje odstępy między literami w tekście. Może być ustawiona na dodatnią lub ujemną wartość. Dodatnia wartość powoduje zwiększenie odstępu między literami, podczas gdy ujemna wartość powoduje ich zbliżenie.
    
    292. W języku CSS zdefiniowano następujące formatowanie. Oznacza to, że kolorem niebieskim zostanie zapisany // pytanie posiada zdjecie D:

    293. W języku CSS, zapis w następującej postaci sprawi, iż koloru czerwonego będzie // pytanie posiada zdjecie D:

    294. W języku HTML informacje dotyczące autora, streszczenia i słów kluczowych strony należy umieścić
    A. pomiędzy znacznikami <head> i </head>, w znaczniku <meta> // Informacje dotyczące autora, streszczenia i słów kluczowych strony należy umieścić pomiędzy znacznikami <head> i </head>, w znaczniku <meta>. Znacznik <meta> jest używany do definiowania metadanych strony, takich jak jej opis, słowa kluczowe i autor.
    B. pomiędzy znacznikami <head> i </head>, w znaczniku <style> // Odpowiedź B nie jest poprawna.
    C. pomiędzy znacznikami <body> i </body>, w znaczniku <meta> // Odpowiedź C nie jest poprawna.
    D. pomiędzy znacznikami <body> i </body>, w znaczniku <html> // Odpowiedź D nie jest poprawna.
    
    295. Który z przedstawionych kodów XHTML sformatuje tekst według podanego wzoru? // pytanie posiada zdjecie D:

    296. Kolor zapisany kodem RGB o wartości rgb(128, 16, 8) w postaci szesnastkowej ma wartość
    A. #FF0F80 // Odpowiedź A jest niepoprawna. Kod RGB o wartości rgb(128, 16, 8) w postaci szesnastkowej ma wartość #FF0F80.
    B. #FF1008 // Odpowiedź B jest niepoprawna. Kod RGB o wartości rgb(128, 16, 8) w postaci szesnastkowej ma wartość #FF0F80.
    C. #801008 // Odpowiedź C jest poprawna. Kod RGB o wartości rgb(128, 16, 8) w postaci szesnastkowej ma wartość #801008. Rzeczywiście, pierwsza wartość (128) przekształcona na wartość szesnastkową to 80, druga wartość (16) to 10, a trzecia wartość (8) to 08.
    D. #800F80 // Odpowiedź D jest niepoprawna. Kod RGB o wartości rgb(128, 16, 8) w postaci szesnastkowej ma wartość #FF0F80.
    
    297. Które ze zdań opisuje grafikę wektorową?
    A. Jest to prezentacja obrazu za pomocą pionowo-poziomej siatki odpowiednio kolorowanych pikseli na monitorze komputera, drukarce lub innym urządzeniu wyjściowym // Grafika wektorowa to sposób prezentacji obrazu, w którym obraz jest opisywany za pomocą figur geometrycznych umieszczonych w układzie współrzędnych. Przy użyciu matematycznych równań, punkty są połączone liniami, tworząc kształty. Skalektrony prezentacji obrazu są niezależne od rozdzielczości, co oznacza, że obraz można skalować bez utraty jakości.
    B. Może być przechowywana w formacie JPG lub PNG // Formaty JPG i PNG nie są specjalnie dedykowane dla grafiki wektorowej. Są one natomiast często wykorzystywane do przechowywania grafiki rastrowej, która opiera się na siatce pikseli.
    C. Jest wykorzystywana do zapisu fotografii cyfrowej // Fotografie cyfrowe są zapisywane za pomocą grafiki rastrowej, gdzie każdy punkt obrazu jest opisany przez wartość koloru na siatce pikseli.
    D. Zapisywany obraz jest opisywany za pośrednictwem figur geometrycznych umieszczonych w układzie współrzędnych // To jest poprawna odpowiedź. Grafika wektorowa opisuje obrazy za pomocą figur geometrycznych, takich jak linie, krzywe i wielokąty, umieszczonych w układzie współrzędnych.
    
    298. Aby zbadać rozkład ilościowy poszczególnych kolorów zdjęcia, należy użyć
    A. desaturacji // Desaturacja to proces, w którym redukowany jest kolor obrazu, pozostawiając tylko odcienie szarości. Jest to przydatne narzędzie do badania różnic w jasności między poszczególnymi pikselami.
    B. histogramu // Histogram jest graficzną reprezentacją rozkładu ilościowego poszczególnych kolorów w obrazie. Pokazuje, ile pikseli obrazu ma określony kolor lub odcień i jest pomocny w analizie kontrastu, ekspozycji i balansu kolorów.
    C. balansu kolorów // Balans kolorów jest regulacją proporcji poszczególnych kolorów w obrazie, aby uzyskać prawdziwe i naturalne odwzorowanie barw. Pozwala na korektę nadmiaru lub niedoboru poszczególnych barw w obrazie.
    D. rozmycia Gaussa // Rozmycie Gaussa to technika przetwarzania obrazu, która redukuje ostrość i szczegóły, tworząc efekt gładkiej i rozmazanej fotografii. Jest często stosowany do wygładzania szumów i redukcji szumów w obrazach cyfrowych.
    
    299. W standardzie HDTV jest stosowana rozdzielczość
    A. 704 x 576 px // Rozdzielczość 704 x 576 px jest stosowana w standardzie SDTV (Standard Definition Television). Jest to niższa jakość obrazu niż w standardzie HDTV.
    B. 720 x 480 px // Rozdzielczość 720 x 480 px jest również stosowana w standardzie SDTV. Jest to także niższa jakość obrazu niż w standardzie HDTV.
    C. 1280 x 1024 px // Rozdzielczość 1280 x 1024 px nie jest stosowana w standardzie HDTV. Jest to rozdzielczość stosowana na niektórych monitorach komputerowych.
    D. 1920 x 1080 px // Rozdzielczość 1920 x 1080 px jest stosowana w standardzie HDTV (High Definition Television). Jest to wysoka jakość obrazu, pozwalająca na wyświetlanie szczegółowych obrazów w pełnym detalu.
    
    300. Którą klauzulę powinno się zastosować w poleceniu CREATE TABLE języka SQL, aby dane pole rekordu nie było puste?
    A. NULL // Klauzula 'NULL' oznacza, że dane pole rekordu może być puste. To znaczy, że wartość w tym polu może być nieokreślona lub brak wartości.
    B. CHECK // Klauzula 'CHECK' służy do określenia warunku, który musi być spełniony przez dane pole rekordu. Jeśli warunek nie jest spełniony, wartość w tym polu nie zostanie zapisana.
    C. DEFAULT // Klauzula 'DEFAULT' pozwala ustawić domyślną wartość dla danych pola rekordu. Jeśli pole nie zostanie wypełnione, zostanie użyta wartość domyślna.
    D. NOT NULL // Klauzula 'NOT NULL' oznacza, że dane pole rekordu nie może być puste. To znaczy, że wartość w tym polu musi być określona i nie może być brakująca.
    
    301. Polecenie języka SQL w postaci // pytanie posiada zdjecie D:

    302. W bazie danych hurtowni zdefiniowano tabelę sprzedaz o polach: id, kontrahent, grupa_cenowa, obrot. Aby wyszukać wyłącznie kontrahentów z drugiej grupy cenowej, których obrót jest większy niż 4000zł, należy zastosować polecenie
    A. SELECT sprzedaz FROM kontrahent WHERE obrot > 4000; // Punkt A: Zastosowanie polecenia SELECT sprzedaz FROM kontrahent WHERE obrot > 4000; nie będzie skuteczne w wyszukiwaniu kontrahentów z drugiej grupy cenowej, których obrót jest większy niż 4000zł. Polecenie to wybiera jedynie pola 'sprzedaz' z tabeli 'kontrahent', które mają obrót większy niż 4000zł.
    B. SELECT kontrahent FROM sprzedaz WHERE grupa_cenowa = 2 OR obrot > 4000; // Punkt B: Zastosowanie polecenia SELECT kontrahent FROM sprzedaz WHERE grupa_cenowa = 2 OR obrot > 4000; również nie będzie skuteczne w wyszukiwaniu kontrahentów z drugiej grupy cenowej, których obrót jest większy niż 4000zł. Polecenie to wybiera wszystkich kontrahentów z tabeli 'sprzedaz', którzy należą do grupy cenowej 2 lub mają obrót większy niż 4000zł.
    C. SELECT kontrahent FROM sprzedaz WHERE grupa_cenowa = 2 AND obrot > 4000; // Punkt C: Zastosowanie polecenia SELECT kontrahent FROM sprzedaz WHERE grupa_cenowa = 2 AND obrot > 4000; jest poprawne i skuteczne w wyszukiwaniu kontrahentów z drugiej grupy cenowej, których obrót jest większy niż 4000zł. Polecenie to wybiera kontrahentów z tabeli 'sprzedaz', którzy należą do grupy cenowej 2 i mają obrót większy niż 4000zł.
    D. SELECT sprzedaz FROM kontrahent WHERE grupa_cenowa = 2 AND obrot > 4000; // Punkt D: Zastosowanie polecenia SELECT sprzedaz FROM kontrahent WHERE grupa_cenowa = 2 AND obrot > 4000; nie będzie skuteczne w wyszukiwaniu kontrahentów z drugiej grupy cenowej, których obrót jest większy niż 4000zł. Polecenie to wybiera jedynie pola 'sprzedaz' z tabeli 'kontrahent', które należą do grupy cenowej 2 i mają obrót większy niż 4000zł.
    
    303. Dana jest tabela programiści o polach: id, nick, ilosc_kodu, ocena. Pole ilosc_kodu zawiera liczbę linii kodu napisanych przez programistę w danym miesiącu. Aby policzyć sumę linii kodu, który napisali wszyscy programiści, należy użyć polecenia
    A. SELECT SUM(ocena) FROM ilosc_kodu; // Polecenie A. SELECT SUM(ocena) FROM ilosc_kodu; nie jest poprawne, ponieważ pole 'ocena' odnosi się do oceny programisty, a nie do ilości linii kodu. Suma ocen programistów nie da nam sumy linii kodu.
    B. SELECT SUM(ilosc_kodu) FROM programisci; // Polecenie B. SELECT SUM(ilosc_kodu) FROM programisci; jest poprawne. Działa ono tak, że sumuje wartości pola 'ilosc_kodu' ze wszystkich rekordów w tabeli 'programisci'. W ten sposób otrzymujemy sumę linii kodu napisanych przez wszystkich programistów.
    C. SELECT COUNT(programisci) FROM ilosc_kodu; // Polecenie C. SELECT COUNT(programisci) FROM ilosc_kodu; nie jest poprawne. Pole 'programisci' nie jest poprawnym argumentem dla funkcji COUNT(). COUNT() służy do zliczania ilości rekordów w tabeli, a nie do sumowania wartości.
    D. SELECT MAX(ilosc_kodu) FROM programisci // Polecenie D. SELECT MAX(ilosc_kodu) FROM programisci; nie jest poprawne. MAX() służy do znajdowania maksymalnej wartości w polu 'ilosc_kodu'. Nie daje nam to sumy linii kodu napisanych przez wszystkich programistów.
    
    304. W instrukcji CREATE TABLE użycie klauzuli PRIMARY KEY przy deklaracji pola tabeli spowoduje, że pole to stanie się
    A. kluczem obcym // Klucz obcy to pole w tabeli, które odwołuje się do klucza podstawowego z innej tabeli.
    B. indeksem klucza // Indeks klucza umożliwia szybkie wyszukiwanie danych w tabeli na podstawie wartości klucza.
    C. indeksem unikalnym // Indeks unikalny pozwala na unikalność wartości w danym polu tabeli.
    D. kluczem podstawowym // Klucz podstawowy identyfikuje unikalnie rekordy w tabeli i jest wykorzystywany do zapewnienia integralności danych.
    
    305. Baza danych księgarni zawiera tabelę ksiazki z polami: id, idAutor, tytul, ileSprzedanych oraz tabelę autorzy z polami: id, imie, nazwisko. Aby stworzyć raport sprzedanych książek z tytułami i nazwiskami autorów, należy
    A. stworzyć kwerendę wyszukującą tytuły książek // Punkt A polega na stworzeniu kwerendy, która wyszuka tytuły książek. Wyszukiwanie odbywa się na podstawie danych zawartych w tabeli książki, w polu tytuł. Kwerenda zwróci listę wszystkich tytułów związanych z książkami.
    B. Zdefiniować relację 1..n dla tabel ksiazki i autorzy, a następnie stworzyć kwerendę łączącą obie tabele // Punkt B polega na zdefiniowaniu relacji 1..n pomiędzy tabelą książki a tabelą autorzy. Relacja ta oznacza, że jedna książka może mieć wielu autorów. Następnie należy stworzyć kwerendę, która połączy obie tabele na podstawie wspólnego pola idAutor. Takie połączenie umożliwi utworzenie raportu sprzedanych książek z tytułami i nazwiskami autorów.
    C. Zdefiniować relację 1..1 dla tabel ksiazki i autorzy, a następnie stworzyć kwerendę łączącą obie tabele // Punkt C polega na zdefiniowaniu relacji 1..1 pomiędzy tabelą książki a tabelą autorzy. Relacja ta oznacza, że jedna książka może mieć tylko jednego autora. Następnie, podobnie jak w przypadku punktu B, należy stworzyć kwerendę, która połączy obie tabele na podstawie wspólnego pola idAutor. Takie połączenie umożliwi utworzenie raportu sprzedanych książek z tytułami i nazwiskami autorów.
    D. stworzyć dwie osobne kwerendy: pierwszą wyszukującą tytuły książek, drugą wyszukującą nazwiska autorów // Punkt D polega na stworzeniu dwóch osobnych kwerend: pierwsza kwerenda wyszuka tytuły książek na podstawie danych zawartych w tabeli książki, w polu tytuł, a druga kwerenda wyszuka nazwiska autorów na podstawie danych zawartych w tabeli autorzy, w polach imie i nazwisko. Następnie należy połączyć wyniki obu kwerend, aby uzyskać raport sprzedanych książek z tytułami i nazwiskami autorów.
    
    306. Istnieje tabela pracownicy z polami: id, imie, nazwisko, pensja. W nowym roku postawiono podnieść pensję wszystkim pracownikom o 100 zł. Aktualizacja ta w bazie danych będzie miała postać
    A. UPDATE pracownicy SET pensja = pensja + 100; // Punkt A. UPDATE pracownicy SET pensja = pensja + 100;: Ta komenda aktualizuje wartość pola pensja dla wszystkich pracowników w tabeli pracownicy o dodatkowe 100 zł. Wykorzystuje operator '+', który dodaje 100 do aktualnej wartości pola pensja.
    B. UPDATE pracownicy SET pensja = 100; // Punkt B. UPDATE pracownicy SET pensja = 100;: Ta komenda aktualizuje wartość pola pensja dla wszystkich pracowników w tabeli pracownicy na stałą wartość 100 zł. Każdy pracownik otrzymałby wówczas równą pensję.
    C. UPDATE pensja SET +100; // Punkt C. UPDATE pensja SET +100;: Ta komenda próbuje zaktualizować tabelę o nazwie pensja, dodając 100 do wartości pola pensja. Jednak brakuje informacji o konkretnej tabeli pracownicy, dlatego jest niepoprawna.
    D. UPDATE pensja SET 100; // Punkt D. UPDATE pensja SET 100;: Ta komenda próbuje zaktualizować tabelę o nazwie pensja, ustawiając wartość pola pensja na 100. Jednak brakuje informacji o konkretnej tabeli pracownicy, dlatego jest niepoprawna.
    
    307. W tabeli artykuly wykonano następujące polecenia dotyczące praw użytkowania jan. Po wykonaniu poleceń użytkownik jan będzie miał prawa do // pytanie posiada zdjecie D:

    308. Aby przywrócić bazę danych MS SQL z kopii bezpieczeństwa, należy zastosować polecenie
    A. DBCC CHECKDB // Polecenie DBCC CHECKDB używane jest do sprawdzenia integralności i spójności danych w bazie danych MS SQL. Jest to przydatne narzędzie do diagnostyki i naprawy błędów w bazie danych.
    B. SAVE DATABASE // Polecenie SAVE DATABASE nie istnieje w kontekście przywracania bazy danych MS SQL z kopii bezpieczeństwa. Nie można go użyć do tego celu.
    C. RESTORE DATABASE // Polecenie RESTORE DATABASE służy do przywracania bazy danych MS SQL z kopii bezpieczeństwa. Pozwala na odtworzenie wcześniejszego stanu bazy danych, usuwając obecne dane i zastępując je danymi z kopii bezpieczeństwa.
    D. REBACKUP DATABASE // Polecenie REBACKUP DATABASE nie istnieje w kontekście przywracania bazy danych MS SQL z kopii bezpieczeństwa. Nie można go użyć do tego celu.
    
    309. Baza danych MySQL uległa uszkodzeniu. Które z działań NIE pomoże przy jej naprawie?
    A. Wykonanie replikacji bazy danych // Wykonanie replikacji bazy danych nie pomoże w naprawie uszkodzonej bazy danych MySQL. Replikacja polega na tworzeniu kopii bazy danych na innym serwerze, jednak jeśli baza danych źródłowa jest uszkodzona, to skopiowane dane również będą uszkodzone.
    B. Próba naprawy poleceniem REPAIR // Próba naprawy poleceniem REPAIR może pomóc w przypadku uszkodzenia tabel w bazie MySQL. Polecenie REPAIR jest używane do naprawy uszkodzonych tabel i może pomóc w przywróceniu spójności danych.
    C. Odtworzenie bazy z kopii bezpieczeństwa // Odtworzenie bazy z kopii bezpieczeństwa jest jednym z skutecznych sposobów naprawy uszkodzonej bazy danych MySQL. Posiadanie regularnych kopii zapasowych umożliwia przywrócenie poprawnych danych i struktury bazy.
    D. Stworzenie nowej bazy i przeniesienie do niej tabel // Stworzenie nowej bazy i przeniesienie do niej tabel może być jednym z rozwiązań, jeśli uszkodzenie bazy danych MySQL jest poważne i nie może być naprawione. Przeniesienie tabel do nowej bazy pozwoli utworzyć świeżą bazę danych, na której można będzie pracować dalej.
    
    310. W formularzu, dane z pola input o typie number zostały zapisane do zmiennej a, a następnie przetworzone w skrypcie JavaScript w następujący sposób. Zmienna x będzie typu // pytanie posiada zdjecie D:

    311. Wstawki kodu JavaScript w dokumencie HTML mogą się znaleźć
    A. tylko w cześci <head>, w znaczniku <script> // Punkt A: Wstawki kodu JavaScript można umieszczać tylko w części <head>, w znaczniku <script>.
    B. tylko w cześci <body>, w znaczniku <java> // Punkt B: Wstawki kodu JavaScript można umieszczać tylko w części <body>, w znaczniku <java>.
    C. zarówno w cześci <head>, jak i <body>, w znaczniku <java> // Punkt C: Wstawki kodu JavaScript można umieszczać zarówno w części <head>, jak i <body>, w znaczniku <java>.
    D. zarówno w cześci <head>, jak i <body>, w znaczniku <script> // Punkt D: Wstawki kodu JavaScript można umieszczać zarówno w części <head>, jak i <body>, w znaczniku <script>.
    
    312. W przedstawonym kodzie JavaScript dla ułatwienia ponumerowano linie. W kodzie znajduje się błąd, gdyż po uruchomieniu żaden komunikat nie zostaje wyświetlony. Aby wyeliminować błąd, należy // pytanie posiada zdjecie D:

    313. Ile iteracji będzie miała przedstawiona pętla zapisana w języku PHP, zakładając, że zmienna sterująca nie jest modyfikowana we wnętrzu pętli? // pytanie posiada zdjecie D:

    314. W języku JavaScript metoda document.getElementById(id) ma za zadanie
    A. wstawić tekst o treści ’id’ na stronie WWW // Metoda document.getElementById(id) wstawi tekst o treści ’id’ na stronie WWW.
    B. sprawdzić poprawność formularza o identyfikatorze id // Metoda document.getElementById(id) sprawdzi poprawność formularza o identyfikatorze id.
    C. pobrać dane z pola formularza i wstawić je do zmiennej id // Metoda document.getElementById(id) pobierze dane z pola formularza i wstawi je do zmiennej id.
    D. zwrócić odniesienie do pierwszego elementu HTML o podanym id // Metoda document.getElementById(id) zwróci odniesienie do pierwszego elementu HTML o podanym id.
    
    315. W instrukcji warunkowej JavaScript należy sprawdzić przypadek, gdy zmienne a oraz b są dodatnie, z czego zmienna b jest mniejsza od 100. Warunek taki powinien być zapisany w następujący sposób:
    A. if ( a > 0 || b > 0 || b > 100) // Punkt A sprawdza, czy zmienna a jest większa od 0 lub zmienna b jest większa od 0 lub zmienna b jest większa od 100. Jeśli któryś z tych warunków jest spełniony, to instrukcje warunkowe zwrócą wartość true.
    B. if ( a > 0 && b > 0 || b > 100) // Punkt B sprawdza, czy zmienna a jest większa od 0 i zmienna b jest większa od 0 lub zmienna b jest większa od 100. Jeśli te dwa warunki są spełnione, instrukcje warunkowe zwrócą wartość true.
    C. if ( a > 0 || (b > 0 && b < 100)) // Punkt C sprawdza, czy zmienna a jest większa od 0 lub (czyli albo) zmienna b jest większa od 0 i zmienna b jest mniejsza od 100. Jeśli któryś z tych warunków jest spełniony, instrukcje warunkowe zwrócą wartość true.
    D. if ( a > 0 && b > 0 && b < 100) // Punkt D sprawdza, czy zarówno zmienna a, jak i zmienna b są większe od 0 i czy zmienna b jest mniejsza od 100. Tylko jeśli wszystkie trzy warunki są spełnione, instrukcje warunkowe zwrócą wartość true.
    
    316. Zadaniem przedstawionej funkcji zapisanej w języku JavaScript jest // pytanie posiada zdjecie D:

    317. Przedstawiony kod został zapisany w języku JavaScript. W podanej definicji obiektu metodą jest element o nazwie // pytanie posiada zdjecie D:

    318. Aby uzyskać informacje o środowisku pracy serwera obsługującego PHP, należy skorzystać z funkcji
    A. php() // Funkcja php() nie istnieje w języku PHP. Nie można jej używać do uzyskania informacji o środowisku pracy serwera.
    B. phpinfo() // Funkcja phpinfo() jest wbudowaną funkcją w języku PHP, która pozwala uzyskać informacje o środowisku pracy serwera obsługującego PHP. Po jej wywołaniu wyświetlana jest szczegółowa tabela z informacjami takimi jak wersja PHP, informacje o konfiguracji, włączone rozszerzenia, itp.
    C. phpgetinfo() // Funkcja phpgetinfo() nie jest wbudowaną funkcją w języku PHP. Nie można jej używać do uzyskania informacji o środowisku pracy serwera.
    D. phpinformation() // Funkcja phpinformation() nie istnieje w języku PHP. Nie można jej używać do uzyskania informacji o środowisku pracy serwera.
    
    319. Fragment kodu w języku PHP wypisze // pytanie posiada zdjecie D:

    320. Do uruchomienia skryptu JavaScript wymagane jest oprogramowanie
    A. serwera WWW // Do uruchomienia skryptu JavaScript nie jest wymagane oprogramowanie serwera WWW. Serwer WWW jest potrzebny do hostingu aplikacji internetowych, ale nie jest konieczny do uruchomienia samego skryptu JavaScript.
    B. serwera MySQL // Do uruchomienia skryptu JavaScript nie jest wymagane oprogramowanie serwera MySQL. Serwer MySQL służy do zarządzania bazami danych i nie jest bezpośrednio potrzebny do uruchomienia skryptu JavaScript.
    C. debugera JavaScript // Do uruchomienia skryptu JavaScript nie jest wymagane oprogramowanie debugera JavaScript. Debugger JavaScript jest przydatnym narzędziem do debugowania i testowania skryptów JavaScript, ale nie jest niezbędny do ich uruchomienia.
    D. przeglądarki internetowej // Do uruchomienia skryptu JavaScript jest wymagane oprogramowanie przeglądarki internetowej. Przeglądarka internetowa interpretuje i wykonuje skrypty JavaScript, co umożliwia ich działanie na stronach internetowych.
    
    321. Zadaniem funkcji PHP o nazwie mysql_select_db() jest
    A. połączyć bazę danych z serwerem SQL // Funkcja mysql_select_db() nie połącza bazy danych z serwerem SQL. Jest to zadanie innej funkcji, np. mysql_connect().
    B. określić bazę, z której będą pobierane dane // Funkcja mysql_select_db() określa bazę danych, z której będą pobierane dane. Innymi słowy, informuje serwer SQL, z którą bazą danych użytkownik chce się połączyć i z której chciałby pobierać dane.
    C. określić tabelę, z której będą pobierane dane // Funkcja mysql_select_db() nie określa tabeli, z której będą pobierane dane. Jest to zadaniem innych funkcji, np. mysql_query().
    D. pobrać dane z bazy danych na podstawie kwerendy // Funkcja mysql_select_db() nie pobiera danych z bazy danych na podstawie kwerendy. Służy jedynie do określenia bazy danych, z której chcemy pobierać dane.
    
    322. W przedstawionym kodzie PHP, zamiast znaków zapytania powinien pojawić się komunikat: // pytanie posiada zdjecie D:

    323. Testy wydajnościowe mają na celu sprawdzenie
    A. zdolności oprogramowania do działania w warunkach wadliwej pracy sprzętu // Testy wydajnościowe mają na celu sprawdzenie zdolności oprogramowania do działania w warunkach wadliwej pracy sprzętu. Polega to na symulowaniu sytuacji, w których sprzęt nie działa poprawnie i sprawdzaniu, czy oprogramowanie potrafi sobie poradzić z takimi sytuacjami.
    B. zdolności oprogramowania do działania w warunkach wadliwej pracy systemu // Testy wydajnościowe mają na celu sprawdzenie zdolności oprogramowania do działania w warunkach wadliwej pracy systemu. Polega to na symulowaniu sytuacji, w których system nie działa poprawnie i sprawdzaniu, czy oprogramowanie potrafi sobie poradzić z takimi sytuacjami.
    C. stopnia spełnienia wymagań wydajnościowych przez system lub moduł // Testy wydajnościowe mają na celu sprawdzenie stopnia spełnienia wymagań wydajnościowych przez system lub moduł. Jest to ocena efektywności działania oprogramowania pod względem czasu, zużycia zasobów i wydajności wykonania określonych operacji.
    D. ciągu zdarzeń, w którym prawdopodobieństwo każdego zdarzenia zależy jedynie od wyniku poprzedniego // Testy wydajnościowe nie mają związku z ciągiem zdarzeń, w którym prawdopodobieństwo każdego zdarzenia zależy jedynie od wyniku poprzedniego. Są one skoncentrowane na ocenie wydajności oprogramowania i nie uwzględniają tego rodzaju aspektów.
    
    324. Aby prawidłowo udokumentować przedstawioną linię kodu języka JavaScript, należy po znakach // wpisać komentarz // pytanie posiada zdjecie D:

    325. Przekierowanie 301 służące przekierowaniu użytkownika z jednego adresu URL na inny można ustawić w pliku konfiguracji serwera Apache o nazwie
    A. conf.php // Przekierowanie 301 służy do przekierowania użytkownika z jednego adresu URL na inny. Jest to ustalane w pliku konfiguracyjnym serwera Apache o nazwie conf.php.
    B. .htaccess // Przekierowanie 301 może być ustawione w pliku .htaccess. Ten plik znajduje się w głównym katalogu witryny i zawiera instrukcje dotyczące konfiguracji serwera.
    C. .apacheConf // Nieprawidłowa odpowiedź
    D. configuration.php // Nieprawidłowa odpowiedź
    
    326. W języku HTML aby zdefiniować słowa kluczowe strony, należy użyć zapisu
    A. <meta keywords="psy, koty, gryzonie"> // W punkcie A w języku HTML używamy zapisu <meta keywords="słowa kluczowe">, aby zdefiniować słowa kluczowe strony. Przykładowo, jeśli nasza strona dotyczy zwierząt, możemy użyć <meta keywords="psy, koty, gryzonie">. Słowa kluczowe pomagają wyszukiwarkom internetowym zrozumieć, o czym jest nasza strona i mogą wpływać na jej pozycjonowanie w wynikach wyszukiwania.
    B. <meta name="keywords" ="psy, koty, gryzonie"> // W punkcie B w języku HTML używamy zapisu <meta name="keywords"="słowa kluczowe">, aby zdefiniować słowa kluczowe strony. Przykładowo, jeśli nasza strona dotyczy zwierząt, możemy użyć <meta name="keywords"="psy, koty, gryzonie">. Ta linia kodu informuje przeglądarkę internetową, że chcemy określić słowa kluczowe strony.
    C. <meta name="keywords" content="psy, koty, gryzonie"> // W punkcie C w języku HTML używamy zapisu <meta name="keywords" content="słowa kluczowe">, aby zdefiniować słowa kluczowe strony. Przykładowo, jeśli nasza strona dotyczy zwierząt, możemy użyć <meta name="keywords" content="psy, koty, gryzonie">. Ta linia kodu informuje przeglądarkę internetową, że chcemy określić słowa kluczowe strony, a wartość "psy, koty, gryzonie" określa te słowa kluczowe.
    D. <meta name="description" content="psy, koty, gryzonie"> // W punkcie D w języku HTML używamy zapisu <meta name="description" content="opis strony">, aby określić opis strony. Przykładowo, jeśli nasza strona dotyczy zwierząt, możemy użyć <meta name="description" content="Strona poświęcona różnym gatunkom zwierząt, takim jak psy, koty i gryzonie">. Ten opis może być wyświetlany przez wyszukiwarki internetowe w wynikach wyszukiwania, aby pomóc użytkownikom zrozumieć, o czym jest strona.
    
    327. W języku HTML zdefiniowano znacznik a. Wartość nofollow atrybutu rel // pytanie posiada zdjecie D:

    328. W języku HTML aby zdefiniować poziomą linię, należy użyć znacznika
    A. <line> // Znak <line> nie istnieje w języku HTML. Nie jest to poprawny znacznik do definiowania poziomej linii.
    B. <br> // Znak <br> używany jest do wstawiania nowej linii w tekście. Nie jest to znacznik do definiowania poziomej linii.
    C. <hl> // Znak <hl> nie istnieje w języku HTML. Nie jest to poprawny znacznik do definiowania poziomej linii.
    D. <hr> // Znak <hr> jest poprawnym znacznikiem w języku HTML do definiowania poziomej linii. Powoduje ona widoczne przerwanie linią na stronie, w celu oddzielenia sekcji lub elementów.
    
    329. Zapisano kod HTML wstawiający grafikę na stronę internetową. Jeżeli rysunek.png nie zostanie odnaleziony, przeglądarka // pytanie posiada zdjecie D:

    330. Aby w języku HTML uzyskać takie formatowanie paragrafu dla tekstu należy zastosować kod // pytanie posiada zdjecie D:

    331. Zamieszczony kod HTML formularza zostanie wyświetlony przez przeglądarkę w sposób: // pytanie posiada zdjecie D:

    332. W języku CSS wcięcie pierwszej linii akapitu na 30 pikseli uzyska się za pomocą zapisu
    A. p { text-indent: 30px; } // Punkt A - Zapis p { text-indent: 30px; } w języku CSS służy do ustawienia wcięcia pierwszej linii akapitu na 30 pikseli. Dzięki temu kodowi, pierwsza linijka tekstu w akapicie zostaje przesunięta o 30 pikseli w prawo.
    B. p { text-spacing: 30px; } // Punkt B - Zapis p { text-spacing: 30px; } nie jest poprawnym zapisem w języku CSS. Nie istnieje właściwość text-spacing w CSS, która służyłaby do ustawiania wcięcia pierwszej linii akapitu.
    C. p { line-height: 30px; } // Punkt C - Zapis p { line-height: 30px; } w języku CSS służy do ustawienia wysokości linii tekstu na 30 pikseli. Nie ma bezpośredniego wpływu na wcięcie pierwszej linii akapitu.
    D. p { line-indent: 30px; } // Punkt D - Zapis p { line-indent: 30px; } nie jest poprawnym zapisem w języku CSS. Nie istnieje właściwość line-indent, która służyłaby do ustawiania wcięcia pierwszej linii akapitu.
    
    333. W języku CSS zdefiniowano następujące formatowanie. Kolorem czerwonym zostanie zapisany // pytanie posiada zdjecie D:

    334. W języku CSS, aby sformatować dowolny element języka HTML w ten sposób, że po najechaniu na niego kursorem zmienia on kolor czcionki, należy zastosować pseudoklasę
    A. :active // Pseudoklasa :active w języku CSS służy do formatowania elementu języka HTML, gdy znajduje się w stanie aktywnym. Na przykład po kliknięciu na przycisk, kolor czcionki może zmienić się na inny.
    B. :hover // Pseudoklasa :hover w języku CSS służy do formatowania elementu języka HTML, gdy na niego najedziemy kursorem myszy. Na przykład po najechaniu na link, kolor czcionki może zmienić się na inny.
    C. :visited // Pseudoklasa :visited w języku CSS służy do formatowania elementu języka HTML, który został odwiedzony przez użytkownika. Na przykład odwiedzony link może mieć inny kolor czcionki.
    D. :coursor // Pseudoklasa :coursor nie istnieje w języku CSS. Poprawna odpowiedź to B. :hover.
    
    335. Zapis CSS w takiej postaci sprawi, że na stronie internetowej // pytanie posiada zdjecie D:

    336. W języku CSS aby zdefiniować odmienne formatowanie dla pierwszej litery akapitu, należy zastosować selektor
    A. klasy p.first-letter // Punkt A oznacza, że należy zastosować selektor klasy p.first-letter. Jest to sposób na zdefiniowanie odmiennej formatowania dla pierwszej litery akapitu. Na przykład możemy ustawić większą czcionkę lub dodać ozdobne ozdoby na początku tekstu.
    B. dziecka p + first-letter // Punkt B jest niepoprawny. Brak odpowiedniego zapisu selektora, który definiuje pierwszą literę akapitu.
    C. atrybutu p [first-letter] // Punkt C jest niepoprawny. Brak odpowiedniego zapisu selektora, który definiuje pierwszą literę akapitu.
    D. pseudoelementu p::first-letter // Punkt D oznacza, że należy zastosować pseudoelement p::first-letter. Jest to poprawny sposób na zdefiniowanie odmiennej formatowania dla pierwszej litery akapitu w języku CSS. Możemy tutaj ustawić różne style, takie jak kolor, rozmiar czcionki, czy marginesy.
    
    337. W kodzie źródłowym zapisanym w języku HTML wskaż błąd walidacji dotyczący tego fragmentu // pytanie posiada zdjecie D:

    338. W ramce przedstawiono właściwości pliku graficznego. W celu optymalizacji czasu ładowania rysunku na stronę WWW należy // pytanie posiada zdjecie D:

    339. W programie INKSCAPE / COREL aby uzyskać przedstawiony efekt napisu, należy // pytanie posiada zdjecie D:

    340. Programem do edycji dźwięku jest
    A. Brasero // Brasero - nie jest programem do edycji dźwięku. Jest to aplikacja do nagrywania płyt CD/DVD.
    B. Winamp // Winamp - również nie jest programem do edycji dźwięku. To odtwarzacz multimedialny, który obsługuje głównie pliki audio.
    C. Audacity // Audacity - jest programem do edycji dźwięku. Pozwala na nagrywanie, edycję i miksowanie dźwięku z różnych źródeł. Jest darmowy i łatwy w obsłudze.
    D. RealPlayer // RealPlayer - także nie jest programem do edycji dźwięku. To odtwarzacz multimedialny, który obsługuje różne formaty plików audio i wideo.
    
    341. Dana jest tabela pracownicy. Polecenie MySQL usuwające wszystkie rekordy z tabeli, dla których nie wypełniono pola rodzaj_umowy, ma postać
    A. DROP pracownicy FROM rodzaj_umowy = 0; // Punkt A: DROP pracownicy FROM rodzaj_umowy = 0; - ta odpowiedź jest niepoprawna. Polecenie DROP jest używane do usuwania tabeli, a nie rekordów w tabeli. Ponadto, warunek rodzaj_umowy = 0 jest niepoprawny, ponieważ pole rodzaj_umowy nie jest liczbą.
    B. DROP pracownicy WHERE rodzaj_umowy IS NULL; // Punkt B: DROP pracownicy WHERE rodzaj_umowy IS NULL; - ta odpowiedź jest niepoprawna. Polecenie DROP jest nadal używane do usuwania tabeli, a nie rekordów w tabeli. Warunek rodzaj_umowy IS NULL jest poprawny, oznacza to, że rekordy, dla których pole rodzaj_umowy jest puste, zostaną usunięte.
    C. DELETE pracownicy WHERE rodzaj_umowy = 'brak'; // Punkt C: DELETE pracownicy WHERE rodzaj_umowy = 'brak'; - ta odpowiedź jest niepoprawna. Polecenie DELETE jest używane do usuwania rekordów w tabeli. Jednak warunek rodzaj_umowy = 'brak' jest niepoprawny, ponieważ pole rodzaj_umowy nie zawiera ciągu znaków 'brak'.
    D. DELETE FROM pracownicy WHERE rodzaj_umowy IS NULL; // Punkt D: DELETE FROM pracownicy WHERE rodzaj_umowy IS NULL; - ta odpowiedź jest poprawna. Polecenie DELETE FROM jest używane do usuwania rekordów w tabeli. Warunek rodzaj_umowy IS NULL jest poprawny, oznacza to, że rekordy, dla których pole rodzaj_umowy jest puste, zostaną usunięte.
    
    342. W języku SQL, aby stworzyć tabelę, należy zastosować polecenie
    A. ADD TABLE // Polecenie ADD TABLE nie istnieje w języku SQL. Nie można stworzyć tabeli za pomocą tego polecenia.
    B. ALTER TABLE // Polecenie ALTER TABLE służy do modyfikacji istniejącej tabeli, np. dodania lub usunięcia kolumny. Nie służy do tworzenia nowej tabeli.
    C. INSERT TABLE // Polecenie INSERT TABLE nie istnieje w języku SQL. Nie można dodać tabeli za pomocą tego polecenia.
    D. CREATE TABLE // Polecenie CREATE TABLE jest używane w języku SQL do tworzenia nowej tabeli. Określa się nazwę tabeli oraz jej strukturę, czyli nazwy kolumn i typy danych, jakie mają przechowywać.
    
    343. W przedstawionym fragmencie kwerendy języka SQL, komenda SELECT ma za zadanie zwrócić // pytanie posiada zdjecie D:

    344. Dana jest tabela ksiazki z polami: tytul, autor (typu tekstowego), cena (typu liczbowego). Aby kwerenda SELECT zwróciła tylko tytuły, dla których cena jest mniejsza od 50zł, należy zapisać:
    A. SELECT * FROM ksiazki WHERE cena < 50; // Punkt A: SELECT * FROM ksiazki WHERE cena < 50; - w tej kwerendzie SELECT zostaną zwrócone wszystkie pola (tytuł, autor, cena) z tabeli ksiazki, gdzie cena jest mniejsza od 50 zł.
    B. SELECT tytul FROM ksiazki WHERE cena < 50; // Punkt B: SELECT tytul FROM ksiazki WHERE cena < 50; - w tej kwerendzie SELECT zostaną zwrócone tylko pola tytul z tabeli ksiazki, gdzie cena jest mniejsza od 50 zł.
    C. SELECT tytul FROM ksiazki WHERE cena > '50 zł'; // Punkt C: SELECT tytul FROM ksiazki WHERE cena > '50 zł'; - ta kwerenda SELECT nie będzie działać poprawnie, ponieważ porównujemy liczbę (cena) z tekstem ('50 zł').
    D. SELECT ksiazki FROM tytul WHERE cena < '50 zł'; // Punkt D: SELECT ksiazki FROM tytul WHERE cena < '50 zł'; - ta kwerenda SELECT nie będzie działać poprawnie, ponieważ nie ma tabeli o nazwie 'tytul'.
    
    345. W bazie danych MYSQL dana jest tabela programów komputerowych o polach: nazwa, producent, rokWydania. Aby kwerenda SELECT zwróciła wszystkie nazwy producentów tak, by nazwy te nie powtarzały się, należy zapisać:
    A. SELECT UNIQUE producent FROM programy; // Aby kwerenda SELECT zwróciła wszystkie nazwy producentów tak, by nazwy te nie powtarzały się, używamy słowa kluczowego UNIQUE. Jednak w SQL nie istnieje składnia SELECT UNIQUE. Dlatego odpowiedź A. SELECT UNIQUE producent FROM programy jest niepoprawna.
    B. SELECT DISTINCT producent FROM programy; // Aby kwerenda SELECT zwróciła wszystkie nazwy producentów tak, by nazwy te nie powtarzały się, używamy słowa kluczowego DISTINCT. Dlatego poprawna odpowiedź to B. SELECT DISTINCT producent FROM programy.
    C. SELECT producent FROM programy WHERE UNIQUE; // W tej odpowiedzi nie ma poprawnego sposobu na zwrócenie tylko unikalnych nazw producentów w kwerendzie SELECT. Dlatego odpowiedź C. SELECT producent FROM programy WHERE UNIQUE jest niepoprawna.
    D. SELECT producent FROM programy WHERE producent NOT DUPLICATE; // W tej odpowiedzi nie ma poprawnego sposobu na zwrócenie tylko unikalnych nazw producentów w kwerendzie SELECT. Dlatego odpowiedź D. SELECT producent FROM programy WHERE producent NOT DUPLICATE jest niepoprawna.
    
    346. Tabela filmy zawiera klucz główny id oraz klucz obcy rezyserID. Tabela rezyserzy zawiera klucz główny id. Obydwie tabele połączone są relacją jeden po stronie rezyserzy do wielu po stronie filmy. Aby w kwerendzie SELECT połączyć tabele filmy i rezyserzy, należy zapisać
    A. ... filmy JOIN rezyserzy ON filmy.id = rezyserzy.id ... // W odpowiedzi A, tabele 'filmy' i 'rezyserzy' są łączone za pomocą instrukcji JOIN, która umożliwia połączenie danych z obu tabel na podstawie warunku, że wartosci w kolumnie 'id' w tabeli 'filmy' muszą być równe wartosci w kolumnie 'id' w tabeli 'rezyserzy'.
    B. ... filmy JOIN rezyserzy ON filmy.id = rezyserzy.filmyID ... // Odpowiedź B jest niepoprawna, ponieważ odwołuje się do nieistniejącej kolumny 'filmyID' w tabeli 'rezyserzy'.
    C. ... filmy JOIN rezyserzy ON filmy.rezyserID = rezyserzy.id ... // W odpowiedzi C, tabele 'filmy' i 'rezyserzy' są łączone za pomocą instrukcji JOIN, gdzie warunek łączenia jest taki, że wartości w kolumnie 'rezyserID' w tabeli 'filmy' muszą być równe wartości w kolumnie 'id' w tabeli 'rezyserzy'.
    D. ... filmy JOIN rezyserzy ON filmy.rezyserID = rezyserzy.filmyID ... // Odpowiedź D jest niepoprawna, ponieważ odwołuje się do nieistniejącej kolumny 'filmyID' w tabeli 'rezyserzy'.
    
    347. Na rysunku przedstawiono dwie tabele. Aby połączyć je relacją jeden do wielu, jeden po stronie Klienci wiele po stronie Zamowienia, należy // pytanie posiada zdjecie D:

    348. Źródłem rekordów dla raportu może być
    A. Tabela // Tabela jest źródłem rekordów dla raportu. Jest to struktura danych w bazie danych, która przechowuje informacje w formie wierszy i kolumn. W raporcie, tabela zawiera konkretne dane, które są niezbędne do analizy i prezentacji.
    B. Inny raport // Inny raport może również być źródłem rekordów dla raportu. Oznacza to, że dane z innego raportu mogą być wykorzystane do stworzenia nowego raportu lub włączone jako elementy w istniejącym raporcie. Ta opcja daje możliwość generowania bardziej zaawansowanych i złożonych raportów.
    C. Makropolecenie // Makropolecenie jest innym źródłem rekordów dla raportu. Jest to zestaw instrukcji lub poleceń, które można wykorzystać do automatyzacji różnych operacji w programach takich jak bazy danych. Makropolecenie może być użyte, aby pobierać dane z różnych źródeł i przekazywać je do raportu.
    D. Zapytanie INSERT INTO // Zapytanie INSERT INTO nie jest źródłem rekordów dla raportu. Jest to polecenie SQL używane do wstawiania danych do tabeli. Może być wykorzystywane do dodawania nowych rekordów do bazy danych, ale samo w sobie nie dostarcza danych do raportu.
    
    349. Przedstawione polecenie MySQL ma za zadanie // pytanie posiada zdjecie D:

    350. W tabeli podzespoly należy zmienić wartość pola URL na 'toshiba.pl' dla wszystkich rekordów, gdzie pole producent to TOSHIBA. W języku SQL modyfikacja będzie miała postać
    A. UPDATE podzespoly SET URL='toshiba.pl'; // Punkt A oznacza, że w tabeli 'podzespoly' zostanie zaktualizowana wartość pola 'URL' na 'toshiba.pl' dla wszystkich rekordów.
    B. UPDATE producent='TOSHIBA' SET URL='toshiba.pl'; // Punkt B jest niepoprawny. Brakuje części składających się na składnię zapytania SQL.
    C. UPDATE podzespoly.producent='TOSHIBA' SET URL='toshiba.pl'; // Punkt C jest niepoprawny. Brakuje części składających się na składnię zapytania SQL.
    D. UPDATE podzespoly SET URL='toshiba.pl' WHERE producent='TOSHIBA'; // Punkt D jest poprawny. Oznacza on, że w tabeli 'podzespoly' zostanie zaktualizowana wartość pola 'URL' na 'toshiba.pl' tylko dla rekordów, gdzie pole 'producent' ma wartość 'TOSHIBA'.
    
    351. Do zabezpieczeń serwera bazy danych przed atakami hakerów nie należy
    A. Włączenie zapory // Włączenie zapory - Zapora sieciowa (firewall) to rodzaj oprogramowania lub urządzenia, które kontroluje ruch sieciowy wchodzący i wychodzący z serwera bazy danych. Działa na zasadzie blokowania nieuprawnionego dostępu do bazy danych poprzez analizę pakietów danych i ich odfiltrowanie na podstawie określonych reguł.
    B. Defragmentacja dysków // Defragmentacja dysków - Proces defragmentacji polega na uporządkowaniu danych na dysku twardym w celu poprawy wydajności i szybkości dostępu do nich. Jednak defragmentacja dysków nie jest bezpośrednio związana z zabezpieczeniami serwera bazy danych przed atakami hakerów. Jest to bardziej środek optymalizacyjny niż zabezpieczający.
    C. Stosowanie złożonych haseł do bazy // Stosowanie złożonych haseł do bazy - Wprowadzanie złożonych haseł do bazy danych jest ważnym krokiem w zabezpieczeniu serwera przed atakami hakerów. Złożone hasła powinny zawierać kombinację małych i dużych liter, cyfr oraz znaków specjalnych. Im bardziej skomplikowane hasło, tym trudniejsze będzie jego złamanie.
    D. Blokowanie portów związanych z bazą danych // Blokowanie portów związanych z bazą danych - Blokowanie portów związanych z bazą danych to kolejny sposób zabezpieczania serwera przed atakami hakerów. Poprzez zablokowanie niepotrzebnych portów lub otwarcie ich tylko dla określonych adresów IP, można ograniczyć dostęp do bazy danych tylko do zaufanych źródeł i zapobiec nieuprawnionemu dostępowi.
    
    352. W języku MySQL należy zastosować polecenie REVOKE, aby użytkownikowi anna odebrać prawo do dokonywania zmian jedynie w definicji struktury bazy danych. Polecenie odpowiadające odebraniu tych praw ma postać
    A. REVOKE ALL ON tabela1 FROM 'anna'@'localhost' // W odpowiedzi A, polecenie REVOKE ALL ON tabela1 FROM 'anna'@'localhost' oznacza odebranie wszystkich praw użytkownikowi 'anna' dotyczących tabeli 'tabela1'. Nie ma jednak specyfikacji co do konkretnych uprawnień, więc nie spełnia wymogów zadania.
    B. REVOKE CREATE ALTER DROP ON tabela1 FROM 'anna'@'localhost' // W odpowiedzi B, polecenie REVOKE CREATE ALTER DROP ON tabela1 FROM 'anna'@'localhost' oznacza odebranie użytkownikowi 'anna' praw do tworzenia, zmieniania i usuwania obiektów w tabeli 'tabela1'. Te prawa dotyczą jedynie definicji struktury bazy danych, czyli użytkownik nadal może dodawać, modyfikować i usuwać rekordy. To jest poprawna odpowiedź.
    C. REVOKE CREATE UPDATE DROP ON tabela1 FROM 'anna'@'localhost' // W odpowiedzi C, polecenie REVOKE CREATE UPDATE DROP ON tabela1 FROM 'anna'@'localhost' oznacza odebranie użytkownikowi 'anna' praw do tworzenia, aktualizowania i usuwania obiektów w tabeli 'tabela1'. Nie spełnia więc wymogów zadania, ponieważ brakuje prawa do zmiany struktury bazy danych.
    D. REVOKE CREATE INSERT DELETE ON tabela1 FROM 'anna'@'localhost' // W odpowiedzi D, polecenie REVOKE CREATE INSERT DELETE ON tabela1 FROM 'anna'@'localhost' oznacza odebranie użytkownikowi 'anna' praw do tworzenia, dodawania i usuwania rekordów w tabeli 'tabela1'. To nie jest odpowiedź poprawna, ponieważ nie zawiera prawa do modyfikacji rekordów.
    
    353. W języku JavaScript, aby sprawdzić warunek czy liczba znajduje się w przedziale (100;200>, należy zapisać:
    A. if (liczba > 100 || liczba <= 200) // Warunek sprawdza, czy liczba jest większa od 100 lub mniejsza lub równa 200.
    B. if (liczba < 100 || liczba >= 200) // Warunek sprawdza, czy liczba jest mniejsza od 100 lub większa lub równa 200.
    C. if (liczba > 100 && liczba <= 200) // Warunek sprawdza, czy liczba jest większa od 100 i mniejsza lub równa 200.
    D. if (liczba < 100 && liczba <= 200) // Warunek sprawdza, czy liczba jest mniejsza od 100 i mniejsza lub równa 200.
    
    354. W wyniku działania pętli zapisanej w języku PHP zostanie wypisany ciąg liczb // pytanie posiada zdjecie D:

    355. Które z poniższych zdań dotyczących zasad programowania w języku PHP jest prawdziwe?
    A. Jest to język o słabej kontroli typów // Język PHP jest znany z tego, że ma słabą kontrolę typów. Oznacza to, że nie jest wymagane określanie typu zmiennej podczas jej deklaracji. Zmienna może być używana jako przechowujećdowolne dane, niezależnie od ich typu.
    B. Nazwy zmiennych są poprzedzone znakiem ! // W języku PHP nazwy zmiennych nie są poprzedzone znakiem '!'. Nazwy zmiennych powinny zaczynać się od litery lub znaku dolara ($) i mogą zawierać litery, cyfry i znaki podkreślenia.
    C. Deklaracja zmiennych następuje po słowie var // Deklaracja zmiennych w języku PHP nie następuje po słowie 'var'. Słowo 'var' jest używane w innych językach programowania, takich jak JavaScript. W PHP, deklaracja zmiennej jest łatwa i odbywa się przez przypisanie wartości do nazwy zmiennej.
    D. W nazwach zmiennych nie jest rozróżniana wielkość liter // W języku PHP rozróżniana jest wielkość liter w nazwach zmiennych. Oznacza to, że nazwa zmiennej 'myVariable' jest inną zmienną niż 'MyVariable'. PHP jest językiem rozróżniającym wielkość liter.
    
    356. W języku PHP instrukcja foreach jest instrukcją
    A. Wyboru, dla elementów tablicy // Punkt A - Instrukcja foreach w języku PHP jest instrukcją wyboru, która służy do iteracji po elementach tablicy. Przy użyciu tej instrukcji można wykonywać określone operacje dla każdego elementu tablicy.
    B. Pętli, niezależnie od typu zmiennej // Punkt B - Instrukcja foreach w języku PHP jest pętlą, która działa niezależnie od typu zmiennej. Może być używana do iteracji zarówno po tablicach, jak i po innych strukturach danych, takich jak obiekty czy iteratorzy.
    C. Pętli, wyłącznie dla elementów tablicy // Punkt C - Instrukcja foreach w języku PHP jest pętlą, która działa wyłącznie dla elementów tablicy. Przy użyciu tej instrukcji można wykonywać określone operacje dla każdego elementu tablicy, bez konieczności naruszania innych typów zmiennych.
    D. Warunkową, niezależnie od typu zmiennej // Punkt D - Instrukcja foreach w języku PHP nie jest instrukcją warunkową. Jest to pętla, która działa niezależnie od typu zmiennej i może być używana do iteracji po różnych strukturach danych, nie tylko tablicach.
    
    357. Funkcją języka PHP tworzącą ciasteczko jest
    A. createcookie() // Funkcja 'createcookie()' nie istnieje w języku PHP. Nie można utworzyć ciasteczka za pomocą tej funkcji.
    B. echocookie() // Funkcja 'echocookie()' nie istnieje w języku PHP. Nie można wyświetlić ciasteczka za pomocą tej funkcji.
    C. addcookie() // Funkcja 'addcookie()' nie istnieje w języku PHP. Nie można dodać ciasteczka za pomocą tej funkcji.
    D. setcookie() // Funkcja 'setcookie()' jest używana do tworzenia ciasteczka w języku PHP. Przyjmuje ona różne parametry, takie jak nazwa ciasteczka, wartość, czas trwania itp. Za pomocą tej funkcji możemy zapisywać dane na przeglądarce klienta i odczytywać je w następnych zapytaniach. Jest to podstawowa funkcja do obsługi ciasteczek w PHP.
    
    358. W języku PHP funkcja trim ma za zadanie
    A. Podawać długość napisu // Funkcja trim w języku PHP nie podaje długości napisu. Służy ona do usuwania białych znaków lub innych znaków podanych w parametrze, z obu końców napisu.
    B. Porównywać dwa napisy i wypisać część wspólną // Funkcja trim w języku PHP nie porównuje dwóch napisów i nie wypisuje części wspólnej. Jej jedynym zadaniem jest usuwanie białych znaków lub innych znaków podanych w parametrze, z obu końców napisu.
    C. Zmniejszać napis o wskazaną w parametrze liczbę znaków // Funkcja trim w języku PHP nie zmniejsza napisu o wskazaną liczbę znaków. Jej jedynym zadaniem jest usuwanie białych znaków lub innych znaków podanych w parametrze, z obu końców napisu.
    D. Usuwać białe znaki lub inne znaki podane w parametrze, z obu końców napisu // Poprawna odpowiedź! Funkcja trim w języku PHP służy do usuwania białych znaków lub innych znaków podanych w parametrze, z obu końców napisu.
    
    359. W języku JavaScript zapis w ramce oznacza, że // pytanie posiada zdjecie D:

    360. W języku JavaScript zapisano następującą funkcję. Ma ona za zadanie // pytanie posiada zdjecie D:

    361. Za pomocą języka PHP nie jest możliwe
    A. Przetwarzanie danych formularzy // Przetwarzanie danych formularzy - Za pomocą języka PHP można przetwarzać dane wprowadzane przez użytkowników w formularzach na stronie internetowej. PHP pozwala na odczytanie, walidację i przekazanie tych danych do dalszego przetwarzania.
    B. Generowanie dynamicznej zawartości strony // Generowanie dynamicznej zawartości strony - PHP umożliwia generowanie dynamicznej zawartości strony internetowej. Możemy w nim umieścić logikę, która na podstawie różnych czynników (np. dane z bazy danych, czas, preferencje użytkownika) będzie tworzyć dynamiczne treści, takie jak  listy, tabele, obrazy, czy nawet całe sekcje strony.
    C. Przetwarzanie danych zgromadzonych w bazie danych // Przetwarzanie danych zgromadzonych w bazie danych - Język PHP doskonale integruje się z bazami danych, takimi jak MySQL czy PostgreSQL. Pozwala na łatwe wykonywanie operacji na tych bazach, takie jak pobieranie, dodawanie, aktualizowanie i usuwanie danych. PHP umożliwia także tworzenie zapytań SQL, które pozwalają na modyfikowanie struktury bazy danych.
    D. Zmienianie dynamiczne zawartości strony HTML w przeglądarce // Zmienianie dynamiczne zawartości strony HTML w przeglądarce - PHP może zmieniać dynamicznie zawartość strony HTML, przed jej wyświetleniem w przeglądarce użytkownika. Może to obejmować manipulację tekstem, generowanie treści na podstawie różnych warunków czy nawet modyfikację samego kodu HTML. Dzięki temu strona może wyglądać i działać inaczej dla różnych użytkowników lub w zależności od określonych warunków.
    
    362. Działaniem przedstawionego kodu PHP będzie wypełnienie tablicy // pytanie posiada zdjecie D:

    363. W języku JavaScript zapisano fragment kodu. Po wykonaniu skryptu zmienna x // pytanie posiada zdjecie D:

    364. W języku PHP, wykonując operacje na bazie danych MySQL, aby zakończyć pracę z bazą, należy wywołać
    A. mysqli_exit(); // Funkcja mysqli_exit() nie istnieje w języku PHP. Nie jest to poprawne wywołanie, które zakończy pracę z bazą danych MySQL.
    B. mysqli_close(); // Funkcja mysqli_close() służy do zakończenia połączenia z bazą danych MySQL. Po wywołaniu tej funkcji, nie będzie możliwości wykonywania operacji na bazie danych.
    C. mysqli_commit(); // Funkcja mysqli_commit() służy do zatwierdzenia wszystkich transakcji w bazie danych MySQL.
    D. mysqli_rollback(); // Funkcja mysqli_rollback() służy do cofnięcia wszystkich transakcji w bazie danych MySQL i przywrócenia poprzedniego stanu.
    
    365. W ramce przedstawiono kod JavaScript z błędem logicznym. Program powinien wypisywać informację, czy liczby są sobie równe czy nie, lecz nie wykonuje tego. Wskaż odpowiedź, która dotyczy błędu // pytanie posiada zdjecie D:

    366. Która z zasad tworzenia części <head> języka HTML jest poprawna?
    A. W części <head> zawiera się część <body> // W części <head> zawiera się część <body>. Część <head> to sekcja dokumentu HTML, która zawiera informacje takie jak tytuł strony, odwołania do zewnętrznych plików CSS i JavaScript oraz meta dane. Część <body> natomiast zawiera główną treść strony, taki jak tekst, obrazy i elementy interaktywne.
    B. W części <head> mogą wystąpić znaczniki <meta>, <title>, <link> // W części <head> mogą wystąpić znaczniki <meta>, <title>, <link>. Znacznik <meta> jest używany do określania meta danych strony, takich jak opis, słowa kluczowe, autor, kodowanie znaków. Znacznik <title> definiuje tytuł strony, który jest wyświetlany na pasku tytułowym przeglądarki. Znacznik <link> służy do tworzenia połączeń z zewnętrznymi stylami CSS i innymi plikami.
    C. W części <head> można definiować szablon strony znacznikami <div> // W części <head> można definiować szablon strony znacznikami <div>. Znacznik <div> jest używany do tworzenia kontenerów na różne sekcje i elementy strony. Jednak bardziej odpowiednim miejscem do definiowania szablonu strony jest część <body>.
    D. W części <head> nie można umieszczać kodu CSS, a jedynie odwołanie do pliku CSS // W części <head> nie można umieszczać kodu CSS, a jedynie odwołanie do pliku CSS. Część <head> służy głównie do zawierania informacji o stronie, takich jak tytuł, meta dane, odwołania do zewnętrznych plików. Kod CSS należy umieszczać w sekcji <style> wewnątrz części <head> lub w zewnętrznym pliku CSS, na który można się odwołać za pomocą znacznika <link>.
    
    367. W języku HTML znacznik <strong>tekst</strong> będzie wyświetlany w ten sam sposób przez przeglądarkę co znacznik
    A. <b>tekst</b> // Znacznik <b>tekst</b> w języku HTML również oznacza pogrubienie tekstu. Przeglądarka wyświetli ten tekst pogrubiony.
    B. <h1>tekst</h1> // Znacznik <h1>tekst</h1> oznacza nagłówek pierwszego poziomu w HTML. Przeglądarka wyświetli ten tekst jako duży, pogrubiony nagłówek.
    C. <big>tekst</big> // Znacznik <big>tekst</big> oznacza odstęp międzywyrazowy w HTML. Przeglądarka wyświetli ten tekst z większym odstępem między wyrazami.
    D. <sub>tekst</sub> // Znacznik <sub>tekst</sub> oznacza indeks dolny w HTML. Przeglądarka wyświetli ten tekst ze zmniejszoną czcionką i niżej w stosunku do linii bazowej.
    
    368. Aby strona WWW była responsywna, należy między innymi definiować
    A. jedynie znane czcionki, np. Arial // Punkt A dotyczy definiowania jedynie znanych czcionek, na przykład Arial. Oznacza to, że na stronie internetowej powinny być używane tylko czcionki, które są dostępne na większości urządzeń i przeglądarek. To zapewnia spójność wyglądu tekstu na różnych urządzeniach.
    B. rozmiary obrazów w procentach // Punkt B mówi o definiowaniu rozmiarów obrazów w procentach. Oznacza to, że rozmiary obrazów są ustawiane na podstawie stosunku do rozmiaru kontenera, w którym się znajdują. Dzięki temu obrazy automatycznie dostosowują się do różnych rozdzielczości ekranów, co sprawia, że strona WWW jest responsywna i dobrze wygląda na wszystkich urządzeniach.
    C. rozmiary obrazów wyłącznie w pikselach // Punkt C sugeruje, że rozmiary obrazów powinny być definiowane wyłącznie w pikselach. Takie podejście ogranicza elastyczność strony, ponieważ obrazy nie dostosowują się do różnych rozdzielczości ekranów. Powoduje to, że strona może wyglądać źle na urządzeniach o innych rozdzielczościach.
    D. rozkład strony wyłącznie za pomocą tabel // Punkt D mówi o rozkładzie strony za pomocą tabel. Obecnie nie jest zalecane korzystanie z tabel do układania stron internetowych, ponieważ utrudniają one responsywność. Zamiast tego, należy stosować nowoczesne metody układania, takie jak CSS Grid lub Flexbox, które pozwalają na elastyczne dostosowywanie się strony do różnych rozdzielczości ekranów.
    
    369. W języku HTML, aby zapisać sekcję cytatu, która może zawierać kilka paragrafów tak, by przeglądarka dodała wspólne wcięcie, należy zastosować znacznik
    A. <q> // Znacznik <q> służy do oznaczenia pojedynczej frazy lub cytatu w HTML. Nie dodaje automatycznie wcięcia i przeznaczony jest głównie do krótkich cytatów w jednym akapicie.
    B. <indent> // Znacznik <indent> nie istnieje w języku HTML i nie może być użyty do zapisywania sekcji cytatu.
    C. <blockq> // Znacznik <blockq> nie istnieje w języku HTML i nie może być użyty do zapisywania sekcji cytatu.
    D. <blockquote> // Znacznik <blockquote> służy do oznaczania sekcji cytatu, która może zawierać kilka paragrafów. Przeglądarka automatycznie dodaje wcięcia dla każdego akapitu w obrębie znacznika.
    
    370. W języku CSS wartości underline, overline, blink przyjmują atrybut
    A. text-style // Atrybut 'text-style' nie istnieje w języku CSS. Nie możemy użyć tej wartości.
    B. font-style // Atrybut 'font-style' dotyczy stylu czcionki, takiego jak kursywa czy pochylenie, ale nie ma związku z podkreśleniem, przekreśleniem ani migotaniem.
    C. font-weight // Atrybut 'font-weight' dotyczy grubości czcionki, takiej jak np. pogrubienie, ale nie ma związku z podkreśleniem, przekreśleniem ani migotaniem.
    D. text-decoration // Atrybut 'text-decoration' jest właściwym atrybutem, który pozwala na dodanie podkreślenia, przekreślenia lub migotania do tekstu w języku CSS.
    
    371. W przedstawionej definicji stylu CSS, powtarzanie dotyczy // pytanie posiada zdjecie D:

    372. W języku CSS zdefiniowano styl. Sformatowana stylem sekcja będzie zawierała obramowanie o szerokości // pytanie posiada zdjecie D:

    373. Strona HTML definiuje akapit oraz rysunek. Aby rysunek został umieszczony przez przeglądarkę w tej samej linii co akapit po jego lewej stronie, należy w stylu CSS rysunku zawrzeć własność
    A. float:left; // Właściwość float:left; umieszcza rysunek po lewej stronie akapitu. Powoduje to, że akapit zostaje obok rysunku, tworząc efekt umieszczenia ich w jednej linii.
    B. align:left; // Odpowiedź B. align:left; nie istnieje w CSS. Nie można użyć tej właściwości do osiągnięcia efektu umieszczenia rysunku i akapitu w jednej linii po lewej stronie.
    C. style:left; // Odpowiedź C. style:left; nie jest właściwością w CSS. Nie można użyć tej wartości do osiągnięcia efektu umieszczenia rysunku i akapitu w jednej linii po lewej stronie.
    D. alt:left; // Odpowiedź D. alt:left; nie jest właściwością w CSS. Wartość 'alt' w HTML  służy do dostarczenia alternatywnego tekstu dla obrazka, nie ma związku z pozycjonowaniem rysunku i akapitu.
    
    374. W języku CSS określono formatowanie znacznika h1 według wzoru. Zakładając, że żadne inne formatowanie nie jest dodane do znacznika h1, wskaż sposób formatowania tego znacznika // pytanie posiada zdjecie D:

    375. Aby przygotować szablon strony z trzema kolumnami ustawionymi obok siebie, można posłużyć się stylem CSS // pytanie posiada zdjecie D:

    376. Przedstawiono fragment kodu HTML, który się poprawnie. Błąd walidacji tego fragmentu kodu będzie dotyczył // pytanie posiada zdjecie D:

    377. Modelem barw opisującym kolor z użyciem stożka przestrzeni barw jest
    A. CIE // Model barw CIE opisuje kolor w sposób matematyczny na podstawie obserwacji ludzkiego oka. Jest to trójwymiarowy model, gdzie każdy kolor jest reprezentowany przez trzy składowe: jasność (L), składową czerwoną-zieloną (a) i składową żółto-niebieską (b).
    B. HSV // Model barw HSV (od ang. Hue, Saturation, Value) opisuje kolor na podstawie trzech składowych: odcienia, nasycenia i jasności. Odcień określa rodzaj koloru (np. czerwony, niebieski), nasycenie określa intensywność koloru (od wyblakłego do intensywnego), a jasność określa jasność koloru (od czarnej do białej). Ten model jest łatwy do zrozumienia i znajduje zastosowanie w edycji grafiki, dobieraniu kolorów czy manipulacji oświetleniem.
    C. CMY // Model barw CMY (od ang. Cyan, Magenta, Yellow) opisuje kolor na podstawie trzech podstawowych barw: niebieskiej, czerwonej i żółtej. Każda składowa może przyjmować wartości od 0 (brak koloru) do 100 (maksymalne nasycenie). Model ten jest często stosowany w druku, gdzie mieszanie tych trzech kolorów pozwala na tworzenie pełnej gamy barw.
    D. CMYK // Model barw CMYK (od ang. Cyan, Magenta, Yellow, Key) jest rozszerzeniem modelu CMY. Składowa K (Key) reprezentuje czernią i jest używana w celu poprawienia odwzorowania kolorów ciemnych. Model ten jest również często używany w druku, zwłaszcza przy drukowaniu większych ilości czerni.
    
    378. Rozmycie Gaussa, wygładzanie, szum RGB są funkcjami programu do obróbki
    A. Grafiki rastrowej // Rozmycie Gaussa to funkcja programu do obróbki grafiki rastrowej, która służy do wygładzania obrazu. Działa poprzez średnią ważoną pikseli, co powoduje rozmycie krawędzi i redukcję detali. Jest szczególnie użyteczne do redukcji szumów, takich jak szum RGB.
    B. Grafiki wektorowej // Obróbka grafiki wektorowej nie korzysta z rozmycia Gaussa, wygładzania ani szumu RGB. Dlatego odpowiedź B jest nieprawidłowa.
    C. Ścieżki dźwiękowej // Ścieżka dźwiękowa nie ma związku z funkcjami programu do obróbki grafiki. Dlatego odpowiedź C jest nieprawidłowa.
    D. Dźwięku w formacie MIDI // Format dźwięku MIDI również nie ma związku z funkcjami programu do obróbki grafiki. Dlatego odpowiedź D jest nieprawidłowa.
    
    379. Aby edytować nakładające się na siebie pojedyncze fragmenty obrazu, pozostawiając pozostałe elementy niezmienione, należy zastosować
    A. Warstwy // Warstwy pozwalają na edytowanie pojedynczych fragmentów obrazu, bez wpływu na pozostałe elementy. Działa to poprzez tworzenie różnych warstw, na których można dokonywać modyfikacji. Warstwy można np. dodawać, usuwać, ukrywać, zmieniać przezroczystość.
    B. Histogram // Histogram jest narzędziem służącym do analizy rozkładu jasności w obrazie. Poziomy odcieni są przedstawiane na osi poziomej, a ilość pikseli o danym odcieniu na osi pionowej. Histogram można wykorzystać m.in. do dostosowania kontrastu lub rozjaśniania obrazu.
    C. Kanał alfa // Kanał alfa to dodatkowy kanał, który zawiera informację o przezroczystości obrazu. Wartości w kanałach alfa mogą przyjmować zakres od 0 (całkowicie przezroczysty) do 255 (całkowicie nieprzezroczysty). Pozwala to na kontrolowanie stopnia przezroczystości danego fragmentu obrazu.
    D. Kadrowanie // Kadrowanie polega na wybraniu interesującego nas fragmentu obrazu oraz usunięciu reszty. Działa to poprzez zdefiniowanie prostokątnego obszaru, który zostaje zachowany, a reszta jest obcięta. Kadrowanie pozwala na zmianę proporcji i rozmiaru obrazu.
    
    380. W języku SQL wykorzystywanym przez bazę danych MySQL atrybut UNIQUE polecenia CREATE TABLE
    A. Wymusza unikatowe nazwy pól tabeli // Atrybut UNIQUE w poleceniu CREATE TABLE w języku SQL (MySQL) wymusza unikatowe nazwy pól tabeli. Oznacza to, że żadne dwa pola w tabeli nie mogą mieć takiej samej wartości.
    B. Blokuje możliwość wpisania wartości NULL // Atrybut UNIQUE nie blokuje możliwości wpisania wartości NULL. Wartość NULL może być wpisana do pola oznaczonego jako UNIQUE, ale nie będzie ona traktowana jako unikalna wartość.
    C. Jest stosowany tylko w przypadku pól liczbowych // Atrybut UNIQUE nie jest stosowany tylko w przypadku pól liczbowych. Może być on używany dla pól różnego typu danych, takich jak tekstowe, daty czy logiczne.
    D. Jest stosowany, jeśli wartość w kolumnie nie mogą się powtarzać // Atrybut UNIQUE jest stosowany, gdy wartość w kolumnie nie może się powtarzać. Oznacza to, że każda wartość w polu oznaczonym jako UNIQUE musi być unikalna w całej tabeli.
    
    381. Funkcja agregująca MIN języka SQL ma za zadanie policzyć
    A. Liczbę wierszy zwróconych kwerendą // Funkcja agregująca MIN języka SQL zlicza liczbę wierszy zwróconych przez kwerendę.
    B. Wartość minimalną kolumny zwróconej kwerendą // Funkcja agregująca MIN języka SQL zwraca minimalną wartość kolumny zwróconej przez kwerendę.
    C. długość znaków w zwróconych kwerendą rekordach // Funkcja agregująca MIN języka SQL nie zlicza długości znaków w zwróconych rekordach kwerendy.
    D. Średnią wartości różnych pól rekordu zwróconego zapytaniem // Funkcja agregująca MIN języka SQL nie oblicza średniej wartości różnych pól rekordu zwróconego przez zapytanie.
    
    382. Dana jest tabela o nazwie wycieczki z polami: nazwa, cena, miejsca (jako liczba wolnych miejsc). Aby dla dowolnego zbioru danych tabeli wyświetlić jedynie nazwy tych wycieczek, dla których cena jest niższa niż 2000 zł i mają przynajmniej cztery wolne miejsca, należy posłużyć się zapytaniem
    A. SELECT nazwa FROM wycieczki WHERE cena < 2000 AND miejsca > 3; // Zapytanie A. SELECT nazwa FROM wycieczki WHERE cena < 2000 AND miejsca > 3; wybiera nazwy wycieczek, które mają cenę niższą niż 2000 zł i mają przynajmniej cztery wolne miejsca. Działa na tabeli 'wycieczki' i wykorzystuje warunki 'cena < 2000' i 'miejsca > 3'.
    B. SELECT nazwa FROM wycieczki WHERE cena < 2000 OR miejsca > 4; // Zapytanie B. SELECT nazwa FROM wycieczki WHERE cena < 2000 OR miejsca > 4; wybiera nazwy wycieczek, które mają cenę niższą niż 2000 zł lub mają więcej niż cztery wolne miejsca. Działa na tabeli 'wycieczki' i wykorzystuje warunki 'cena < 2000' i 'miejsca > 4'.
    C. SELECT * FROM wycieczki WHERE cena < 2000 AND miejsca > 4; // Zapytanie C. SELECT * FROM wycieczki WHERE cena < 2000 AND miejsca > 4; wybiera wszystkie kolumny (nazwa, cena, miejsca) wycieczek, które mają cenę niższą niż 2000 zł i mają więcej niż cztery wolne miejsca. Działa na tabeli 'wycieczki' i wykorzystuje warunki 'cena < 2000' i 'miejsca > 4'.
    D. SELECT * FROM wycieczki WHERE cena < 2000 OR miejsca > 3; // Zapytanie D. SELECT * FROM wycieczki WHERE cena < 2000 OR miejsca > 3; wybiera wszystkie kolumny (nazwa, cena, miejsca) wycieczek, które mają cenę niższą niż 2000 zł lub mają więcej niż trzy wolne miejsca. Działa na tabeli 'wycieczki' i wykorzystuje warunki 'cena < 2000' i 'miejsca > 3'.
    
    383. Dana jest tabela o nazwie przedmioty z polami: ocena i uczenID. Aby policzyć średnią ocen ucznia o ID równym 7, należy posłużyć się zapytaniem
    A. AVG SELECT ocena FROM przedmioty WHERE uczenID = 7; // W punkcie A zapytanie wybiera tylko pole 'ocena' z tabeli 'przedmioty', które ma odpowiadać określonemu uczenID równemu 7. Nie jest obliczana żadna średnia ocen.
    B. SELECT AVG(ocena) FROM przedmioty WHERE uczenID = 7; // W punkcie B zapytanie oblicza średnią ocen ze wszystkich rekordów, gdzie uczenID jest równe 7. SELECT AVG(ocena) oznacza, że zostaną wybrane wszystkie wartości z pola 'ocena' i obliczona zostanie ich średnia.
    C. COUNT SELECT ocena FROM przedmioty WHERE uczenID = 7; // W punkcie C zapytanie próbuje zliczyć ilość rekordów, gdzie uczenID jest równe 7, ale jest błąd w składni. Brakuje słowa 'FROM' przed 'SELECT ocena'.
    D. SELECT COUNT(ocena) FROM przedmioty WHERE uczenID = 7; // W punkcie D zapytanie zlicza ilość rekordów, gdzie uczenID jest równe 7. SELECT COUNT(ocena) oznacza, że zostaną wybrane wszystkie wartości z pola 'ocena' i zostanie podana ich ilość.
    
    384. Tabela o nazwie naprawy zawiera pola: klient, czyNaprawione. Aby usunąć te rekordy, w których pole czyNaprawione jest prawdą, należy posłużyć się poleceniem
    A. DELETE FROM naprawy; // Punkt A: DELETE FROM naprawy; - to polecenie usuwa wszystkie rekordy z tabeli o nazwie naprawy. Nie uwzględnia żadnych warunków, po prostu usuwa wszystko.
    B. DELETE naprawy WHERE czyNaprawione = TRUE; // Punkt B: DELETE naprawy WHERE czyNaprawione = TRUE; - to polecenie próbuje usunąć rekordy z tabeli o nazwie naprawy, które mają pole czyNaprawione równa prawda. Jest błędne, ponieważ brakuje klauzuli 'FROM' przed nazwą tabeli.
    C. DELETE FROM naprawy WHERE czyNaprawione = TRUE; // Punkt C: DELETE FROM naprawy WHERE czyNaprawione = TRUE; - to polecenie usuwa rekordy z tabeli o nazwie naprawy, które mają pole czyNaprawione równa prawda. Jest poprawne i właściwie sformułowane.
    D. DELETE klient FROM naprawy WHERE czyNaprawione = TRUE; // Punkt D: DELETE klient FROM naprawy WHERE czyNaprawione = TRUE; - to polecenie jest błędne, ponieważ nie można określić nazwy kolumny (klient) do usunięcia w instrukcji DELETE. Poprawnie należy użyć tylko 'DELETE FROM tabela WHERE warunek'.
    
    385. Formularz nadrzędny wykorzystywany do nawigacji w bazie danych pomiędzy dostępnymi w systemie formularzami, kwerendami jest nazywany formularzem
    A. głównym // Formularz główny jest wykorzystywany do nawigacji w bazie danych pomiędzy dostępnymi w systemie formularzami oraz kwerendami. Jest to główny punkt kontrolny, który umożliwia użytkownikowi przemieszczanie się po różnych częściach bazy danych.
    B. sterującym // Formularz sterujący jest wykorzystywany do nawigacji w bazie danych pomiędzy dostępnymi w systemie formularzami oraz kwerendami. Jest to punkt kontrolny, który umożliwia użytkownikowi wprowadzanie zmian i wykonywanie akcji w bazie danych, na podstawie których następuje nawigacja.
    C. pierwotnym // Formularz pierwotny jest pierwotnym źródłem danych w bazie danych. Zawiera podstawowe dane i jest wykorzystywany do tworzenia i aktualizowania rekordów w bazie danych.
    D. zagnieżdżonym // Formularz zagnieżdżony jest formularzem, który znajduje się wewnątrz innego formularza. Jest wykorzystywany do prezentowania szczegółowych informacji dotyczących konkretnego rekordu w bazie danych.
    
    386. W bazie danych sklepu komputerowego istnieje tabela komputery. Aby zdefiniować raport wyświetlający dla dowolnego zbioru danych tabeli, jedynie pola tabeli dla komputerów, w których jest nie mniej niż 8 GB pamięci, a procesor to Intel, można posłużyć sie kwerendą
    A. SELECT * FROM komputery WHERE procesor = "Intel" OR pamiec < 8; // Punkt A: Zapytanie SELECT * FROM komputery WHERE procesor = 'Intel' OR pamiec < 8 oznacza, że raport wyświetli wszystkie rekordy z tabeli 'komputery', gdzie procesor jest marki 'Intel' lub pamięć jest mniejsza niż 8 GB.
    B. SELECT * FROM komputery WHERE procesor = "Intel" OR pamiec >= 8; // Punkt B: Zapytanie SELECT * FROM komputery WHERE procesor = 'Intel' OR pamiec >= 8 oznacza, że raport wyświetli wszystkie rekordy z tabeli 'komputery', gdzie procesor jest marki 'Intel' lub pamięć jest większa lub równa 8 GB.
    C. SELECT * FROM komputery WHERE procesor = "Intel" AND pamiec < 8; // Punkt C: Zapytanie SELECT * FROM komputery WHERE procesor = 'Intel' AND pamiec < 8 oznacza, że raport wyświetli tylko te rekordy z tabeli 'komputery', gdzie procesor jest marki 'Intel' i pamięć jest mniejsza niż 8 GB.
    D. SELECT * FROM komputery WHERE procesor = "Intel" AND pamiec >= 8; // Punkt D: Zapytanie SELECT * FROM komputery WHERE procesor = 'Intel' AND pamiec >= 8 oznacza, że raport wyświetli tylko te rekordy z tabeli 'komputery', gdzie procesor jest marki 'Intel' i pamięć jest większa lub równa 8 GB.
    
    387. Za pomocą polecenia ALTER TABLE można
    A. zmienić wartości rekordów // Polecenie ALTER TABLE pozwala zmieniać wartości rekordów w tabeli.
    B. zmienić strukturę tabeli // Polecenie ALTER TABLE umożliwia zmianę struktury tabeli.
    C. usunąć rekord // Polecenie ALTER TABLE nie służy do usuwania rekordów.
    D. usunąć tabelę // Polecenie ALTER TABLE nie służy do usuwania tabeli.
    
    388. W języku SQL, wykorzystywanym przez bazę danych MySQL w tabeli samochody, aby nadać wartość równą 0 dla kolumny przebieg, należy posłużyć się kwerendą
    A. UPDATE samochody SET przebieg = 0; // W kwerendzie A wykonujemy aktualizację tabeli samochody. Używamy słowa kluczowego UPDATE, a następnie podajemy nazwę tabeli. W SET ustawiamy kolumnę przebieg na wartość 0.
    B. UPDATE przebieg SET 0 FROM samochody; // Kwerenda B jest niepoprawna. Nie możemy aktualizować kolumny przebieg wartością 0 z tabeli przebieg. Poprawną składnią jest UPDATE samochody SET przebieg = 0;
    C. UPDATE przebieg SET 0 TABLE samochody; // Kwerenda C jest niepoprawna. Nie możemy aktualizować kolumny przebieg wartością 0 z tabeli przebieg. Poprawną składnią jest UPDATE samochody SET przebieg = 0;
    D. UPDATE samochody SET przebieg VALUE 0; // Kwerenda D jest niepoprawna. Nie możemy używać słowa kluczowego VALUE w tej kwerendzie. Poprawną składnią jest UPDATE samochody SET przebieg = 0;
    
    389. Przedstawione polecenie SQL, użytkownikowi adam@localhost nadaje prawa // pytanie posiada zdjecie D:

    390. W języku JavaScript przedstawiona definicja jest definicją // pytanie posiada zdjecie D:

    391. Dla każdej iteracji pętli wartość bieżącego elementu tablicy jest przypisywana do zmiennej, a wskaźnik tablicy jest przesuwany o jeden, aż do ostatniego elementu tablicy. Zdanie to jest prawdziwe dla instrukcji
    A. for // W przypadku pętli for, dla każdej iteracji bieżący element tablicy jest przypisywany do zmiennej, a wskaźnik tablicy jest przesuwany o jeden, aż do ostatniego elementu tablicy.
    B. next // Instrukcja 'next' nie jest częścią konkretnego języka programowania, dlatego nie można opisać w kontekście tego pytania.
    C. while // W przypadku pętli while, dla każdej iteracji bieżący element tablicy jest przypisywany do zmiennej, a wskaźnik tablicy jest przesuwany o jeden, aż do ostatniego elementu tablicy.
    D. foreach // Dla pętli foreach, dla każdego elementu tablicy, wartość tego elementu jest przypisywana do zmiennej, a wskaźnik tablicy automatycznie przechodzi do następnego elementu.
    
    392. Wskaż zapisany w języku JavaScript warunek, który ma sprawdzić spełnienie z przypadków: 1) dowolna naturalna liczba a jest trzycyfrowa, 2) dowolna całkowita liczba b jest ujemna
    A. ((a>99) || (a<1000)) || (b<0) // Warunek sprawdza, czy liczba a jest trzycyfrowa. Jeśli warunek jest spełniony, zwraca wartość true, w przeciwnym razie false.
    B. ((a>99) && (a<1000)) || (b<0) // Warunek sprawdza, czy liczba b jest ujemna. Jeśli warunek jest spełniony, zwraca wartość true, w przeciwnym razie false.
    C. ((a>99) || (a<1000)) && (b<0) // Warunek sprawdza, czy liczba a jest trzycyfrowa lub liczba b jest ujemna. Jeśli przynajmniej jeden z warunków jest spełniony, zwraca wartość true, w przeciwnym razie false.
    D. ((a>99) && (a<1000)) && (b<0) // Warunek sprawdza, czy liczba a jest trzycyfrowa i liczba b jest ujemna. Jeśli oba warunki są spełnione, zwraca wartość true, w przeciwnym razie false.
    
    393. Którą czynność gwarantującą poprawne wykonanie przedstawionego kodu JavaScript, należy wykonać przed pętlą? // pytanie posiada zdjecie D:

    394. Hermetyzacja to zasada programowania obiektowego mówiąca o tym, że
    A. klasy/obiekty mogą współdzielić ze sobą funkcjonalność // Punkt A mówi o tym, że klasy/obiekty mogą współdzielić ze sobą funkcjonalność.
    B. pola i metody wykorzystywane tylko przez daną klasę/obiekt są ograniczone zasięgiem private lub protected // Punkt B mówi o tym, że pola i metody wykorzystywane tylko przez daną klasę/obiekt są ograniczone zasięgiem private lub protected.
    C. klasy/obiekty mogą mieć zdefiniowane metody wirtualne, które są implementowane w pochodnych klasach/obiektach // Punkt C mówi o tym, że klasy/obiekty mogą mieć zdefiniowane metody wirtualne, które są implementowane w pochodnych klasach/obiektach.
    D. typy pól w klasach/obiektach mogą być dynamicznie zmieniane w zależności od danych im przypisywanych // Punkt D mówi o tym, że typy pól w klasach/obiektach mogą być dynamicznie zmieniane w zależności od danych im przypisywanych.
    
    395. Przedstawiono fragment JavaScript. Po jego wykonaniu zmienna str2 będzie przechowywać // pytanie posiada zdjecie D:

    396. Który ze sposobów wypisania tekstu zdefiniowany w języku JavaScript?
    A. Własność innerHTML // Własność innerHTML służy do modyfikowania zawartości elementu HTML. Można za jej pomocą wstawiać tekst, zmieniać go lub usuwać.
    B. Metoda window.alert() // Metoda window.alert() wyświetla okno dialogowe z podanym tekstem. Jest to prosty sposób na wyświetlenie prostego komunikatu dla użytkownika.
    C. Funkcja MessageBox() // Funkcja MessageBox() jest niepoprawną odpowiedzią. W języku JavaScript nie istnieje taka funkcja.
    D. Metoda document.write() // Metoda document.write() służy do wypisania tekstu bezpośrednio na stronie internetowej. Może być używana do dynamicznego generowania treści na stronie.
    
    397. Funkcja JavaScript powinna być wywołana za każdym razem, gdy użytkownik wpisze dowolny znak do pola edycji. Którego zdarzenia należy użyć?
    A. onload // Zdarzenie onload jest wywoływane, gdy cała strona internetowa została załadowana. Jest to odpowiednie, gdy chcemy wykonać pewne działania po załadowaniu strony.
    B. onclick // Zdarzenie onclick jest wywoływane, gdy użytkownik kliknie na dany element na stronie. Jest to przydatne, gdy chcemy reagować na kliknięcie przez użytkownika.
    C. onkeydown // Zdarzenie onkeydown jest wywoływane, gdy użytkownik naciska dowolny klawisz na klawiaturze. Jest to odpowiednie, gdy chcemy reagować na każde naciśnięcie klawisza przez użytkownika.
    D. onmouseout // Zdarzenie onmouseout jest wywoływane, gdy kursor myszy opuszcza dany element na stronie. Jest to użyteczne, gdy chcemy reagować na zdarzenie opuszczenia kursora przez użytkownika.
    
    398. Która z wymienionych funkcji zapisanych językiem PHP zwraca sumę połowy a i połowy b
    A. function licz($a, $b) {return $a/2 + $b;} // Funkcja 'licz' przyjmuje dwa parametry '$a' i '$b', a następnie zwraca sumę połowy wartości parametru '$a' oraz połowy wartości parametru '$b'.
    B. function licz($a, $b) {return 2/$a + 2/$b;} // Funkcja 'licz' przyjmuje dwa parametry '$a' i '$b', a następnie zwraca wynik dodawania wartości 2 podzielonych przez parametr '$a', oraz 2 podzielonych przez parametr '$b'.
    C. function licz($a, $b) {return $a/2 + $b/2;} // Funkcja 'licz' przyjmuje dwa parametry '$a' i '$b', a następnie zwraca sumę połowy wartości parametru '$a' oraz połowy wartości parametru '$b'.
    D. function licz($a, $b) {return ($a/2 + $b)/2;} // Funkcja 'licz' przyjmuje dwa parametry '$a' i '$b', a następnie zwraca wynik sumy połowy wartości parametru '$a' oraz wartości parametru '$b', podzielony przez 2.
    
    399. W języku JavaScript zapisano definicję obiektu. Aby odwołać się do własności nazwisko należy zapisać // pytanie posiada zdjecie D:

    400. W języku PHP zapisano fragment kodu. Plik cookie stworzony tym poleceniem // pytanie posiada zdjecie D:

    401. W języku PHP zapisano fragment kodu. Po zakończeniu pętli zmienna a przyjmie wartość // pytanie posiada zdjecie D:

    402. W języku JavaScript, aby zmienić wartość atrybutu znacznika HTML, po uzyskaniu obiektu za pomocą metody getElementById należy skorzystać z
    A. pola innerHTML // Pole innerHTML służy do zmiany zawartości tekstowej wewnątrz elementu HTML, czyli można go użyć do zmiany tekstu lub kodu HTML, który znajduje się między otwierającym i zamykającym tagiem danego elementu.
    B. metody getAttribute // Metoda getAttribute służy do pobierania wartości określonego atrybutu z danego elementu HTML. Można jej użyć, aby uzyskać wartość konkretnego atrybutu jak np. src, href itp.
    C. metody setAttribute // Metoda setAttribute służy do ustawiania wartości danego atrybutu w elemencie HTML. Pozwala na dynamiczną zmianę wartości atrybutu, na przykład zmieniając adres źródłowy elementu img lub wartość atrybutu href dla linku.
    D. pola attribute i podać nazwę atrybutu // Pole attribute służy do odczytywania wartości danego atrybutu z elementu HTML. Aby uzyskać wartość atrybutu, należy podać jego nazwę jako argument pola attribute.
    
    403. W języku JavaScript zapisano kod, którego wynikiem działania jest // pytanie posiada zdjecie D:

    404. W języku PHP zapisano fragment kodu działającego na bazie MySQL. Jego zadaniem jest wypisanie // pytanie posiada zdjecie D:

    405. Który sposób komentowania jednoliniowego jest dozwolony w języku JavaScript?
    A. ! // Punkt A to sposób komentowania jednoliniowego w języku JavaScript za pomocą znaku '!'. Jednakże ten sposób komentowania nie jest dozwolony.
    B. # // Punkt B to sposób komentowania jednoliniowego w języku JavaScript za pomocą znaku '#'. Jednakże ten sposób komentowania nie jest dozwolony.
    C. // // Punkt C to sposób komentowania jednoliniowego w języku JavaScript za pomocą znaku '//'. Jest to najczęściej stosowany sposób komentowania w JavaScript, gdzie wszystko po tej sekwencji znaków jest traktowane jako komentarz.
    D. <! // Punkt D to sposób komentowania jednoliniowego w języku JavaScript za pomocą znaku '<!'. Jednakże ten sposób komentowania nie jest dozwolony.
    
    406. Znaczniki <header>, <article>, <section>, <footer> są charakterystyczne dla języka
    A. HTML 5 // Znacznik <header> jest używany do oznaczenia nagłówka strony lub sekcji. Zazwyczaj zawiera logo, tytuł lub inne informacje
    B. XHTML 1.1 // Znaczniki <article> służą do oznaczania niezależnych, samodzielnych części treści na stronie. Często są używane do artykułów lub postów na blogu
    C. HTML 4.01 Strict // Znacznik <section> służy do oznaczania sekcji strony, które są logicznie związane tematycznie. Może zawierać nagłówek i zawartość
    D. HTML 4.01 Transitional // Znacznik <footer> jest używany do oznaczania stopki strony. Zazwyczaj zawiera informacje kontaktowe, linki do innych stron lub informacje prawne
    
    407. Przy użyciu którego znacznika w języku HTML nie można umieścić na stronie grafiki dynamicznej?
    A. <img> // Znacznik <img> służy do umieszczania grafik na stronie. Może to być zarówno obrazek statyczny, jak i dynamiczny.
    B. <strike> // Znacznik <strike> służy do przekreślaniu tekstu na stronie.
    C. <embed> // Znacznik <embed> służy do osadzania różnego rodzaju multimediów na stronie, takich jak filmy, animacje czy dźwięki.
    D. <object> // Znacznik <object> służy do tworzenia osadzalnych obiektów na stronie, np. aplikacji Flash.
    
    408. Które ze znaczników HTML umożliwią wyświetlenie na stronie tekstu w jednym wierszu, jeżeli żadne formatowanie CSS nie zostało zdefiniowane? // pytanie posiada zdjecie D:

    409. W języku HTML atrybut shape znacznika area, określający typ obszaru, może przyjąć wartość
    A. rect, triangle, circle // Wartość rect w atrybucie shape znacznika area oznacza, że obszar będzie prostokątem. Jest to najprostszy typ obszaru, który można zdefiniować jako prostokątny obszar na stronie internetowej.
    B. poly, square, circle // Wartość poly w atrybucie shape znacznika area oznacza, że obszar będzie wielokątem. Można go zdefiniować poprzez podanie współrzędnych kolejnych wierzchołków wielokąta
    C. rect, square, circle // Wartość circle w atrybucie shape znacznika area oznacza, że obszar będzie okręgiem. Można go zdefiniować poprzez podanie współrzędnych środka okręgu oraz jego promienia.
    D. rect, poly, circle // Wartość rect, poly, circle w atrybucie shape znacznika area oznacza, że obszar może być albo prostokątem, albo wielokątem, albo okręgiem. W zależności od potrzeb, możemy zdefiniować różne typy obszarów, które będą wchodzić w interakcję z użytkownikiem.
    
    410. Wskaż prawidłową kolejność stylów CSS mając na uwadze ich pierwszeństwo w formatowaniu elementów strony WWW.
    A. Lokalny, Wewnętrzny, Zewnętrzny // Odpowiedź A. Lokalny, Wewnętrzny, Zewnętrzny oznacza kolejność stylów CSS w formatowaniu elementów strony WWW. Styl lokalny jest najbardziej pierwszorzędny i ma najwyższy priorytet. Znajduje się bezpośrednio wewnątrz elementu HTML i jest definiowany przy użyciu atrybutu 'style'. Następnie, styl wewnętrzny jest definiowany w sekcji <style> w nagłówku dokumentu HTML i dotyczy wszystkich elementów na stronie. Ostatecznie, styl zewnętrzny jest nadrzędnym stylem, który jest zdefiniowany w oddzielnym pliku CSS i jest stosowany globalnie do wszystkich stron.
    B. Zewnętrzny, Wydzielone bloki, Lokalny // Odpowiedź B. Zewnętrzny, Wydzielone bloki, Lokalny oznacza kolejność stylów CSS w formatowaniu elementów strony WWW. Styl zewnętrzny jest najbardziej pierwszorzędny i ma najwyższy priorytet. Jest zdefiniowany w oddzielnym pliku CSS i jest stosowany globalnie do wszystkich stron. Następnie, style wydzielone w bloki dotyczą konkretnych elementów na stronie i mają priorytet nad lokalnym stylem. Ostatecznie, lokalny styl znajduje się bezpośrednio wewnątrz elementu HTML i ma najniższy priorytet.
    C. Rozciąganie stylu, Zewnętrzny, Lokalny // Odpowiedź C. Rozciąganie stylu, Zewnętrzny, Lokalny oznacza kolejność stylów CSS w formatowaniu elementów strony WWW. Rozciąganie stylu jest najbardziej pierwszorzędne i ma najwyższy priorytet. Pozwala na dziedziczenie stylów z innych elementów w stronie. Następnie, styl zewnętrzny jest definiowany w oddzielnym pliku CSS i jest stosowany globalnie do wszystkich stron. Ostatecznie, lokalny styl znajduje się bezpośrednio wewnątrz elementu HTML i ma najniższy priorytet.
    D. Wewnętrzny, Zewnętrzny, Rozciąganie stylu // Odpowiedź D. Wewnętrzny, Zewnętrzny, Rozciąganie stylu oznacza kolejność stylów CSS w formatowaniu elementów strony WWW. Styl wewnętrzny jest najbardziej pierwszorzędny i ma najwyższy priorytet. Jest zdefiniowany w sekcji &lt;style&gt; w nagłówku dokumentu HTML i dotyczy wszystkich elementów na stronie. Następnie, styl zewnętrzny jest definiowany w oddzielnym pliku CSS i jest stosowany globalnie do wszystkich stron. Ostatecznie, rozciąganie stylu pozwala na dziedziczenie stylów z innych elementów w stronie i ma najniższy priorytet.
    
    411. W folderze www znajdują się podfoldery html i style, w których zapisane są odpowiednio pliki z rozszerzeniem html i pliki z rozszerzeniem css. Chcąc dołączyć styl.css do pliku HTML należy użyć
    A. <link rel="Stylesheet" type="text/css" href="/styl.css" /> // W odpowiedzi A należy użyć znacznika <link> wraz z atrybutami rel='stylesheet' i type='text/css' oraz atrybutem href='/styl.css'. Ten znacznik służy do dołączania arkusza stylów CSS do pliku HTML.
    B. <link rel="Stylesheet" type="text/css" href="/style/styl.css" /> // W odpowiedzi B należy użyć znacznika <link> wraz z atrybutami rel='stylesheet' i type='text/css' oraz atrybutem href='/style/styl.css'. Ten znacznik wskazuje na plik styl.css znajdujący się w podfolderze 'style'.
    C. <link rel="Stylesheet" type="text/css" href="/www/style/styl.css" /> // W odpowiedzi C należy użyć znacznika <link> wraz z atrybutami rel='stylesheet' i type='text/css' oraz atrybutem href='/www/style/styl.css'. Jednak ta odpowiedź jest niepoprawna, ponieważ podfolder 'www' jest już głównym folderem, więc nie trzeba go uwzględniać w ścieżce.
    D. <link rel="Stylesheet" type="text/css" href="/../style/styl.css" /> // W odpowiedzi D należy użyć znacznika <link> wraz z atrybutami rel='stylesheet' i type='text/css' oraz atrybutem href='/../style/styl.css'. Ten znacznik wskazuje na plik styl.css znajdujący się w folderze wyżej od głównego folderu, a następnie w podfolderze 'style'.
    
    412. Chcąc zdefiniować marginesy wewnętrzne dla danych: margines górny 50px, dolny 40px, prawy 20px i lewy 30px należy użyć składni CSS
    A. padding: 50px, 40px, 20px, 30px; // A. padding: 50px, 40px, 20px, 30px; - Ta składnia jest niepoprawna, ponieważ kolejność podawanych parametrów jest inna niż wymagana.
    B. padding: 50px, 20px, 40px, 30px; // B. padding: 50px, 20px, 40px, 30px; - Ta składnia jest poprawna, ponieważ podane wartości są w odpowiedniej kolejności: margines górny 50px, lewy 20px, margines dolny 40px, prawy 30px.
    C. padding: 20px, 40px, 30px, 50px; // C. padding: 20px, 40px, 30px, 50px; - Ta składnia jest niepoprawna, ponieważ kolejność podawanych parametrów jest inna niż wymagana.
    D. padding: 40px, 30px, 50px, 20px; // D. padding: 40px, 30px, 50px, 20px; - Ta składnia jest niepoprawna, ponieważ kolejność podawanych parametrów jest inna niż wymagana.
    
    413. Chcąc sformatować w stylach CSS wszystkie obrazy zawarte w akapicie, powinno się użyć selektora
    A. p img // Selektor A. p img oznacza, że chcemy zastosować style CSS na wszystkie obrazy (img), które są zawarte w akapicie (p).
    B. p#img // Selektor B. p#img oznacza, że chcemy zastosować style CSS na akapit (p), który ma id (id) o wartości 'img'.
    C. p+img // Selektor C. p+img oznacza, że chcemy zastosować style CSS na obraz (img), który jest bezpośrednio po akapicie (p).
    D. p.img // Selektor D. p.img oznacza, że chcemy zastosować style CSS na akapit (p), który ma klasę (class) o wartości 'img'.
    
    414. Który z atrybutów background-attachment w języku CSS należy wybrać, aby tło strony było nieruchome względem okna przeglądarki?
    A. Scroll // Atrybut background-attachment o wartości 'Scroll' sprawia, że tło strony przewija się razem z zawartością okna przeglądarki.
    B. Fixed // Atrybut background-attachment o wartości 'Fixed' powoduje, że tło strony jest nieruchome i nie przesuwa się wraz ze scrollowaniem.
    C. Local // Atrybut background-attachment o wartości 'Local' jest rzadko stosowany i ma specyficzne zastosowanie w przypadku elementów potomnych.
    D. Inherit // Atrybut background-attachment o wartości 'Inherit' odziedzicza wartość tego atrybutu po elemencie nadrzędnym.
    
    415. Barwa zapisana w modelu RGB(255, 0, 0) jest
    A. żółta // Barwa zapisana w modelu RGB(255, 0, 0) jest żółta.
    B. zielona // Barwa zapisana w modelu RGB(255, 0, 0) jest zielona.
    C. niebieska // Barwa zapisana w modelu RGB(255, 0, 0) jest niebieska.
    D. czerwona // Barwa zapisana w modelu RGB(255, 0, 0) jest czerwona.
    
    416. Połączenie dwóch barw leżących po przeciwnych stronach w kole barw jest połączeniem
    A. trójkątnym // Połączenie dwóch barw leżących po przeciwnych stronach w kole barw jest połączeniem trójkątnym. Polega na łączeniu barw z pozycji, które są sobie oddalone o 120 stopni. Na przykład połączenie czerwonej i niebieskiej barwy.
    B. sąsiadującym // Połączenie dwóch barw leżących obok siebie w kole barw jest połączeniem sąsiadującym. Polega na łączeniu barw z pozycji bezpośrednio obok siebie, na przykład połączenie czerwonej i żółtej barwy.
    C. dopełniającym // Połączenie dwóch barw leżących po przeciwnych stronach w kole barw jest połączeniem dopełniającym. Polega na łączeniu barw, które są sobie najbardziej przeciwstawne na kolorowym kole barw. Na przykład połączenie niebieskiej i pomarańczowej barwy.
    D. monochromatycznym // Połączenie dwóch barw o identycznym odcieniu jest połączeniem monochromatycznym. Polega na łączeniu różnych odcieni tej samej barwy, na przykład połączenie jasnego i ciemnego odcienia niebieskiego.
    
    417. Model barw oparty na 3 parametrach: odcień, nasycenie i jasność to
    A. RGB // Model barw RGB (Red Green Blue) oparty jest na trzech parametrach: intensywności czerwieni, zieleni i niebieskiego światła. Używany jest głównie w wyświetlaczach komputerowych i telewizorach, gdzie każdy piksel składa się z tych trzech kolorów w różnych proporcjach.
    B. HSV // Model barw HSV (Hue Saturation Value) oparty jest na trzech parametrach: odcieniu, nasyceniu i jasności. Odcień określa barwę, nasycenie mierzy jej intensywność, a jasność odpowiada za jej wartość. Wykorzystywany jest często w grafice komputerowej i edycji zdjęć.
    C. CMY // Model barw CMY (Cyan Magenta Yellow) oparty jest na trzech parametrach: intensywności tych trzech kolorów. Jest to odwrotność modelu RGB - im większa wartość, tym mniejsze nasycenie danego koloru w wynikowym obrazie. CMY jest często używany w druku kolorowym.
    D. CMYK // Model barw CMYK (Cyan Magenta Yellow Key) jest podobny do modelu CMY, ale dodatkowo zawiera czwarty parametr - key (czarny). Key odpowiada za kontrolę intensywności czerni w wynikowym obrazie, co daje większą precyzję przy druku. CMYK jest standardem w druku.
    
    418. Który z wymienionych formatów plików NIE JEST wykorzystywany do publikacji grafiki lub animacji na stronach internetowych?
    A. PNG // PNG - format pliku graficznego wykorzystywany do publikacji grafiki na stronach internetowych. Jest to format bezstratnej kompresji, który zapewnia wysoką jakość obrazu.
    B. SWF // SWF - format pliku animacji często wykorzystywany do publikacji animacji na stronach internetowych. SWF obsługuje animacje, dźwięk, wideo i interakcję z użytkownikiem.
    C. SVG // SVG - format pliku graficznego wektorowego, który umożliwia skalowanie i manipulację obrazem bez utraty jakości. SVG jest często używany do publikacji grafiki i ikon na stronach internetowych.
    D. AIFF // AIFF - format pliku dźwiękowego, nie jest wykorzystywany do publikacji grafiki ani animacji na stronach internetowych. AIFF jest przeważnie używany do przechowywania wysokiej jakości dźwięku.
    
    419. Aby stworzyć przycisk na stronę internetową według wzoru, należy w programie do grafiki rastrowej użyć opcji // pytanie posiada zdjecie D:

    420. Pierwszym krokiem podczas przetwarzania sygnału analogowego na cyfrowy jest
    A. próbkowanie // Próbkowanie jest pierwszym krokiem podczas przetwarzania sygnału analogowego na cyfrowy. Polega na pobieraniu kolejnych próbek wartości sygnału analogowego w określonych odstępach czasowych.
    B. kwantyzacja // Kwantyzacja jest procesem, w którym wartości próbek sygnału analogowego zostają zamienione na dyskretne wartości liczbowe. Jest to konieczne, aby móc reprezentować sygnał w postaci cyfrowej.
    C. filtrowanie // Filtrowanie ma na celu usunięcie niepożądanych składowych sygnału, takich jak zakłócenia czy szumy. Jest to istotne, aby uzyskać jak najdokładniejszą reprezentację sygnału analogowego w formie cyfrowej.
    D. kodowanie // Kodowanie polega na przypisaniu reprezentacji cyfrowej każdej z wartości próbek sygnału. Dzięki temu możliwe jest przekazywanie sygnału w postaci binarnej i dekodowanie go później do postaci wartości analogowej.
    
    421. Wskaż FAŁSZYWE stwierdzenie dotyczące normalizacji sygnału dźwiękowego
    A. Polecenie normalizacja dostępne jest w menu programu do obróbki dźwięku // Polecenie normalizacja jest dostępne w menu programu do obróbki dźwięku.
    B. W wyniku normalizacji wyrównywany jest poziom głośności całego nagrania // W wyniku normalizacji wyrównywany jest poziom głośności całego nagrania.
    C. Jeśli najgłośniejszy fragment dźwięku osiąga połowę skali, wszystko zostanie pogłośnione razy dwa - czyli tak, aby najgłośniejszy fragment osiągnął maksimum na skali // Jeśli najgłośniejszy fragment dźwięku osiąga połowę skali, wszystko zostanie pogłośnione razy dwa - czyli tak, aby najgłośniejszy fragment osiągnął maksimum na skali.
    D. Normalizacja polega na zmniejszeniu poziomu najgłośniejszej próbki w sygnale do zadanej wartości i następnie w odniesieniu do niej proporcjonalnym zwiększeniu głośności reszty sygnału // Normalizacja polega na zmniejszeniu poziomu najgłośniejszej próbki w sygnale do zadanej wartości i następnie w odniesieniu do niej proporcjonalnym zwiększeniu głośności reszty sygnału.
    
    422. Wskaż PRAWDZIWE stwierdzenie dla polecenia: CREATE TABLE IF NOT EXISTS ADRES(ulica VARCHAR(70) CHARACTER SET utf8);
    A. Rekordem tabeli nie może być 3 MAJA // Rekordem tabeli nie może być 3 MAJA
    B. Klauzula CHARACTER SET utf8 jest obowiązkowa // Klauzula CHARACTER SET utf8 jest obowiązkowa
    C. Do tabeli nie można wprowadzać ulic zawierających w nazwie polskie znaki // Do tabeli nie można wprowadzać ulic zawierających w nazwie polskie znaki
    D. IF NOT EXISTS stosuje się opcjonalnie, aby upewnić się, że brak w bazie danych takiej tabeli // IF NOT EXISTS stosuje się opcjonalnie, aby upewnić się, że brak w bazie danych takiej tabeli
    
    423. Jak działa instrukcja łącząca wyniki zapytań INTERSECT w języku SQL?
    A. Zwraca listę wyników z pierwszego zapytania oraz listę wyników z drugiego zapytania, powodując domyślne usuwanie powtarzających się wierszy. // Instrukcja łącząca wyniki zapytań INTERSECT w języku SQL zwraca listę wyników z pierwszego zapytania oraz listę wyników z drugiego zapytania, powodując domyślne usuwanie powtarzających się wierszy.
    B. Zwraca te wiersze, które wystąpiły w wyniku pierwszego zapytania, ale nie było ich w wyniku drugiego zapytania. // Instrukcja łącząca wyniki zapytań INTERSECT w języku SQL zwraca te wiersze, które wystąpiły w wyniku pierwszego zapytania, ale nie było ich w wyniku drugiego zapytania.
    C. Zwraca te wiersze, które wystąpiły w wyniku drugiego zapytania, ale nie było ich w wyniku pierwszego zapytania. // Instrukcja łącząca wyniki zapytań INTERSECT w języku SQL zwraca te wiersze, które wystąpiły w wyniku drugiego zapytania, ale nie było ich w wyniku pierwszego zapytania.
    D. Zwraca część wspólną wyników dwóch zapytań. // Instrukcja łącząca wyniki zapytań INTERSECT w języku SQL zwraca część wspólną wyników dwóch zapytań.
    
    424. W języku SQL dla dowolnych zestawów danych w tabeli Uczniowie, aby wybrać rekordy, które zawierają wyłącznie uczennice o imieniu "Aleksandra", urodzone po roku "1998", należy zapisać zapytanie
    A. SELECT * FROM Uczniowie WHERE imie="Aleksandra" AND rok_urodzenia > "1998"; // Wybiera rekordy z tabeli Uczniowie, które zawierają tylko uczennice o imieniu "Aleksandra" i urodzone po roku "1998".
    B. SELECT * FROM Uczniowie WHERE imie ="Aleksandra" OR rok_urodzenia < "1998"; // Wybiera rekordy z tabeli Uczniowie, które zawierają uczennice o imieniu "Aleksandra" lub urodzone przed rokiem "1998".
    C. SELECT * FROM Uczniowie WHERE imie="Aleksandra" OR rok_urodzenia > "1998"; // Wybiera rekordy z tabeli Uczniowie, które zawierają uczennice o imieniu "Aleksandra" lub urodzone po roku "1998".
    D. SELECT * FROM Uczniowie WHERE imie="Aleksandra" AND rok_urodzenia < "1998"; // Wybiera rekordy z tabeli Uczniowie, które zawierają uczennice o imieniu "Aleksandra" i urodzone przed rokiem "1998".
    
    425. Którą relację w projekcie bazy danych należy ustalić między tabelami widocznymi na rysunku zakładając, że każdy klient sklepu internetowego dokona przynajmniej dwóch zamówień? // pytanie posiada zdjecie D:

    426. Wyszukując z tabeli Pracownicy wyłącznie nazwiska, w których ostatnią literą jest "i", można użyć kwerendy SQL
    A. SELECT nazwisko FROM Pracownicy WHERE nazwisko LIKE "i"; // Kwerenda A sprawdza nazwiska w tabeli Pracownicy, które zawierają tylko literę 'i' na końcu.
    B. SELECT nazwisko FROM Pracownicy WHERE nazwisko LIKE "%i%"; // Kwerenda B sprawdza nazwiska w tabeli Pracownicy, które zawierają literę 'i' gdziekolwiek w nazwisku.
    C. SELECT nazwisko FROM Pracownicy WHERE nazwisko LIKE "%i"; // Kwerenda C sprawdza nazwiska w tabeli Pracownicy, które kończą się literą 'i'.
    D. SELECT nazwisko FROM Pracownicy WHERE nazwisko LIKE "i%"; // Kwerenda D sprawdza nazwiska w tabeli Pracownicy, które zaczynają się literą 'i'.
    
    427. W celu dodania rekordu do tabeli Pracownicy należy użyć polecenia SQL
    A. INSERT INTO Pracownicy VALUES ("Jan", "Kowalski"); // Polecenie SQL INSERT INTO Pracownicy VALUES ('Jan', 'Kowalski') używane jest do dodania rekordu do tabeli o nazwie Pracownicy. Rekord ten zawiera informacje o pracowniku o imieniu 'Jan' i nazwisku 'Kowalski'.
    B. INSERT VALUES (Jan; Kowalski) INTO Pracownicy; // Opcja B nie jest poprawną składnią polecenia SQL. Nie można używać nazw kolumn oraz wartości bezpośrednio w poleceniu INSERT VALUES.
    C. INSERT VALUES Pracownicy INTO (Jan, Kowalski); // Opcja C nie jest poprawną składnią polecenia SQL. Nie można używać nazwy tabeli oraz wartości bezpośrednio w poleceniu INSERT VALUES.
    D. INSERT (Jan), (Kowalski) INTO TABLE Pracownicy; // Opcja D nie jest poprawną składnią polecenia SQL. W poleceniu INSERT należy użyć składni INSERT INTO TABLE_NAME VALUES (value1, value2, ...), gdzie TABLE_NAME to nazwa tabeli, a value1, value2, ... to wartości rekordu, które mają zostać dodane.
    
    428. W języku SQL w wyniku wykonania zapytania ALTER TABLE osoba DROP COLUMN grupa; zostanie
    A. dodana kolumna grupa // Wynikiem wykonania zapytania ALTER TABLE osoba DROP COLUMN grupa będzie dodana kolumna grupa.
    B. usunięta kolumna grupa // Wynikiem wykonania zapytania ALTER TABLE osoba DROP COLUMN grupa będzie usunięcia kolumny grupa.
    C. zmieniona nazwa tabeli na grupa // Wynikiem wykonania zapytania ALTER TABLE osoba DROP COLUMN grupa będzie zmieniona nazwa tabeli na grupa.
    D. zmieniona nazwa kolumny na grupa // Wynikiem wykonania zapytania ALTER TABLE osoba DROP COLUMN grupa będzie zmieniona nazwa kolumny na grupa.
    
    429. Właściwym zestawem kroków według kolejności, które należy wykonać w celu nawiązania współpracy między aplikacją internetową po stronie serwera a bazą SQL, jest
    A. zapytanie do bazy, wybór bazy, wyświetlenie na stronie WWW, zamknięcie połączenia // Aplikacja wykonuje zapytanie do bazy danych, wybiera odpowiednią bazę danych, następnie wyświetla wyniki na stronie WWW, a na koniec zamyka połączenie z bazą danych.
    B. wybór bazy danych, nawiązanie połączenia z serwerem baz danych, zapytanie do bazy, wyświetlenie na stronie WWW, zamknięcie połączenia // Aplikacja wybiera odpowiednią bazę danych, nawiązuje połączenie z serwerem baz danych, wykonuje zapytanie do bazy danych, wyświetla wyniki na stronie WWW, a na koniec zamyka połączenie z bazą danych.
    C. wybór bazy, zapytanie do bazy, nawiązanie połączenia z serwerem baz danych, wyświetlenie na stronie WWW, zamknięcie połączenia // Aplikacja wybiera odpowiednią bazę danych, wykonuje zapytanie do bazy danych, nawiązuje połączenie z serwerem baz danych, wyświetla wyniki na stronie WWW, a na koniec zamyka połączenie z bazą danych.
    D. nawiązanie połączenia z serwerem baz danych, wybór bazy, zapytanie do bazy - wyświetlane na stronie WWW, zamknięcie połączenia // Aplikacja nawiązuje połączenie z serwerem baz danych, wybiera odpowiednią bazę danych, wykonuje zapytanie do bazy danych oraz wyświetla wyniki na stronie WWW, a na koniec zamyka połączenie z bazą danych.
    
    430. Do poprawnego i spójnego działania bazy danych niezbędne jest umieszczenie w każdej tabeli
    A. kluczy PRIMARY KEY i FOREIGN KEY // Klucze PRIMARY KEY i FOREIGN KEY są niezbędne do poprawnego i spójnego działania bazy danych. Klucz PRIMARY KEY to unikalny identyfikator, który identyfikuje wiersz w tabeli i nie może mieć wartości NULL. Klucz FOREIGN KEY to odwołanie do klucza głównego w innej tabeli, które utrzymuje spójność danych między tabelami.
    B. klucza FOREIGN KEY z wartością NOT NULL // Klucz FOREIGN KEY z wartością NOT NULL oznacza, że każda wartość w kolumnie, która jest kluczem obcym, musi mieć przypisaną wartość i nie może być NULL. Klucz obcy to odwołanie do klucza głównego w innej tabeli.
    C. klucza obcego z wartością NOT NULL i UNIQUE // Klucz obcy z wartością NOT NULL i UNIQUE oznacza, że wartość w kolumnie, która jest kluczem obcym, musi mieć przypisaną wartość, nie może być NULL i musi być unikalna w tej kolumnie. Klucz obcy to odwołanie do klucza głównego w innej tabeli.
    D. klucza PRIMARY KEY z wartością NOT NULL i UNIQUE // Klucz PRIMARY KEY z wartością NOT NULL i UNIQUE to unikalny identyfikator, który identyfikuje wiersz w tabeli. Klucz ten nie może mieć wartości NULL i musi być unikalny w całej tabeli.
    
    431. W języku PHP, dla zmiennych a = 5 i b = 3 wartość typu zmiennoprzecinkowego zwróci wyrażenie
    A. a + b // Wynikiem wyrażenia a + b jest suma wartości zmiennych a i b.
    B. a * b // Wynikiem wyrażenia a * b jest iloczyn wartości zmiennych a i b.
    C. a / b // Wynikiem wyrażenia a / b jest iloraz wartości zmiennej a przez zmienną b.
    D. a && b // Wynikiem wyrażenia a && b jest wartość logiczna true, jeśli zarówno zmienna a, jak i zmienna b mają wartość true. W przeciwnym razie, wynikiem jest wartość logiczna false.
    
    432. Wartość i typ zmiennej w języku PHP można sprawdzić za pomocą funkcji
    A. readfile() // Funkcja readfile() służy do odczytania zawartości pliku i wypisania go na wyjście. Nie zwraca jednak wartości ani typu zmiennej.
    B. var_dump() // Funkcja var_dump() służy do wyświetlenia informacji o wartości i typie danej zmiennej. Jest to przydatne w celu debugowania i analizowania zmiennych w języku PHP.
    C. implode() // Funkcja implode() służy do łączenia elementów tablicy w jeden ciąg znaków, przy użyciu podanego separatora. Nie sprawdza wartości ani typu zmiennej.
    D. strlen() // Funkcja strlen() zwraca długość podanego ciągu znaków. Nie sprawdza wartości ani typu zmiennej.
    
    433. W języku JavaScript zdefiniowana zmienna i, która ma przechowywać wynik dzielenia wynoszący 1, to
    A. var i=3/2; // W punkcie A zdefiniowana jest zmienna i o wartości 3/2. Wykorzystana jest składnia 'var' do deklaracji zmiennej. Wartość 3/2 jest przypisana do zmiennej i po wykonaniu dzielenia.
    B. var i=Number(3/2); // W punkcie B zdefiniowana jest zmienna i o wartości 3/2. Wykorzystana jest funkcja Number(), która konwertuje wynik dzielenia na liczbę. Wynik 3/2 jest przypisany do zmiennej i jako liczba.
    C. var i=parseInt(3/2); // W punkcie C zdefiniowana jest zmienna i o wartości 3/2. Wykorzystana jest funkcja parseInt(), która konwertuje wynik dzielenia na liczbę całkowitą. Część całkowita wyniku 3/2, czyli 1, jest przypisana do zmiennej i.
    D. var i=parseFloat(3/2); // W punkcie D zdefiniowana jest zmienna i o wartości 3/2. Wykorzystana jest funkcja parseFloat(), która konwertuje wynik dzielenia na liczbę zmiennoprzecinkową. Wynik 3/2 jest przypisany do zmiennej i jako liczba zmiennoprzecinkowa.
    
    434. Wskaż BŁĘDNY opis optymalizacji kodu wynikowego programu
    A. Jej celem jest poprawienie wydajności programu // Optymalizacja kodu wynikowego programu ma na celu poprawienie wydajności programu.
    B. W celu zwiększenia szybkości wykonywania kodu przez procesor może być prowadzona na różnych etapach pracy // Optymalizacja kodu wynikowego programu może być prowadzona na różnych etapach pracy w celu zwiększenia szybkości wykonywania kodu przez procesor.
    C. Jej celem jest sprawdzenie zgodności z wymogami formalnymi // Optymalizacja kodu wynikowego programu nie ma za zadanie sprawdzić zgodności z wymogami formalnymi.
    D. Powinna prowadzić do modyfikacji kodu źródłowego do postaci, w której będzie on działał szybciej // Optymalizacja kodu wynikowego programu ma prowadzić do modyfikacji kodu źródłowego do postaci, w której będzie on działał szybciej.
    
    435. Podaj wynik działania programu zapisanego w języku JavaScript, znajdującego się w ramce, po podaniu na wejściu wartości 5 // pytanie posiada zdjecie D:

    436. W języku PHP chcąc wyświetlić ciąg n znaków @, należy użyć funkcji // pytanie posiada zdjecie D:

    437. Językami programowania działającymi po stronie serwera są:
    A. Java, C#, AJAX, Ruby, PHP // Językami programowania działającymi po stronie serwera są Java, C#, AJAX, Ruby, PHP. Są to języki, które pozwalają tworzyć aplikacje serwerowe i przetwarzać żądania klientów.
    B. Java, C#, Python, Ruby, PHP // Językami programowania działającymi po stronie serwera są Java, C#, Python, Ruby, PHP. Te języki umożliwiają programistom tworzenie aplikacji serwerowych i obsługę żądań od klientów.
    C. C#, Python, Ruby, PHP, JavaScript // Językami programowania działającymi po stronie serwera są C#, Python, Ruby, PHP, JavaScript. To języki, które pozwalają na tworzenie aplikacji serwerowych i obsługę żądań od użytkowników.
    D. Java, C#, Python, ActionScript, PHP // Językami programowania działającymi po stronie serwera są Java, C#, Python, ActionScript, PHP. Są to narzędzia, które umożliwiają tworzenie aplikacji serwerowych i przetwarzanie żądań od klientów.
    
    438. Instrukcja przypisania elementu do tablicy w języku JavaScript dotyczy tablicy // pytanie posiada zdjecie D:

    439. Jakie elementy wypisze funkcja wypisz(2) stworzona w języku JavaScript? // pytanie posiada zdjecie D:

    440. W formularzu dokumentu PHP istnieje pole <input name="im" />. Po wprowadzeniu przez użytkownika ciągu znaków "Janek", w celu dodania zawartości pola do bazy danych, w tablicy $_POST zawarty jest element
    A. im o indeksie Janek // W tablicy $_POST w polu im o indeksie Janek jest zawarta wartość wprowadzona przez użytkownika.
    B. Janek o indeksie im // W tablicy $_POST w polu Janek o indeksie im jest zawarta wartość wprowadzona przez użytkownika.
    C. im z kolejnym numerem indeksu // W tablicy $_POST pole im jest zapisane pod kolejnym numerem indeksu.
    D. Janek z kolejnym numerem indeksu // W tablicy $_POST pole Janek jest zapisane pod kolejnym numerem indeksu.
    
    441. W celu zmodyfikowania tekstu "ala ma psa" na "ALA MA PSA" należy użyć funkcji PHP
    A. strtoupper("ala ma psa"); // Funkcja strtoupper() służy do zamienienia wszystkich liter w danym tekście na ich odpowiedniki zapisane wielkimi literami. W przypadku podanego tekstu 'ala ma psa', funkcja zwróci tekst 'ALA MA PSA'.
    B. strtolower("ala ma psa"); // Funkcja strtolower() służy do zamienienia wszystkich liter w danym tekście na ich odpowiedniki zapisane małymi literami. W przypadku podanego tekstu 'ala ma psa', funkcja zwróci tekst 'ala ma psa'.
    C. ucfirst("ala ma psa"); // Funkcja ucfirst() służy do zamienienia pierwszej litery danej frazy na wielką literę. W przypadku podanego tekstu 'ala ma psa', funkcja zwróci tekst 'Ala ma psa'.
    D. strstr("ala ma psa"); // Funkcja strstr() służy do wyszukiwania podciągu znaków w danym tekście. W przypadku podanego tekstu 'ala ma psa', funkcja bez podania drugiego argumentu zwróci cały tekst 'ala ma psa'.
    
    442. W kodzie JavaScript pętla zostanie wykonana // pytanie posiada zdjecie D:

    443. Poprawne udokumentowanie wzorca weryfikacji pola nazwa w części kodu aplikacji JavaScript to // pytanie posiada zdjecie D:

    444. Włączenie do kodu skryptu zawartości pliku egzamin.php, zawierającego kod PHP, wymaga dodania instrukcji
    A. fgets("egzamin.php"); // Punkt A używa funkcji fgets() z argumentem będącym nazwą pliku 'egzamin.php' do odczytania zawartości tego pliku.
    B. fopen("egzamin.php"); // Punkt B używa funkcji fopen() z argumentem będącym nazwą pliku 'egzamin.php' do otwarcia tego pliku i zwraca uchwyt pliku.
    C. getfile("egzamin.php"); // Punkt C używa funkcji getfile() z argumentem będącym nazwą pliku 'egzamin.php' do pobrania zawartości tego pliku.
    D. include("egzamin.php"); // Punkt D używa funkcji include() z argumentem będącym nazwą pliku 'egzamin.php' do dołączenia zawartości tego pliku do kodu.
    
    445. Automatyczna weryfikacja właściciela strony udostępnianej przez protokół HTTPS jest możliwa dzięki
    A. danym whois // Protokół HTTPS umożliwia automatyczną weryfikację właściciela strony poprzez dane whois, które zawierają informacje o rejestracji domeny, takie jak nazwa właściciela, adres i dane kontaktowe.
    B. certyfikatowi SSL // Certyfikat SSL jest niezbędny do automatycznej weryfikacji właściciela strony udostępnianej przez protokół HTTPS. Certyfikat ten jest wydawany przez zaufane instytucje i potwierdza autentyczność strony, zapewniając szyfrowane połączenie i ochronę danych.
    C. kluczom prywatnym // Klucze prywatne są wykorzystywane do potwierdzenia tożsamości strony w protokole HTTPS, ale nie umożliwiają automatycznej weryfikacji właściciela strony.
    D. danym kontaktowym na stronie // Dane kontaktowe na stronie mogą być wykorzystane do weryfikacji właściciela, ale nie zapewniają automatycznego procesu weryfikacji właściciela strony udostępnianej przez protokół HTTPS.
    
    446. Deklaracja typu dokumentu HTML: oznacza, że kod jest napisany w wersji
    A. 4 // Deklaracja typu dokumentu HTML oznacza, że kod jest napisany w wersji 4.
    B. 5 // Deklaracja typu dokumentu HTML oznacza, że kod jest napisany w wersji 5. Jest to aktualna wersja HTML, która wprowadza nowe elementy i funkcje.
    C. 6 // Deklaracja typu dokumentu HTML oznacza, że kod jest napisany w wersji 6. Jednak nie istnieje HTML w wersji 6, więc odpowiedź C jest niepoprawna.
    D. 7 // Deklaracja typu dokumentu HTML oznacza, że kod jest napisany w wersji 7. Jednak nie istnieje HTML w wersji 7, więc odpowiedź D jest niepoprawna.
    
    447. Dołączenie zewnętrznego arkusza stylów do kodu HTML jest realizowane przy użyciu znacznika
    A. <css> // Punkt A - Dołączenie zewnętrznego arkusza stylów do kodu HTML jest realizowane przy użyciu znacznika <css>.
    B. <link> // Punkt B - Dołączenie zewnętrznego arkusza stylów do kodu HTML jest realizowane przy użyciu znacznika <link>.
    C. <style> // Punkt C - Dołączenie zewnętrznego arkusza stylów do kodu HTML jest realizowane przy użyciu znacznika <style>.
    D. <meta> // Punkt D - Dołączenie zewnętrznego arkusza stylów do kodu HTML jest realizowane przy użyciu znacznika <meta>.
    
    448. Który z rysunków obrazuje efekt działania przedstawionego fragmentu kodu HTML? // pytanie posiada zdjecie D:

    449. Przedstawione pole input umożliwi // pytanie posiada zdjecie D:

    450. W języku HTML zdefiniowano hiperłącze ze znakiem #. Co stanie się po wybraniu przedstawionego odsyłacza? // pytanie posiada zdjecie D:

    451. Podana definicja stylu CSS sprawi, że nagłówki pierwszego stopnia będą // pytanie posiada zdjecie D:

    452. Jak zdefiniować w języku CSS formatowanie hiperłącza, żeby nieodwiedzony link był w kolorze żółtym, a odwiedzony w kolorze zielonym?
    A. a:visited {color: yellow;} a:link{color: green;} // Punkt A definiuje formatowanie dla odwiedzonych linków. Kolor tekstu linku zostaje ustawiony na żółty.
    B. a:hover {color: green;} a:link{color: yellow;} // Punkt B definiuje formatowanie dla linku po najechaniu na niego kursorem. Kolor tekstu linku zostaje ustawiony na zielony.
    C. a:hover {color: yellow;} a:visited{color: green;} // Punkt C definiuje formatowanie dla linku po najechaniu na niego kursorem. Kolor tekstu linku zostaje ustawiony na żółty.
    D. a:link {color: yellow;} a:visited{color: green;} // Punkt D definiuje formatowanie dla linku, który nie został jeszcze odwiedzony. Kolor tekstu linku zostaje ustawiony na żółty. Punk D także definiuje formatowanie dla odwiedzonych linków. Kolor tekstu linku zostaje ustawiony na zielony.
    
    453. W języku CSS zdefiniowano formatowanie dla stopki. Aby użyć tego formatowania dla bloku opisanego znacznikiem div, należy zapisać
    A. <div "stopka"> // Zapis <div "stopka"> jest niepoprawny, ponieważ brakuje atrybutu.
    B. <div id="stopka"> // Poprawnym zapisem jest <div id="stopka">, który nadaje identyfikator "stopka" do bloku div. Dzięki temu możliwe jest zastosowanie zdefiniowanego formatowania dla stopki.
    C. <div title="stopka"> // Zapis <div title="stopka"> nadaje atrybut title z wartością "stopka" do bloku div, ale nie zapewnia formatowania stopki.
    D. <div class="stopka"> // Zabezpieczający zapis <div class="stopka"> nadaje klasę "stopka" do bloku div, ale nie zapewnia formatowania stopki.
    
    454. Przedstawiono efekt formatowania CSS oraz kod HTML. Jak należy zdefiniować styl, aby osiągnąć takie formatowanie? // pytanie posiada zdjecie D:

    455. Przedstawione formatowanie CSS sprawi, że dla prezentowanego nagłówka trzeciego stopnia // pytanie posiada zdjecie D:

    456. W języku XHTML zapisano fragment kodu, który zawiera błąd walidacji. Na czym polega ten błąd? // pytanie posiada zdjecie D:

    457. Kolor zapisany kodem heksadecymalnym: #1510FE w kodzie RGB będzie miał wartość
    A. rgb(15,10,FE) // Punkt A reprezentuje wartości RGB koloru zapisanego kodem heksadecymalnym #1510FE. Mała litera a oznacza wartość 10 w systemie szesnastkowym, co odpowiada wartości 16 w systemie dziesiętnym. Ostatnie dwie cyfry FE pozostają niezmienione. W kodzie RGB, wartość czerwonego kanału wynosi 21, wartość zielonego kanału wynosi 16, a wartość niebieskiego kanału wynosi 254.
    B. rgb(21,16,FE) // Punkt B reprezentuje wartości RGB koloru zapisanego kodem heksadecymalnym #1510FE. W systemie szesnastkowym, liczba 21 odpowiada literze 'F' w systemie dziesiętnym, a liczba 16 odpowiada literze 'E'. Ostatnie dwie cyfry FE pozostają niezmienione. W kodzie RGB, wartość czerwonego kanału wynosi 21, wartość zielonego kanału wynosi 16, a wartość niebieskiego kanału wynosi 254.
    C. rgb(21,16,254) // Punkt C reprezentuje wartości RGB koloru zapisanego kodem heksadecymalnym #1510FE. W systemie szesnastkowym, liczba 21 odpowiada literze 'F' w systemie dziesiętnym, a liczba 16 odpowiada literze 'E'. Ostatnie dwie cyfry  FE zostają zamienione na wartość 254 w systemie dziesiętnym. W kodzie RGB, wartość czerwonego kanału wynosi 21, wartość zielonego kanału wynosi 16, a wartość niebieskiego kanału wynosi 254.
    D. rgb(21,16,255) // Punkt D reprezentuje wartości RGB koloru zapisanego kodem heksadecymalnym #1510FE. W systemie szesnastkowym, liczba 21 odpowiada literze 'F' w systemie dziesiętnym, a liczba 16 odpowiada literze 'E'. Ostatnie dwie cyfry  FE zostają zamienione na wartość 255 w systemie dziesiętnym, ponieważ maksymalna wartość dla wartości kanałów w kodzie RGB wynosi 255. W kodzie RGB, wartość czerwonego kanału wynosi 21, wartość zielonego kanału wynosi 16, a wartość niebieskiego kanału wynosi 255.
    
    458. Edytując grafikę w edytorze grafiki rastrowej należy pozbyć się kolorów z rysunku tak, aby obraz był w odcieniach szarości. Można do tego efektu wykorzystać funkcję
    A. desaturacji // Desaturacja to proces usuwania kolorów z obrazu i zamienia go na różne odcienie szarości. Wykorzystuje się to w edycji grafiki rastrowej, aby uzyskać efekt czarno-białego obrazu. Funkcja desaturacji można zastosować w edytorze grafiki rastrowej.
    B. kadrowania // Kadrowanie jest procesem przycinania obrazu, aby usunąć niechciane elementy lub zmienić jego proporcje. Można to zrobić w edytorze grafiki rastrowej, aby dopasować obraz do określonych wymagań lub poprawić kompozycję.
    C. szumu RGB // Szum RGB to efekt dodawania pikselom obrazu losowych małych zmian koloru, co powoduje wygląd ziarnisty lub pstrokaty. Może być stosowany w celu uzyskania artystycznego efektu lub symulacji analogowego wyglądu.
    D. filtru rozmycia // Filtr rozmycia to efekt, który rozmywa krawędzie i szczegóły obrazu, aby uzyskać efekt bardziej płynnego i zmiękczonego wyglądu. Może być wykorzystywany np. do wyrównania skóry w fotografii portretowej lub tworzenia efektu ruchu.
    
    459. W edytorze grafiki wektorowej stworzono przedstawiony kształt, który powstał z dwóch figur: trójkąta i koła. W celu stworzenia tego kształtu, po narysowaniu figur i odpowiednim ich ustawieniu, należy skorzystać z funkcji // pytanie posiada zdjecie D:

    460. Aby zapisać prostą animację na potrzeby strony internetowej, można skorzystać z formatu
    A. GIF // Format GIF jest używany do zapisu animacji na potrzeby strony internetowej. GIF (Graphics Interchange Format) obsługuje wiele klatek, co pozwala na stworzenie płynnej animacji. Jest to popularny format ze względu na mały rozmiar plików i kompatybilność z większością przeglądarek internetowych.
    B. JPG // Format JPG nie jest odpowiedni do zapisu animacji, ponieważ obsługuje tylko pojedyncze obrazy. JPG (Joint Photographic Experts Group) jest formatem kompresji stratnej, który jest idealny do zapisu fotografii i realistycznych obrazów. Jednak nie jest przeznaczony do animacji.
    C. PNG // Format PNG również nie jest odpowiedni do zapisu animacji, ponieważ obsługuje tylko pojedyncze obrazy. PNG (Portable Network Graphics) jest formatem bezstratnej kompresji, który jest często używany do zapisu grafiki z przezroczystymi tłem. Jednak nie obsługuje animacji.
    D. CDR // Format CDR (CorelDRAW) jest formatem plików graficznych używanym przez program CorelDRAW. Jednak nie jest on odpowiedni do zapisu animacji na potrzeby strony internetowej. Do tego celu lepiej jest skorzystać z formatu GIF.
    
    461. Tworząc tabelę w języku SQL, zdefiniowano dla kolumny klucz główny. Aby zabezpieczyć ją przed wstawieniem wartości pustej, należy zastosować atrybut
    A. NULL // Atrybut NULL informuje, że kolumna może przyjmować wartości puste. W przypadku zdefiniowania klucza głównego dla kolumny, należy zastosować atrybut NOT NULL, który uniemożliwi wstawienie wartości pustej do tej kolumny.
    B. UNIQUE // Atrybut UNIQUE informuje, że wartości w danej kolumnie muszą być unikalne. Nie ma wpływu na możliwość wstawienia wartości pustej do tej kolumny.
    C. DEFAULT // Atrybut DEFAULT określa domyślną wartość, która zostanie użyta, jeśli nie podamy wartości dla danej kolumny. Nie wpływa na zabezpieczenie przed wstawieniem wartości pustej.
    D. NOT NULL // Atrybut NOT NULL informuje, że kolumna nie może przyjmować wartości pustej. Jest to odpowiedni atrybut do zabezpieczenia kolumny klucza głównego przed wstawieniem wartości pustej.
    
    462. Dana jest tabela mieszkania zawierająca kolumny o nazwach: adres, metraz, ile_pokoi, standard, status, cena. Wykonanie przedstawionej kwerendy SQL SELECT sprawi, że zostaną wyświetlone // pytanie posiada zdjecie D:

    463. Do tabeli pracownicy wpisano rekordy. Co zostanie wyświetlone po uruchomieniu kwerendy SQL SELECT podanej w ramce? // pytanie posiada zdjecie D:

    464. Na przedstawionej tabeli samochody wykonano zapytanie SQL: SELECT model FROM samochody WHERE rocznik=2016; W wyniku podanego zapytania zostaną zwrócone następujące wartości: // pytanie posiada zdjecie D:

    465. Baza danych ma dwie tabele połączone relacją 1..n. Którą klauzulą SQL należy połączyć tabele, aby wybrać korespondujące ze sobą wartości z pól obu tabel?
    A. OUTER LINK // OUTER LINK - ta klauzula SQL służy do wykonania złączenia (join) pomiędzy tabelami, które z powodu braku zależności mogą posiadać puste wartości w polach korespondujących ze sobą.
    B. INNER LINK // INNER LINK - ta klauzula SQL służy do wykonania złączenia (join) pomiędzy tabelami, które posiadają powiązania (klucze obce) i zwraca tylko te wartości, które mają swoje odpowiedniki w drugiej tabeli.
    C. JOIN // JOIN - ta klauzula SQL służy do wykonania złączenia (join) pomiędzy tabelami, które mogą posiadać powiązania (klucze obce) lub być niepowiązane. Zwraca wszystkie wartości z obu tabel, które mają swoje odpowiedniki w drugiej tabeli.
    D. AND // AND - to logiczny operator w SQL, który służy do łączenia warunków w zapytaniach. Nie ma bezpośredniego związku z połączeniem tabel.
    
    466. Zdefiniowanie klucza obcego jest niezbędne do utworzenia
    A. transakcji // Transakcje są operacjami wprowadzającymi zmiany w bazie danych. Zdefiniowanie klucza obcego jest istotne w celu ścisłego powiązania rekordów z różnych tabel. Transakcje mogą odnosić się do innych tabel poprzez klucze obce, co umożliwia kontrolę integralności danych.
    B. relacji 1..n // Relacja 1..n oznacza, że jeden rekord z tabeli A może być powiązany z wieloma rekordami w tabeli B. Zdefiniowanie klucza obcego w tabeli B, który odnosi się do klucza podstawowego w tabeli A, umożliwia powiązanie tych rekordów. Dzięki temu można w łatwy sposób określić powiązane rekordy i wykonywać operacje na nich.
    C. relacji 1..1 // Relacja 1..1 oznacza, że jeden rekord z tabeli A może być powiązany tylko z jednym rekordem w tabeli B, i vice versa. Zdefiniowanie klucza obcego w tabeli B, który odnosi się do klucza podstawowego w tabeli A, umożliwia ścisłe powiązanie tych rekordów. Dzięki temu można określić, że te dwie tabele są ze sobą powiązane w sposób jednoznaczny.
    D. klucza podstawowego // Klucz podstawowy to unikalna wartość przypisana do każdego rekordu w tabeli. Zdefiniowanie klucza obcego w innej tabeli, który odnosi się do tego klucza podstawowego, umożliwia powiązanie rekordów między tymi tabelami. Klucz podstawowy jest ważny przy tworzeniu relacji między tabelami oraz przy zagwarantowaniu integralności danych.
    
    467. Zgodnie z właściwościami ACID, dotyczącym wykonania transakcji, wymaganie trwałości (ang. durability) oznacza, że
    A. transakcja może być w pewnych warunkach podzielona na dwa niezależne etapy // W przypadku transakcji, wymaganie trwałości oznacza, że transakcja może być w pewnych warunkach podzielona na dwa niezależne etapy.
    B. w czasie wykonania transakcji dane mogą być modyfikowane przez inne transakcje // W czasie wykonania transakcji dane mogą być modyfikowane przez inne transakcje.
    C. w przypadku naruszenia spójności bazy danych transakcja usuwa tabele z kluczami obcymi // W przypadku naruszenia spójności bazy danych, transakcja usuwa tabele z kluczami obcymi.
    D. dane zatwierdzone przez transakcję powinny być dostępne niezależnie od tego, co się będzie działo po jej zakończeniu // Dane zatwierdzone przez transakcję powinny być dostępne niezależnie od tego, co się będzie działo po jej zakończeniu.
    
    468. Baza danych zawiera tabelę faktury o polach: numer, data, id_klienta, wartość, status. Każdego dnia generowany jest raport faktur z bieżącego dnia. Wyświetlane są jedynie numery i wartości faktur. Która z kwerend SQL służy do stworzenia tego raportu?
    A. SELECT * FROM faktury; // Punkt A to zapytanie SQL 'SELECT * FROM faktury;', które zwraca wszystkie dane z tabeli faktury. Nie spełnia to wymagań raportu, ponieważ wyświetlane mają być jedynie numery i wartości faktur.
    B. SELECT numer,wartość FROM faktury; // Punkt B to zapytanie SQL 'SELECT numer,wartość FROM faktury;', które zwraca jedynie numery i wartości faktur z tabeli faktury. To jest odpowiedź poprawna, ponieważ spełnia wymagania raportu.
    C. SELECT * FROM faktury WHERE data=CURRENT_DATE(); // Punkt C to zapytanie SQL 'SELECT * FROM faktury WHERE data=CURRENT_DATE();', które zwraca wszystkie dane faktur z tabeli faktury, których data jest równa bieżącej dacie. To nie jest odpowiedź poprawna, ponieważ raport ma wyświetlać jedynie numery i wartości faktur.
    D. SELECT numer, wartosc FROM faktury WHERE data=CURRENT_DATE(); // Punkt D to zapytanie SQL 'SELECT numer, wartosc FROM faktury WHERE data=CURRENT_DATE();', które zwraca jedynie numery i wartości faktur z tabeli faktury, których data jest równa bieżącej dacie. To jest odpowiedź poprawna, ponieważ spełnia wymagania raportu.
    
    469. Polecenie SQL, które usuwa bazę danych o nazwie firma, ma postać
    A. DROP firma; // Polecenie SQL 'DROP firma;' usuwa tabelę o nazwie 'firma'. Może być używane, gdy chcemy usunąć całą tabelę z bazy danych.
    B. ALTER firma DROP; // Polecenie SQL 'ALTER firma DROP;' jest niepoprawne. Nie można używać 'DROP' bez określenia, co dokładnie chcemy usunąć.
    C. DROP DATABASE firma; // Polecenie SQL 'DROP DATABASE firma;' usuwa całą bazę danych o nazwie 'firma'. Jest to najbardziej odpowiednie polecenie, jeśli chcemy całkowicie usunąć bazę danych.
    D. ALTER firma DROP DATABASE; // Polecenie SQL 'ALTER firma DROP DATABASE;' jest niepoprawne. Nie można używać 'DROP DATABASE' w połączeniu z poleceniem 'ALTER'.
    
    470. Zastosowanie kwerendy SQL: DELETE FROM mieszkania WHERE status=1; spowoduje usunięcie
    A. tabeli mieszkania z bazy danych // Zastosowanie kwerendy SQL: DELETE FROM mieszkania WHERE status=1; nie spowoduje usunięcia tabeli mieszkania z bazy danych. Opcja A jest niepoprawna.
    B. pola o nazwie status z tabeli mieszkania // Zastosowanie kwerendy SQL: DELETE FROM mieszkania WHERE status=1; nie spowoduje usunięcia pola o nazwie status z tabeli mieszkania. Opcja B jest niepoprawna.
    C. rekordów, w których pole status jest równe 1, z tabeli mieszkania // Zastosowanie kwerendy SQL: DELETE FROM mieszkania WHERE status=1; spowoduje usunięcie rekordów, w których pole status jest równe 1, z tabeli mieszkania. Opcja C jest poprawna.
    D. tabel, w których pole status jest równe 1, z bazy danych mieszkania // Zastosowanie kwerendy SQL: DELETE FROM mieszkania WHERE status=1; nie spowoduje usunięcia tabel, w których pole status jest równe 1, z bazy danych mieszkania. Opcja D jest niepoprawna.
    
    471. Aby przywrócić bazę danych z kopii bezpieczeństwa na serwerze MSSQL, należy posłużyć się poleceniem
    A. EXPORT DATABASE // Polecenie EXPORT DATABASE jest niewłaściwe, gdy chcemy przywrócić bazę danych z kopii bezpieczeństwa na serwerze MSSQL. To polecenie służy do eksportowania bazy danych, czyli jej zapisywania w formacie pliku. Nie przywraca ono danych, tylko je eksportuje.
    B. BACKUP DATABASE // Polecenie BACKUP DATABASE również nie jest odpowiednie w tym przypadku. Ono służy do tworzenia kopii zapasowych bazy danych, czyli zapisywania jej stanu w danym momencie. Nie przywraca ono bazy danych z kopii bezpieczeństwa.
    C. RESTORE DATABASE // Polecenie RESTORE DATABASE jest właściwe w tym przypadku. Służy ono do przywracania bazy danych z wcześniej wykonanej kopii bezpieczeństwa. Działa poprzez odtworzenie zapisanej kopii i przywrócenie jej na serwerze MSSQL.
    D. UNBACKUP DATABASE // Polecenie UNBACKUP DATABASE nie istnieje w kontekście przywracania bazy danych z kopii bezpieczeństwa na serwerze MSSQL. Nie można 'anulować kopii zapasowej' i przywrócić bazę danych bezpośrednio z niej.
    
    472. W języku SQL wykonano przedstawione w ramce polecenia GRANT. Kto będzie miał prawo do przeglądania danych oraz ich zmiany? // pytanie posiada zdjecie D:

    473. W języku PHP zastosowano funkcję is_int(). Które z podanych wywołań tej funkcji zwróci wartość TRUE?
    A. is_int("135") // Funkcja is_int() jest używana w PHP do sprawdzenia, czy wartość jest całkowitą liczbą. W przypadku wywołania is_int("135"), funkcja zwróci wartość FALSE, ponieważ wartość w cudzysłowie jest traktowana jako ciąg znaków (string), a nie jako liczba całkowita.
    B. is_int(NULL) // Funkcja is_int() zwróci wartość FALSE w przypadku wywołania is_int(NULL), ponieważ NULL nie jest wartością całkowitą.
    C. is_int(13.5) // Funkcja is_int() zwróci wartość FALSE w przypadku wywołania is_int(13.5), ponieważ 13.5 jest liczbą zmiennoprzecinkową (float), a nie liczbą całkowitą.
    D. is_int(135) // Funkcja is_int() zwróci wartość TRUE w przypadku wywołania is_int(135), ponieważ 135 jest liczbą całkowitą.
    
    474. W języku JavaScript należy zapisać warunek, który będzie spełniony, gdy zmienna a będzie dowolną liczbą naturalną dodatnią (bez 0) lub gdy zmienna b będzie dowolną liczbą z przedziału domkniętego od 10 do 100. Użyte w tym warunku wyrażenie logiczne będzie miało postać
    A. (a>0) || ((b>=10) || (b<=100)) // W punkcie A użyte jest wyrażenie logiczne || (lub). Oznacza to, że warunek będzie spełniony, jeśli zmienna a będzie dowolną liczbą naturalną dodatnią (bez 0). Niezależnie od tego, jaka będzie wartość zmiennej b, warunek będzie spełniony.
    B. (a>0) && ((b>=10) || (b<=100)) // W punkcie B użyte jest wyrażenie logiczne && (i). Oznacza to, że warunek będzie spełniony, jeśli zarówno zmienna a będzie dowolną liczbą naturalną dodatnią (bez 0), jak i zmienna b będzie dowolną liczbą z przedziału domkniętego od 10 do 100.
    C. (a>0) || ((b>=10) && (b<=100)) // W punkcie C użyte jest wyrażenie logiczne || (lub) oraz && (i). Oznacza to, że warunek będzie spełniony, jeśli zmienna a będzie dowolną liczbą naturalną dodatnią (bez 0), lub zmienna b będzie dowolną liczbą z przedziału domkniętego od 10 do 100.
    D. (a>0) && ((b>=10) && (b<=100)) // W punkcie D użyte jest wyrażenie logiczne && (i). Oznacza to, że warunek będzie spełniony, jeśli zarówno zmienna a będzie dowolną liczbą naturalną dodatnią (bez 0), jak i zmienna b będzie dowolną liczbą z przedziału domkniętego od 10 do 100.
    
    475. Dla każdej iteracji pętli wartość bieżącego elementu tablicy jest przypisywana do zmiennej, a wskaźnik tablicy jest przesuwany o jeden, aż do ostatniego elementu tablicy. Zdanie to jest prawdziwe dla instrukcji
    A. if // Instrukcja if służy do sprawdzenia warunku i wykonania odpowiedniego bloku kodu, jeśli warunek jest spełniony.
    B. next // Instrukcja next nie istnieje w języku programowania i nie ma określonego działania.
    C. switch // Instrukcja switch służy do wyboru jednego z wielu bloków kodu do wykonania, w zależności od wartości wyrażenia.
    D. foreach // Instrukcja foreach służy do iteracji przez elementy tablicy lub kolekcji, przypisując wartość każdego elementu do zmiennej i wykonując blok kodu dla każdego elementu.
    
    476. W języku JavaScript wynik działania instrukcji zmienna++; będzie taki sam jak instrukcji
    A. zmienna--; // Instrukcja zmienna-- zmniejsza wartość zmiennej o 1.
    B. zmienna+=1; // Instrukcja zmienna+=1; zwiększa wartość zmiennej o 1.
    C. zmienna=zmienna+10; // Instrukcja zmienna=zmienna+10; zwiększa wartość zmiennej o 10.
    D. zmienna===zmienna+1; // Instrukcja zmienna===zmienna+1; porównuje czy wartość zmiennej jest równa jej samej plus 1.
    
    477. W języku PHP zmienna predefiniowana $_SESSION zawiera
    A. zmienne zarejestrowane w bieżącej sesji // Zmienna predefiniowana $_SESSION w języku PHP zawiera zmienne zarejestrowane w bieżącej sesji. Oznacza to, że można do niej przypisać wartości, które będą dostępne na przestrzeni całej sesji, czyli od momentu zalogowania użytkownika do wylogowania. Dzięki temu można przechowywać informacje, takie jak identyfikator sesji, dane użytkownika czy preferencje, które są potrzebne w różnych częściach aplikacji.
    B. spis zarejestrowanych sesji na serwerze WWW // Zmienna predefiniowana $_SESSION nie zawiera spisu zarejestrowanych sesji na serwerze WWW. Jest ona używana do przechowywania zmiennych tylko w bieżącej sesji. Informacje o zarejestrowanych sesjach są zazwyczaj przechowywane po stronie serwera w formie plików sesyjnych lub w bazie danych.
    C. zmienne przesyłane do skryptu za pomocą formularza // Zmienna predefiniowana $_SESSION nie zawiera zmiennych przesyłanych do skryptu za pomocą formularza. Do przesyłania danych z formularza można użyć innych zmiennych, takich jak $_POST lub $_GET. Zmienna $_SESSION jest przeznaczona do przechowywania danych między różnymi stronami aplikacji w ramach jednej sesji.
    D. zmienne przesyłane do skryptu za pomocą ciastek (cookie) // Zmienna predefiniowana $_SESSION nie zawiera zmiennych przesyłanych do skryptu za pomocą ciastek (cookie). Do przechowywania danych w ciastkach można użyć zmiennych takich jak $_COOKIE. Zmienna $_SESSION jest niezależna od ciastek i umożliwia przechowywanie większej ilości danych w sposób bezpieczny po stronie serwera.
    
    478. Przedstawiony kod źródłowy ma za zadanie wyświetlić // pytanie posiada zdjecie D:

    479. W języku JavaScript należy odwołać się do elementu zawartego w pierwszym paragrafie przedstawionego fragmentu strony HTML. Można to wykonać za pomocą funkcji // pytanie posiada zdjecie D:

    480. O przedstawionym obiekcie języka JavaScript można powiedzieć, że ma // pytanie posiada zdjecie D:

    481. W języku JavaScript stworzono funkcję o nazwie liczba_max porównującą trzy liczby naturalne pobrane z parametrów funkcji i zwracającą maksymalną z nich. Prawidłowe wywołanie takiej funkcji wraz z pobraniem jej wyniku będzie miało postać
    A. liczba_max(a,b,c); // W punkcie A należy wywołać funkcję liczba_max z przekazaniem trzech parametrów: a, b i c. Wywołanie będzie miało postać liczba_max(a, b, c).
    B. liczba_max(a,b,c,wynik); // Punkt B jest niepoprawny, ponieważ funkcja liczba_max nie zwraca żadnego wyniku, który mógłby być przekazany jako czwarty parametr.
    C. liczba_max(a,b,c)=wynik; // Punkt C jest niepoprawny, ponieważ próbuje przypisać wartość wyniku funkcji liczba_max do zmiennej wynik, a funkcja nie zwraca żadnej wartości.
    D. var wynik=liczba_max(a,b,c); // W punkcie D należy zadeklarować zmienną wynik, która zostanie zainicjalizowana wartością zwróconą przez funkcję liczba_max dla parametrów a, b i c. Wywołanie będzie miało postać var wynik = liczba_max(a, b, c).
    
    482. Które z zadań programistycznych powinno być wykonane po stronie serwera?
    A. Zmiana stylu HTML na stronie wywołana przesunięciem kursora // Zmiana stylu HTML na stronie wywołana przesunięciem kursora - To zadanie powinno być wykonane po stronie klienta. Kursor użytkownika jest obsługiwany po stronie przeglądarki, dlatego zmiana stylu HTML w zależności od położenia kursora powinna być zaimplementowana przy użyciu języka programowania po stronie klienta, takiego jak JavaScript.
    B. Zapisanie danych pobranych z aplikacji internetowej w bazie danych // Zapisanie danych pobranych z aplikacji internetowej w bazie danych - To zadanie powinno być wykonane po stronie serwera. Dane pobrane z aplikacji internetowej, takie jak formularze wypełniane przez użytkownika, powinny być przetwarzane i zapisywane w bazie danych po stronie serwera, gdzie są przechowywane i dostępne dla dalszego wykorzystania.
    C. Sprawdzenie danych wpisanych do pola tekstowego w czasie rzeczywistym // Sprawdzenie danych wpisanych do pola tekstowego w czasie rzeczywistym - To zadanie można zaimplementować po stronie klienta lub serwera, w zależności od wymagań i złożoności operacji. Jeśli sprawdzenie danych wpisanych do pola tekstowego jest proste i nie wymaga dostępu do zasobów serwera, można je wykonać po stronie klienta za pomocą JavaScript. Jeśli jednak operacja jest bardziej zaawansowana lub wymaga korzystania z danych z serwera, najlepiej zrobić to po stronie serwera.
    D. Ukrywanie i pokazywanie elementów strony w zależności od aktualnego stanu kursora // Ukrywanie i pokazywanie elementów strony w zależności od aktualnego stanu kursora - To zadanie powinno być wykonane po stronie klienta. Zmiana widoczności elementów strony w zależności od stanu kursora, takiego jak najechanie na dany element, powinna być obsługiwana po stronie przeglądarki za pomocą JavaScript. Elementy mogą być ukrywane lub pokazywane w odpowiedzi na określone działania użytkownika.
    
    483. Język JavaScrypt ma obsługę
    A. obiektów DOM // Obsługa obiektów DOM w języku JavaScript pozwala na manipulację strukturą i zawartością stron internetowych. Obiekty DOM (Document Object Model) reprezentują elementy strony, takie jak nagłówki, paragrafy czy przyciski, i umożliwiają dostęp do ich właściwości i metod. Dzięki temu można zmieniać treść, styl czy zachowanie elementów strony w trakcie interakcji użytkownika.
    B. funkcji wirtualnych // W języku JavaScript nie ma funkcji wirtualnych tak jak w językach obiektowych, np. C++. Funkcje wirtualne umożliwiają dynamiczne wiązanie, czyli decydowanie w trakcie działania programu, jaką konkretną implementację funkcji należy wywołać. W JavaScript można jednak używać funkcji, które można przypisać do zmiennych i przekazywać jako argumenty, co daje podobny efekt.
    C. klas abstrakcyjnych // Klasy abstrakcyjne to specjalne rodzaje klas, które nie mogą być bezpośrednio instancjonowane, ale zawierają metody (funkcje) oraz deklaracje właściwości, które mogą zostać zaimplementowane w klasach dziedziczących. W języku JavaScript nie ma natywnego mechanizmu do tworzenia klas abstrakcyjnych, ale można je symulować poprzez użycie odpowiednich konstrukcji kodu.
    D. wysyłania ciastek z tą samą informacją do wielu klientów strony // Wysyłanie ciastek (cookies) z tą samą informacją do wielu klientów strony polega na ustawieniu ciastka o tej samej wartości dla każdego klienta, który odwiedzi stronę. Ciastka to pliki przechowywane na komputerach użytkowników, które zawierają dane, takie jak preferencje użytkownika czy informacje o sesji. Ustawienie ciastka z tą samą informacją dla wielu klientów strony pozwala na np. śledzenie liczby unikalnych odwiedzin strony przez różnych użytkowników.
    
    484. W prezentowanym kodzie PHP w miejscu kropek powinno znaleźć się polecenie // pytanie posiada zdjecie D:

    485. Który z elementów dokumentacji aplikacji powinien znaleźć się w dokumentacji użytkownika?
    A. Opis kodu źródłowego // Opis kodu źródłowego powinien znaleźć się w dokumentacji programisty, a nie w dokumentacji użytkownika. Jest to szczegółowa dokumentacja dla deweloperów, która opisuje strukturę i działanie kodu aplikacji.
    B. Opis obsługi funkcji systemu // Opis obsługi funkcji systemu jest jednym z elementów dokumentacji użytkownika. Powinien zawierać informacje dotyczące sposobu korzystania z różnych funkcji aplikacji oraz instrukcje obsługi.
    C. Opis wykorzystanej technologii i bibliotek // Opis wykorzystanej technologii i bibliotek nie powinien znaleźć się w dokumentacji użytkownika. Jest to informacja dla deweloperów, którzy chcą zgłębić tajniki implementacji technologicznej aplikacji.
    D. Opis algorytmów zastosowanych w kodzie // Opis algorytmów zastosowanych w kodzie również nie powinien znaleźć się w dokumentacji użytkownika. Jest to bardziej zaawansowany temat, który interesuje bardziej programistów niż użytkowników końcowych.
    
    486. Znacznik <s> w języku HTML powoduje
    A. migotanie tekstu // Znacznik <s> w języku HTML nie powoduje migotania tekstu.
    B. pochylenie tekstu // Znacznik <s> w języku HTML nie powoduje pochylenia tekstu.
    C. podkreślenie tekstu // Znacznik <s> w języku HTML nie powoduje podkreślenia tekstu.
    D. przekreślenie tekstu // Znacznik <s> w języku HTML powoduje przekreślenie tekstu.
    
    487. Metainformacja "Description" zawarta w pliku źródłowym HTML powinna zawierać // pytanie posiada zdjecie D:

    488. Który opis odnosi się do metody POST wysyłania formularza?
    A. Może być zapisana jako zakładka w przeglądarce internetowej // Metoda POST wysyłania formularza może być zapisana jako zakładka w przeglądarce internetowej. Oznacza to, że użytkownik może zapisać formularz na stałe w przeglądarce i wypełniać go wielokrotnie bez konieczności ponownego wpisywania danych.
    B. Dane przesyłane są za pomocą adresu URL, czyli w sposób widoczny dla użytkownika // Dane przesyłane za pomocą metody POST są niewidoczne dla użytkownika, ponieważ nie są zawarte w adresie URL. Dzięki temu metoda POST jest bardziej bezpieczna do przesyłania danych poufnych, takich jak hasło, numer telefonu czy numer karty kredytowej.
    C. Posiada dodatkowe ograniczenia jakim jest długość adresu - maksymalnie 255 znaków // Metoda POST nie posiada ograniczenia dotyczącego długości adresu. Może przesyłać dane formularza o dowolnej długości, niezależnie od maksymalnej długości adresu (która wynosi zazwyczaj 255 znaków w przypadku URL).
    D. Jest wskazana, gdy przesyłane są informacje poufne, np. hasło, numer telefonu czy numer karty kredytowej // Metoda POST jest szczególnie wskazana, gdy przesyłane są informacje poufne, takie jak hasło, numer telefonu czy numer karty kredytowej. Dane przesyłane za pomocą metody POST są bardziej bezpieczne, ponieważ nie są widoczne w adresie URL i trudniej je przechwycić przez osoby trzecie.
    
    489. Atrybut value w polu formularza XHTML // pytanie posiada zdjecie D:

    490. W języku HTML zapis < spowoduje wyświetlenie w przeglądarce znaku
    A. > // Odpowiedź A - '>' - oznacza zamknięcie znacznika w języku HTML. Jest to jeden z podstawowych znaków używanych do budowy struktury dokumentu HTML.
    B. & // Odpowiedź B - '&' - to specjalny znak w HTML, który jest używany do rozpoznawania i wyświetlania specjalnych znaków lub znaczników. Na przykład '&lt;' jest używany do wyświetlania znaku '<'.
    C. " // Odpowiedź C - '"' - jest używany w HTML do oznaczania początku i końca ciągu znakowego, tzw. stringa. Jest to jeden ze sposobów zapisu tekstu w HTML.
    D. < // Odpowiedź D - '<' - jest znakiem otwierającym znacznik w języku HTML. Jest to jeden z podstawowych znaków używanych do budowy struktury dokumentu HTML.
    
    491. Przy użyciu jakiego znacznika HTML otrzymamy tekst napisany czcionką o stałej szerokości znaku, który uwzględnia dodatkowe spacje, tabulacje i znaki końca linii?
    A. <ins> ... </ins> // Znacznik HTML <ins> służy do oznaczania wstawionego tekstu. Powoduje podkreślenie tekstu.
    B. <pre> ... </pre> // Znacznik HTML <pre> służy do formatowania tekstu w sposób zachowujący stałą szerokość znaku. Dodatkowo uwzględnia spacje, tabulacje i znaki końca linii.
    C. <code> ... </code> // Znacznik HTML <code> służy do oznaczania fragmentu kodu lub innego wyróżnionego tekstu. Często wyświetlany jest w innej czcionce i wyróżniony wizualnie na stronie.
    D. <blockquote> ... </blockquote> // Znacznik HTML <blockquote> służy do oznaczania dłuższych cytatów. Powoduje wcięcie i wyróżnienie tekstu.
    
    492. W celu uzyskania efektu widocznego na rysunku, w kodzie HTML, należy umieścić znacznik skrótu z atrybutem // pytanie posiada zdjecie D:

    493. W HTML, aby wstawić obrazek z tekstem przyległym, znajdującym się pośrodku obrazka, należy zapisać znacznik
    A. <img src="/obrazek.png" alt="obraz1" hspace="30px"> tekst // Odpowiedź A: <img src="/obrazek.png" alt="obraz1" hspace="30px"> tekst. Ten znacznik używany w HTML umożliwia wstawienie obrazka z tekstem przyległym z lewej strony obrazka. Wartość hspace="30px" oznacza, że zostanie dodane odstępu o szerokości 30 pikseli między tekstem a obrazkiem.
    B. <img src="/obrazek.png" alt="obraz2" align="middle"> tekst // Odpowiedź B: <img src="/obrazek.png" alt="obraz2" align="middle"> tekst. Ten znacznik używany w HTML pozwala wstawić obrazek z tekstem przyległym pośrodku obrazka. Wartość align="middle" oznacza, że obrazek i tekst zostaną wyśrodkowane w linii.
    C. <img src="/obrazek.png" alt="obraz3" height="50%"> tekst // Odpowiedź C: <img src="/obrazek.png" alt="obraz3" height="50%"> tekst. Ten znacznik HTML umożliwia wstawienie obrazka z tekstem przyległym, gdzie obrazek będzie miał wysokość równą 50% wysokości tekstu. Dzięki temu obrazek dostosowuje się do wielkości tekstu.
    D. <img src="/obrazek.png" alt="obraz4"> tekst // Odpowiedź D: <img src="/obrazek.png" alt="obraz4"> tekst. Ten znacznik HTML umożliwia wstawienie obrazka z tekstem przyległym po lewej stronie obrazka. Nie ma żadnych dodatkowych atrybutów, więc obrazek i tekst są domyślnie ułożone obok siebie.
    
    494. Który styl CSS pozwoli zdefiniować wyrównanie tekstu do prawej strony?
    A. <p style="font: right">tekst</p> // Styl CSS w punkcie A nie jest poprawny. Nie istnieje takie właściwość jak 'font: right'. Aby zdefiniować wyrównanie tekstu do prawej strony, należy użyć właściwości 'text-align' i przypisać jej wartość 'right'.
    B. <p style="align: right">tekst</p> // Styl CSS w punkcie B jest prawidłowy. Właściwość 'align' odpowiada za wyrównanie tekstu, jednak prawidłowym zapisem jest 'text-align'. Wartość 'right' wskazuje, że tekst będzie wyrównany do prawej strony.
    C. <p style="position: right">tekst</p> // Styl CSS w punkcie C nie jest poprawny. Nie istnieje takie właściwość jak 'position: right'. Właściwość 'position' służy do określenia pozycji elementu na stronie, a nie wyrównania tekstu.
    D. <p style="text-align: right">tekst</p> // Styl CSS w punkcie D jest prawidłowy. Właściwość 'text-align' pozwala zdefiniować wyrównanie tekstu, a wartość 'right' oznacza wyrównanie do prawej strony. Prawidłowo sformatowany kod CSS dla wyrównania tekstu do prawej strony wyglądałby tak: 'text-align: right'.
    
    495. Przedstawiono kod tabeli 3x2. Której z modyfikacji w jej drugim wierszu należy dokonać, aby tabela wyglądała jak na obrazku z niewidocznym wierszem? // pytanie posiada zdjecie D:

    496. Który zapis znacznika <div> może wystąpić w dokumencie HTML tylko jeden raz, a ponowne użycie tego zapisu spowoduje wygenerowanie błędów podczas walidacji dokumentu?
    A. <div class="klasa1 klasa2"> // Zapis znacznika <div> z atrybutem class może wystąpić wiele razy w dokumencie HTML. Atrybut class pozwala na przypisanie jednocześnie kilku klas, oddzielając je spacją. Dzięki temu możemy używać tej samej klasy do wielu elementów dokumentu.
    B. <div id="identyfikator"> // Zapis znacznika <div> z atrybutem id może wystąpić tylko jeden raz w dokumencie HTML. Atrybut id jest unikalnym identyfikatorem, który powinien być używany tylko raz dla jednego elementu. Pozwala to na precyzyjne odwołanie się do tego elementu w CSS lub JavaScript.
    C. <div class="klasa"> // Zapis znacznika <div> z atrybutem class może wystąpić wiele razy w dokumencie HTML. Atrybut class pozwala na przypisanie jednej klasy do jednego elementu. Jest to przydatne, gdy chcemy stylować lub manipulować poszczególnymi elementami niezależnie od siebie.
    D. <div> // Zapis znacznika <div> bez atrybutów może wystąpić wiele razy w dokumencie HTML. Jest to najprostszy zapis, który nie wprowadza żadnych specjalnych cech dla tego elementu. Może być używany do tworzenia kontenerów lub grupowania innych elementów.
    
    497. Przedstawiona linia kreskowana w stylu obramowania CSS jest określona właściwością // pytanie posiada zdjecie D:

    498. Systemem zarządzania treścią pozwalającym na łatwe utworzenie i aktualizację serwisu WWW jest
    A. CMS // CMS to system zarządzania treścią, który umożliwia łatwe tworzenie i aktualizację serwisu internetowego. Dzięki CMS-owi, użytkownicy bez wcześniejszej wiedzy programistycznej mogą łatwo dodawać, edytować i usuwać treści, takie jak teksty, zdjęcia, filmy i inne elementy. CMS jest intuicyjny i posiada interfejs, który umożliwia łatwe poruszanie się po różnych sekcjach serwisu oraz edycję treści w czasie rzeczywistym.
    B. SQL // SQL to język programowania stosowany w bazach danych. SQL umożliwia zarządzanie danymi w bazach, jak również tworzenie, modyfikację i usuwanie tabel oraz zapytania do bazy danych. Dzięki SQL, użytkownicy mogą składać złożone zapytania, filtrować, sortować i łączyć dane w celu uzyskania potrzebnych informacji.
    C. PHP // PHP jest językiem programowania, który jest często używany do tworzenia dynamicznych stron internetowych. PHP działa po stronie serwera i umożliwia generowanie zawartości stron na podstawie danych przesłanych przez użytkowników. PHP jest bardzo elastyczny i posiada wiele wbudowanych funkcji, co czyni go popularnym wyborem dla programistów tworzących interaktywne strony internetowe.
    D. CSS // CSS to język stylów używany do formatowania i układania elementów na stronie internetowej. CSS oddziela prezentację od struktury strony, umożliwiając programistom tworzenie atrakcyjnych i czytelnych stron. Za pomocą CSS można definiować kolory, czcionki, marginesy, tła i wiele innych cech, które nadają stronie unikalny wygląd.
    
    499. W podanym kodzie HTML przedstawiony styl CSS jest stylem // pytanie posiada zdjecie D:

    500. Kolor zapisany w notacji heksadecymalnej #0000FF to
    A. czarny // Odpowiedź A oznacza, że kolor jest czarny. W notacji heksadecymalnej, #000000 reprezentuje kolor czarny, ponieważ wszystkie trzy składowe - czerwona, zielona i niebieska - mają wartość zero.
    B. zielony // Odpowiedź B oznacza, że kolor jest zielony. Jednak w notacji heksadecymalnej, #0000FF reprezentuje kolor niebieski. Dwie ostatnie cyfry FF oznaczają maksymalną wartość niebieskiej składowej, co daje nam intensywnie niebieski kolor.
    C. niebieski // Odpowiedź C oznacza, że kolor jest niebieski. Poprawna odpowiedź! W notacji heksadecymalnej, #0000FF reprezentuje kolor niebieski. Ostatnie dwie cyfry FF oznaczają maksymalną wartość niebieskiej składowej, a pozostałe dwie cyfry mają wartość zero.
    D. czerwony // Odpowiedź D oznacza, że kolor jest czerwony. Jednak w notacji heksadecymalnej, #0000FF reprezentuje kolor niebieski. Czerwony kolor zostałby oznaczony jako #FF0000, gdzie dwie pierwsze cyfry FF reprezentują maksymalną wartość czerwonej składowej, a pozostałe dwie cyfry mają wartość zero.
    
    501. Które stwierdzenie odnosi się do skalowania obrazu?
    A. Łączy lub odejmuje kształty // Odpowiedź A polega na łączeniu lub odejmowaniu kształtów. Skalowanie obrazu nie ma na to wpływu.
    B. Polega na zmianie sposobu zapisu obrazu tak, aby zmienić sposób kompresji // Odpowiedź B dotyczy zmiany sposobu zapisu obrazu w celu zmiany kompresji. To nie jest działanie skalowania obrazu.
    C. Powoduje zmianę rozmiaru obrazu bez zmieniania ważnej zawartości wizualnej // Odpowiedź C jest poprawna. Skalowanie obrazu powoduje zmianę rozmiaru obrazu bez wpływu na ważną zawartość wizualną.
    D. Powoduje wycięcie z oryginalnego obrazu określonego jego fragmentu z celu uzyskania optymalnego widoku // Odpowiedź D dotyczy wycinania określonego fragmentu obrazu, co nie jest związane ze skalowaniem.
    
    502. W języku HTML atrybutem znacznika video, który włącza tryb odtwarzania w kółko, jest
    A. loop // Atrybut loop w znaczniku video w języku HTML odpowiada za uruchomienie trybu odtwarzania w kółko. Dzięki temu atrybutowi, gdy wideo dojdzie do końca, zostanie automatycznie odtworzone od początku. Jest to przydatne w przypadku, gdy chcemy, aby dany fragment wideo był odtwarzany w nieskończoność.
    B. muted // Atrybut muted w znaczniku video w języku HTML odpowiada za wyciszenie dźwięku wideo. Dzięki temu atrybutowi, dźwięk przypisany do wideo nie będzie odtwarzany. Jest to przydatne w przypadku, gdy chcemy mieć same wizualne efekty wideo bez towarzyszącego dźwięku.
    C. poster // Atrybut poster w znaczniku video w języku HTML odpowiada za wyświetlanie miniaturki wideo przed jego rozpoczęciem odtwarzania. Dzięki temu atrybutowi, możemy ustawić określony obraz jako miniaturkę wideo, aby zachęcić użytkowników do kliknięcia i rozpoczęcia odtwarzania.
    D. controls // Atrybut controls w znaczniku video w języku HTML odpowiada za wyświetlanie panelu kontrolnego dla odtwarzacza wideo. Dzięki temu atrybutowi, użytkownicy mogą kontrolować odtwarzanie wideo, np. zatrzymywać, odtwarzać, przewijać w przód lub do tyłu. Panel kontrolny jest wyświetlany pod wideo i umożliwia interakcję z odtwarzaczem.
    
    503. W języku HTML, aby dodać animację FLASH (z rozszerzeniem .swf) na stronę internetową, należy użyć znacznika
    A. < img > // Znacznik <img> jest używany do wstawienia statycznego obrazka na stronę internetową. Nie obsługuje animacji FLASH (z rozszerzeniem .swf).
    B. < audio > // Znacznik <audio> jest używany do dodawania dźwięku na stronę internetową. Nie obsługuje animacji FLASH (z rozszerzeniem .swf).
    C. < video > // Znacznik <video> jest używany do odtwarzania wideo na stronie internetowej. Nie obsługuje animacji FLASH (z rozszerzeniem .swf).
    D. < object > // Znacznik <object> jest używany do osadzania różnych mediów, takich jak obrazy, dźwięki i animacje FLASH (z rozszerzeniem .swf) na stronie internetowej.
    
    504. Formatem plików dźwiękowych z kompresją bezstratną jest
    A. MP3 // MP3 to format plików dźwiękowych z kompresją stratną. Jest powszechnie używany do kompresji dźwięku, co pozwala na zmniejszenie rozmiaru pliku. Jakość dźwięku w formacie MP3 może być nieco niższa niż w plikach bezstratnych.
    B. WAW // WAV to format plików dźwiękowych bez kompresji. Jest to jedno z najpopularniejszych formatów, który zapewnia wysoką jakość dźwięku. Pliki WAV są jednak zazwyczaj większe niż pliki skompresowane.
    C. FLAC // FLAC to format plików dźwiękowych z kompresją bezstratną. Oznacza to, że pliki w formacie FLAC są skompresowane, ale bez utraty jakości dźwięku. Dzięki temu można osiągnąć mniejszy rozmiar pliku bez tracenia szczegółów dźwięku.
    D. MPEG // MPEG to rodzina formatów plików multimedialnych. W przypadku dźwięku, format MPEG jest zazwyczaj używany do kompresji audio. Jednakże, MPEG jako format nie jest bezstratny, więc nie jest to format bezstratny.
    
    505. Na tabeli muzyka, przedstawionej na rysunku, zostało wykonane następujące zapytanie SQL. Jaki wynik zwróci ta kwerenda? // pytanie posiada zdjecie D:

    506. Jaki wynik zwróci zapytanie z ramki wykonane na przedstawionej tabeli? // pytanie posiada zdjecie D:

    507. W relacyjnym modelu baz danych krotkami nazywa się
    A. liczbę rekordów tabeli // Liczba rekordów tabeli.
    B. wszystkie wiersze tabeli wraz z wierszem nagłówkowym // Wszystkie wiersze tabeli wraz z wierszem nagłówkowym.
    C. wszystkie kolumny tabeli, które zawierają atrybuty obiektu // Wszystkie kolumny tabeli, które zawierają atrybuty obiektu.
    D. wiersze tabeli z wyjątkiem wiersza nagłówkowego, w którym umieszcza się nazwy kolumn // Wiersze tabeli z wyjątkiem wiersza nagłówkowego, w którym umieszcza się nazwy kolumn.
    
    508. Co można powiedzieć o normalizacji przedstawionej tabeli? // pytanie posiada zdjecie D:

    509. Które zapytanie SQL dla tabeli pracownicy utworzonej według schematu: id, imie, nazwisko, plec, zarobek, obliczy osobno średni zarobek kobiet i średni zarobek mężczyzn?
    A. SELECT AVG(zarobek) FROM pracownicy GROUP BY plec; // Zapytanie A. SELECT AVG(zarobek) FROM pracownicy GROUP BY plec; oblicza osobno średni zarobek kobiet i średni zarobek mężczyzn. Wykorzystuje funkcję AVG() do obliczenia średniej zarobków dla każdej płci z osobna. Wykorzystuje również GROUP BY plec, aby grupować wyniki według płci.
    B. SELECT AVG(zarobek) FROM pracownicy AS sredni_zarobek; // Zapytanie B. SELECT AVG(zarobek) FROM pracownicy AS sredni_zarobek; jest niepoprawne. Nie ma warunków ani operacji grupujących, dlatego nie oblicza średniego zarobku kobiet i mężczyzn osobno. Alias sredni_zarobek jest niepotrzebny w tym zapytaniu.
    C. SELECT AVG(zarobek) FROM pracownicy WHERE plec='k' AND plec='m'; // Zapytanie C. SELECT AVG(zarobek) FROM pracownicy WHERE plec='k' AND plec='m'; jest niepoprawne. Warunek plec='k' AND plec='m' jest sprzeczny, ponieważ jedno pole nie może jednocześnie mieć dwóch wartości.
    D. SELECT AVG(zarobek) FROM pracownicy GROUP BY plec HAVING plec='k' AND plec='m'; // Zapytanie D. SELECT AVG(zarobek) FROM pracownicy GROUP BY plec HAVING plec='k' AND plec='m'; jest niepoprawne. Warunek HAVING plec='k' AND plec='m' jest również sprzeczny. Dodatkowo brakuje operatora porównania pomiędzy wartościami plec a 'k' i 'm'.
    
    510. Które polecenie SQL zamieni w tabeli tab w kolumnie kol wartość Ania na Zosia?
    A. UPDATE tab SET kol='Zosia' WHERE kol='Ania'; // Polecenie SQL UPDATE służy do aktualizacji danych w tabeli. W tym przypadku, polecenie 'UPDATE tab SET kol='Zosia' WHERE kol='Ania';' zmienia wartość w kolumnie 'kol' na 'Zosia' tylko w przypadku, gdy aktualna wartość w tej kolumnie to 'Ania'. Oznacza to, że jeśli w kolumnie 'kol' istnieje rekord o wartości 'Ania', zostanie zaktualizowany na 'Zosia'.
    B. UPDATE tab SET kol='Ania' WHERE kol='Zosia'; // To jest błędna odpowiedź. Polecenie 'UPDATE tab SET kol='Ania' WHERE kol='Zosia';' próbuje zmienić wartość w kolumnie 'kol' na 'Ania', o ile aktualna wartość w tej kolumnie to 'Zosia'. Jednak w pytaniu mówi się, że chcemy zamienić 'Ania' na 'Zosia', więc odpowiedź B jest niepoprawna.
    C. ALTER TABLE tab CHANGE kol='Zosia' kol='Ania'; // To jest błędna odpowiedź. Polecenie 'ALTER TABLE tab CHANGE kol='Zosia' kol='Ania';' jest używane do zmiany nazwy kolumny w tabeli, a nie zmiany wartości w danej kolumnie. W tym przypadku chcielibyśmy zmienić wartość, więc odpowiedź C jest niepoprawna.
    D. ALTER TABLE tab CHANGE kol='Ania' kol='Zosia'; // To jest błędna odpowiedź. Polecenie 'ALTER TABLE tab CHANGE kol='Ania' kol='Zosia';' jest podobne do odpowiedzi C i służy do zmiany nazwy kolumny, a nie zmiany wartości w danych kolumny. Dlatego odpowiedź D jest niepoprawna.
    
    511. Aby w tworzonej w języku SQL tabeli praca dodać w kolumnie stawka warunek, że musi przyjmować rzeczywiste wartości dodatnie mniejsze od 50, należy użyć zapisu
    A. ... stawka float CHECK(stawka IN (0, 50.00)) // W punkcie A należy użyć zapisu 'stawka float CHECK(stawka IN (0, 50.00))'. Ten warunek sprawdza, czy wartość w kolumnie 'stawka' jest równa zero lub 50.00.
    B. ... stawka float CHECK(stawka>0 OR stawka<50.00) // W punkcie B należy użyć zapisu 'stawka float CHECK(stawka>0 OR stawka<50.00)'. Ten warunek sprawdza, czy wartość w kolumnie 'stawka' jest większa od zera lub mniejsza od 50.00.
    C. ... stawka float CHECK(stawka>0 AND stawka<50.00) // W punkcie C należy użyć zapisu 'stawka float CHECK(stawka>0 AND stawka<50.00)'. Ten warunek sprawdza, czy wartość w kolumnie 'stawka' jest większa od zera i jednocześnie mniejsza od 50.00.
    D. ... stawka float CHECK(stawka BETWEEN 0 AND 50.00) // W punkcie D należy użyć zapisu 'stawka float CHECK(stawka BETWEEN 0 AND 50.00)'. Ten warunek sprawdza, czy wartość w kolumnie 'stawka' znajduje się pomiędzy 0 a 50.00 (włącznie).
    
    512. W jaki sposób wykonanie podanej w ramce kwerendy SQL wpłynie na tabelę pracownicy? // pytanie posiada zdjecie D:

    513. Wykonując raport w systemie obsługi relacyjnych baz danych, umożliwia się
    A. analizę wybranych danych // Raport w systemie obsługi relacyjnych baz danych umożliwia analizę wybranych danych. Oznacza to, że możemy przeglądać i badac konkretne dane z bazy w celu zrozumienia ich charakterystyk, związków i trendów.
    B. usuwanie danych w tabelach // Usuwanie danych w tabelach to proces, w którym możemy usunąć konkretne dane z bazy danych. Może to być przydatne, gdy chcemy usunąć niepotrzebne, błędne lub przestarzałe informacje.
    C. dodawanie danych w tabelach // Dodawanie danych w tabelach polega na wprowadzaniu nowych informacji do bazy danych. Możemy w ten sposób zaktualizować nasze dane o nowe zdarzenia, obiekty lub informacje, które są dla nas istotne.
    D. aktualizowanie danych w tabelach // Aktualizowanie danych w tabelach jest procesem modyfikacji istniejących informacji w bazie danych. Dzięki temu możemy poprawić, zmienić lub zaktualizować dane na podstawie nowych informacji, które mamy.
    
    514. Przedstawiona instrukcja JavaScript wyświetli // pytanie posiada zdjecie D:

    515. Która wartość tekstowa nie pasuje do podanego w ramce wzorca wyrażenia regularnego? // pytanie posiada zdjecie D:

    516. Który modyfikator wskazuje podany opis? // pytanie posiada zdjecie D:

    517. Tworzenie i przypisanie do zmiennej tablicy asocjacyjnej zrealizuje się w PHP zapisem
    A. $tab = array (1, 2, 3, 4); // Tworzenie i przypisanie do zmiennej tablicy asocjacyjnej w PHP odbywa się za pomocą zapisu $tab = array ("a" => 1, "b" => 2, "c" => 3). W ten sposób możemy tworzyć tablicę, w której kluczami są np. litery, a wartościami są liczby.
    B. $tab = array (array (1, 2), array (3, 4)); // Ten zapis tworzy tablicę wielowymiarową, czyli tablicę, która zawiera w sobie inne tablice. W tym przypadku stworzona zostanie tablica zawierająca dwie podtablice: array (1, 2) oraz array (3, 4).
    C. $tab = array (); $tab[] = array (1, 2, 3, 4); // Ten zapis tworzy pustą tablicę, a następnie dodaje do niej kolejne podtablice. W przypisanym przykładzie zostaną stworzone cztery podtablice: array (1, 2, 3, 4).
    D. $tab = array ("a" => 1, "b" => 2, "c" => 3); // Ten zapis tworzy tablicę asocjacyjną, czyli tablicę, w której klucze są tekstowe. W przykładzie przypisane są klucze "a", "b" i "c" z odpowiednimi wartościami 1, 2 i 3.
    
    518. W której technologii nie jest możliwe przetwarzanie danych użytkownika wprowadzanych na stronie WWW?
    A. CSS // CSS jest technologią odpowiedzialną za stylizację i wygląd strony internetowej. Nie jest jednak odpowiedzialna za przetwarzanie danych wprowadzanych przez użytkownika. CSS służy do kontrolowania układu, kolorów, czcionek i innych elementów wizualnych na stronie.
    B. PHP // PHP jest językiem programowania, który umożliwia przetwarzanie danych użytkownika na stronie internetowej. Dzięki PHP można tworzyć interaktywne formularze, przetwarzać dane, przechowywać je w bazach danych i wiele więcej. Jest to popularna technologia do tworzenia dynamicznych stron internetowych.
    C. AJAX // AJAX to technologia, która umożliwia wysyłanie i odbieranie danych między przeglądarką a serwerem bez odświeżania strony. Dzięki temu można tworzyć interaktywne aplikacje, które komunikują się z serwerem asynchronicznie. AJAX jest szeroko stosowany w interfejsach użytkownika webowych.
    D. JavaScript // JavaScript to język programowania, który umożliwia tworzenie interaktywnych elementów na stronie internetowej. Za pomocą JavaScriptu można manipulować treścią strony, reagować na akcje użytkownika, walidować dane wprowadzane przez użytkownika i wiele więcej. Jest to niezbędna technologia do tworzenia interaktywnych stron internetowych.
    
    519. W programowaniu obiektowym w języku JavaScript użyty w przedstawionym kodzie zapis: this.zawod oznacza // pytanie posiada zdjecie D:

    520. W języku PHP sumę logiczną oznacza operator
    A. ! // Operator ! służy do negacji logicznej. Oznacza, że jeśli wyrażenie jest prawdziwe, to neguje go na fałsz, a jeśli jest fałszywe, to neguje go na prawdę.
    B. || // Operator || służy do sumy logicznej. Oznacza, że jeśli przynajmniej jedno z wyrażeń jest prawdziwe, to całe wyrażenie jest prawdziwe. Jeśli wszystkie wyrażenia są fałszywe, to całe wyrażenie jest fałszywe.
    C. + // Operator + służy do dodawania wartości numerycznych.
    D. && // Operator && służy do iloczynu logicznego. Oznacza, że jeśli oba wyrażenia są prawdziwe, to całe wyrażenie jest prawdziwe. Jeśli przynajmniej jedno z wyrażeń jest fałszywe, to całe wyrażenie jest fałszywe.
    
    521. W jakim formacie będzie wyświetlana data po uruchomieniu przedstawionego kodu? // pytanie posiada zdjecie D:

    522. Wynikiem działania pętli for w przedstawionym kodzie PHP jest wyświetlenie liczb // pytanie posiada zdjecie D:

    523. W JavaScript wywołanie zdarzenia onKeydown nastąpi wtedy, gdy klawisz
    A. myszki został naciśnięty // Wywołanie zdarzenia onKeydown w JavaScript nastąpi, gdy klawisz myszki zostanie naciśnięty. Oznacza to, że gdy użytkownik kliknie lewy przycisk myszy, zostanie uruchomiona odpowiednia funkcja, która została przypisana do tego zdarzenia.
    B. myszki został zwolniony // Wywołanie zdarzenia onKeydown w JavaScript nie wystąpi w momencie zwolnienia przycisku myszki. Zdarzenie to jest wywoływane wyłącznie w momencie naciśnięcia klawisza myszy.
    C. klawiatury został naciśnięty // Wywołanie zdarzenia onKeydown w JavaScript nastąpi wtedy, gdy klawiatura zostanie naciśnięta. Oznacza to, że gdy użytkownik naciśnie dowolny klawisz na klawiaturze, zostanie uruchomiona odpowiednia funkcja, która została przypisana do tego zdarzenia.
    D. klawiatury został zwolniony // Wywołanie zdarzenia onKeydown w JavaScript nie wystąpi w momencie zwolnienia klawisza na klawiaturze. Zdarzenie to jest wywoływane wyłącznie w momencie naciśnięcia klawisza.
    
    524. Po wykonaniu przedstawionego kodu JavaScript wyświetli się wartość // pytanie posiada zdjecie D:

    525. Wciśnięcie przycisku o treści "niebieski" spowoduje wykonanie przedstawionego kodu JavaScript. Jaki będzie efekt jego działania? // pytanie posiada zdjecie D:

    526. Którego znacznika nie należy umieszczać w nagłówku dokumentu HTML?
    A. <h2> // Znacznik <h2> jest używany do oznaczenia nagłówka drugiego poziomu w dokumencie HTML. Jest to jeden z kilku dostępnych rozmiarów nagłówków, gdzie <h1> jest największy, a <h6> najmniejszy.
    B. <link> // Znacznik <link> jest używany do łączenia zewnętrznych plików ze stroną internetową. Służy głównie do dołączania arkuszy stylów CSS, ale może również być używany do dołączania innych plików, takich jak ikony favicon czy pliki skryptowe JavaScript.
    C. <title> // Znacznik <title> jest używany do określenia tytułu dokumentu HTML. Jest to tekst, który wyświetla się na karcie przeglądarki lub w wynikach wyszukiwania. Tytuł strony jest również wykorzystywany przez wyszukiwarki internetowe do indeksowania i wyświetlania wyników wyszukiwania.
    D. <meta> // Znacznik <meta> służy do dodawania metadanych do dokumentu HTML. Metadane są informacjami o dokumencie, które nie są wyświetlane bezpośrednio na stronie, ale mogą być używane przez przeglądarki i wyszukiwarki. Przykładowe metadane to opis strony, słowa kluczowe, autor, kodowanie znaków itp. Znacznik <meta> jest również często wykorzystywany do określania metadanych wymaganych dla poprawnego wyświetlania strony (np. viewport dla responsywnego projektu).
    
    527. Znacznik języka HTML, który służy do oznaczenia fragmentu tekstu jako kodu komputerowego, to
    A. <em> </em> // Znacznik <em> służy do podkreślania fragmentu tekstu. Jest to jeden z podstawowych znaczników formatujących w HTML.
    B. <span> </span> // Znacznik <span> służy do grupowania i manipulacji części tekstu. Może być stosowany do zmiany koloru, czcionki lub stylu danego fragmentu.
    C. <code> </code> // Znacznik <code> służy do oznaczenia fragmentu tekstu jako kodu komputerowego. Wizualnie może być wyświetlany w monoszeryfowej czcionce.
    D. <blockquote> </blockquote> // Znacznik <blockquote> służy do oznaczenia długiego cytatu lub fragmentu tekstu, który jest oddzielony od reszty treści. Często stosowany w artykułach lub blogach.
    
    528. W języku HTML dla hiperłącza wartość atrybutu target, która odpowiada za załadowanie strony do nowego okna lub karty, to
    A. _parent // Atrybut target o wartości _parent powoduje przekierowanie strony do rodzica (czyli do ramki nadrzędnej, jeśli strona jest wyświetlana w ramkach).
    B. _blank // Atrybut target o wartości _blank powoduje otwarcie linku w nowym oknie lub karcie przeglądarki.
    C. _self // Atrybut target o wartości _self powoduje otwarcie linku w tej samej karcie lub oknie przeglądarki, w której znajduje się hiperłącze.
    D. _top // Atrybut target o wartości _top powoduje otwarcie linku na całej stronie, nadpisując wszystkie ramki, jeśli strona jest wyświetlana w ramkach.
    
    529. Znacznik <ins> w języku HTML służy do oznaczenia
    A. cytowanego bloku tekstu. // Znacznik <ins> w języku HTML służy do oznaczenia tekstu, który został dodany. Powoduje on, że tekst oznaczony tym znacznikiem jest wizualnie podkreślony na stronie.
    B. tekstu przeformatowanego. // Ten znacznik nie służy do formatowania tekstu, więc odpowiedź B jest nieprawidłowa.
    C. tekstu, który został dodany. // Odpowiedź C jest poprawna. Znacznik <ins> oznacza tekst, który został dodany. Może to być np. nowy akapit, nowy fragment tekstu lub nowa sekcja na stronie.
    D. tekstu, który został usunięty. // Odpowiedź D jest nieprawidłowa. Znacznik <ins> nie służy do oznaczania tekstu, który został usunięty.
    
    530. Do określenia listy definicji w kodzie HTML używa się znacznika
    A. <dl> // Znacznik <dl> służy do określenia listy definicji w kodzie HTML. Jest używany w połączeniu z <dt> (elementy definicji) i <dd> (opis definicji) w celu utworzenia hierarchicznej struktury listy definicji.
    B. <td> // Znacznik <td> służy do definiowania komórki w tabeli HTML. Jest używany w połączeniu z <tr> (wierszem tabeli) i <table> (tabelą) w celu określenia zawartości komórki.
    C. <abbr> // Znacznik <abbr> służy do określania skrótu lub skróconej wersji tekstu w kodzie HTML. Może być używany w celu zapewnienia dodatkowej informacji o skrócie, gdy użytkownik najedzie na niego myszką.
    D. <label> // Znacznik <label> służy do tworzenia etykiety dla elementu formularza w kodzie HTML. Ta etykieta pomaga użytkownikom zrozumieć, co powinno zostać wprowadzone w danym polu formularza oraz nawiązuje połączenie między etykietą a odpowiadającym jej elementem formularza.
    
    531. Jaki rezultat zostanie wyświetlony po wykonaniu przedstawionego kodu HTML? // pytanie posiada zdjecie D:

    532. W języku HTML, aby scalić w pionie dwie sąsiednie komórki w kolumnie tabeli, należy zastosować atrybut
    A. colspan // A. colspan - Ten atrybut w języku HTML służy do scalania dwóch lub więcej sąsiednich komórek w poziomie w jedną większą komórkę. Działa to poprzez określenie liczby komórek, które mają być scalone w atrybucie colspan.
    B. rowspan // B. rowspan - Ten atrybut w języku HTML służy do scalania dwóch lub więcej sąsiednich komórek w pionie w jedną większą komórkę. Działa to poprzez określenie liczby komórek, które mają być scalone w atrybucie rowspan.
    C. cellpadding // C. cellpadding - Ten atrybut w języku HTML określa odstęp między zawartością komórki a jej obramowaniem. Można ustawić wartość w pikselach lub procentach. Im większa wartość, tym większy odstęp.
    D. cellspacing // D. cellspacing - Ten atrybut w języku HTML określa odstęp między komórkami w tabeli. Można ustawić wartość w pikselach lub procentach. Im większa wartość, tym większy odstęp między komórkami.
    
    533. Chcąc dodać do listy rozwijalnej przedstawionego formularza HTML możliwość zaznaczenia kilku opcji jednocześnie, należy w znaczniku select dodać atrybut // pytanie posiada zdjecie D:

    534. Jak nazywa się metoda dołączania arkusza stylów do dokumentu HTML użyta w przedstawionym kodzie? // pytanie posiada zdjecie D:

    535. Tekst paragrafu, wyśrodkowany w pionie, opisuje w CSS reguła
    A. vertical-align: middle // Właściwość vertical-align: middle służy do wyśrodkowania tekstu w pionie. Powoduje, że tekst zostaje wyśrodkowany w stosunku do szerokości linii bazowej.
    B. vertical-align: center // Odpowiedź B. vertical-align: center jest niepoprawna. Ta właściwość nie istnieje w CSS.
    C. text-align: center // Właściwość text-align: center służy do wyśrodkowania tekstu w poziomie. Powoduje, że tekst jest wyśrodkowany w stosunku do szerokości bloku, w którym się znajduje.
    D. align: middle // Odpowiedź D. align: middle jest niepoprawna. Ta właściwość nie istnieje w CSS.
    
    536. Dla akapitu zdefiniowano styl CSS. Które właściwości stylu CSS poprawnie opisują dla akapitu krój czcionki: Arial; rozmiar czcionki: 16 pt; styl czcionki: pochylenie?
    A. p{font-style: Arial; size: 16px; font-weight: normal;} // Punkt A określa styl czcionki dla akapitu. W tym przypadku jest to czcionka Arial. Rozmiar czcionki jest wyrażony w pikselach i wynosi 16. Waga czcionki jest normalna.
    B. p{font-family: Arial; font-size: 16pt; font-style: italic;} // Punkt B definiuje styl czcionki dla akapitu. Czcionka Arial jest używana, a rozmiar czcionki wynosi 16 punktów. Styl czcionki jest ustawiony na pochylenie, co oznacza, że tekst zostanie wyświetlony pochylony.
    C. p{font-style: Arial; font-size: 16pt; font-variant: normal;} // Punkt C określa styl czcionki dla akapitu. Używana jest czcionka Arial, a rozmiar czcionki wynosi 16 punktów. Nie ma specyfikacji wariantu czcionki, dlatego jest ustawiony na normalny.
    D. p{font-family: Arial; font-size: 16px; font-variant: normal;} // Punkt D definiuje styl czcionki dla akapitu. Czcionka Arial jest używana, a rozmiar czcionki wynosi 16 pikseli. Nie ma specyfikacji wariantu czcionki, dlatego jest ustawiony na normalny.
    
    537. W stylach CSS, aby ustalić styl linii obramowania jako linię kreskową, należy zastosować wartość
    A. solid // Wartość 'solid' w stylach CSS oznacza, że obramowanie zostanie wyrenderowane jako jednolita, pełna linia. Nie zawiera żadnych przerw. Jest to domyślna wartość dla obramowania.
    B. dotted // Wartość 'dotted' w stylach CSS oznacza, że obramowanie zostanie wyrenderowane jako linia składająca się z małych kropek. Przerwy między kropkami są równe szerokości samej kropki.
    C. dashed // Wartość 'dashed' w stylach CSS oznacza, że obramowanie zostanie wyrenderowane jako linia składająca się z krótkich kreskowych segmentów. Przerwy między segmentami są równe szerokości samej kreski.
    D. groove // Wartość 'groove' w stylach CSS oznacza, że obramowanie zostanie wyrenderowane jako wklęsła linia, która nadaje efekt 3D. Może być stosowana również w połączeniu z gradientem lub cieniem.
    
    538. W CSS symbolem jednostki miary, wyrażonej w punktach edytorskich, jest
    A. em // W CSS jednostką miary wyrażoną w punktach edytorskich jest em. Em to jednostka, która dostosowuje się do rozmiaru czcionki elementu nadrzędnego.
    B. px // W CSS jednostką miary wyrażoną w punktach edytorskich jest px. Piksel to najmniejsza jednostka wyświetlania obrazu na ekranie.
    C. pt // W CSS symbolem jednostki miary, wyrażonej w punktach edytorskich, jest pt. Punkt to jednostka miary używana w druku, gdzie 1 punkt to 1/72 cala.
    D. in // W CSS symbolem jednostki miary, wyrażonej w punktach edytorskich, jest in. Cal to jednostka miary długości równa 2.54 centymetra.
    
    539. Transformację w stylach CSS, polegającą na zamianie tylko pierwszych liter wszystkich wyrazów na wielkie, otrzymamy stosując polecenie
    A. underline // Polecenie 'underline' w stylach CSS powoduje podkreślenie tekstu.
    B. capitalize // Polecenie 'capitalize' w stylach CSS powoduje zamianę tylko pierwszych liter wszystkich wyrazów na wielkie.
    C. uppercase // Polecenie 'uppercase' w stylach CSS powoduje zamianę całego tekstu na wielkie litery.
    D. lowercase // Polecenie 'lowercase' w stylach CSS powoduje zamianę całego tekstu na małe litery.
    
    540. Podany styl tworzy obramowanie pojedyncze, o następujących cechach: // pytanie posiada zdjecie D:

    541. Która z operacji nie wpłynie na rozmiar / wielkość zajmowanej pamięci pliku graficznego?
    A. Skalowanie obrazu za pomocą atrybutów HTML. // Skalowanie obrazu za pomocą atrybutów HTML nie wpłynie na rozmiar/wielkość zajmowanej pamięci pliku graficznego. To jest tylko zmiana wyglądu obrazu na stronie internetowej poprzez manipulację jego rozmiarem w kodzie HTML, ale nie zmienia faktycznego rozmiaru pliku ani ilości pamięci, którą zajmuje.
    B. Zmiana rozdzielczości obrazu. // Zmiana rozdzielczości obrazu wpłynie na rozmiar/wielkość zajmowanej pamięci pliku graficznego. Im wyższa rozdzielczość, tym większy rozmiar pliku. Zmniejszenie rozdzielczości może zmniejszyć rozmiar pliku, ale może również prowadzić do utraty jakości obrazu.
    C. Interpolacja. // Interpolacja wpłynie na rozmiar/wielkość zajmowanej pamięci pliku graficznego. Jest to proces dodawania nowych pikseli do obrazu w celu zwiększenia jego rozdzielczości. Ta dodatkowa informacja o pikselach zwiększa rozmiar pliku.
    D. Kompresja. // Kompresja wpłynie na rozmiar/wielkość zajmowanej pamięci pliku graficznego. Jest to proces redukcji rozmiaru pliku graficznego poprzez usuwanie niepotrzebnych lub zbędnych danych. Kompresja może być stratna, co oznacza utratę jakości obrazu, lub bezstratna, gdzie jakość obrazu zostaje zachowana, ale plik jest nadal mniejszy.
    
    542. Bitmapa jest obrazem
    A. rastrowym. // Bitmapa to obraz rastrowy, co oznacza, że jest złożony z małych kwadratowych pikseli. Każdy piksel ma przypisaną konkretną wartość koloru, co umożliwia tworzenie detali w obrazie. Rozdzielczość bitmapy determinuje liczbę pikseli na jednostkę długości lub powierzchni, co ma wpływ na jakość obrazu.
    B. analogowym. // Analogowy obraz to taki, który reprezentuje rzeczywiste wartości sygnału, na przykład odcienie kolorów w tradycyjnej fotografii. Analogowe obrazy nie są cyfrowo zapisane i nie można ich edytować w sposób nieliniowy.
    C. wektorowym. // Obraz wektorowy opiera się na matematycznych równaniach, które definiują kształty i linie. Zamiast pikseli, obraz wektorowy składa się z obiektów geometrycznych, takich jak linie i krzywe. Dzięki temu obrazy wektorowe można skalować bez utraty jakości.
    D. interakcyjnym. // Interaktywne obrazy to takie, które mogą reagować na działania użytkownika. Na przykład, w interaktywnej grze obrazy mogą zmieniać się w zależności od wyborów gracza. Interaktywne obrazy wymagają zwykle interaktywnych programów lub aplikacji do ich wyświetlania i manipulacji.
    
    543. Jednostka ppi (pixels per inch)
    A. określa rozdzielczość obrazów rastrowych. // Jednostka ppi (pixels per inch) określa rozdzielczość obrazów rastrowych.
    B. określa rozdzielczości obrazów generowanych przez drukarki i plotery. // Jednostka ppi (pixels per inch) nie określa rozdzielczości obrazów generowanych przez drukarki i plotery.
    C. jest parametrem określającym rozdzielczość cyfrowych urządzeń wykonujących pomiary. // Jednostka ppi (pixels per inch) nie jest parametrem określającym rozdzielczość cyfrowych urządzeń wykonujących pomiary.
    D. jest jednostką rozdzielczości skanerów określająca częstość wykonywanych próbkowań obrazu. // Jednostka ppi (pixels per inch) nie jest jednostką rozdzielczości skanerów określającą częstość wykonywanych próbkowań obrazu.
    
    544. Jaką funkcję pełni kwerenda krzyżowa w bazie MS Access?
    A. Modyfikuje istniejące dane w tabeli // Kwerenda krzyżowa w bazie MS Access modyfikuje istniejące dane w tabeli.
    B. Usuwa rekordy tabel według podanych kryteriów. // Kwerenda krzyżowa w bazie MS Access usuwa rekordy tabel według podanych kryteriów.
    C. Dołącza do wybranej tabeli rekordy z innej tabeli. // Kwerenda krzyżowa w bazie MS Access dołącza do wybranej tabeli rekordy z innej tabeli.
    D. Prezentuje zliczone wartości z pola i przyporządkowuje je w wiersze i kolumny. // Kwerenda krzyżowa w bazie MS Access prezentuje zliczone wartości z pola i przyporządkowuje je w wiersze i kolumny.
    
    545. Funkcja CONCAT() w języku SQL odpowiada za
    A. usunięcie wskazanego tekstu. // Funkcja CONCAT() w języku SQL nie odpowiada za usunięcie wskazanego tekstu.
    B. łączenie wyświetlanego tekstu. // Funkcja CONCAT() w języku SQL odpowiada za łączenie wyświetlanego tekstu.
    C. przycięcie wyświetlanego tekstu. // Funkcja CONCAT() w języku SQL nie odpowiada za przycięcie wyświetlanego tekstu.
    D. wyznaczenie z wejściowego tekstu podłańcucha znaków. // Funkcja CONCAT() w języku SQL nie odpowiada za wyznaczenie z wejściowego tekstu podłańcucha znaków.
    
    546. Na podstawie tabeli Towar wykonano następujące zapytanie SQL: Jaki będzie wynik tej operacji? // pytanie posiada zdjecie D:

    547. W tabeli produkt znajdują się przedmioty wyprodukowane po 2000 roku, z polami nazwa i rok_produkcji. Klauzula SQL wyświetli listę przedmiotów wyprodukowanych // pytanie posiada zdjecie D:

    548. Struktura prostych baz danych, w których wszystkie dane są przechowywane w jednej tabeli, nazywana jest modelem
    A. sieciowym // Model sieciowy to struktura prostych baz danych, w której dane są przechowywane w wielu powiązanych ze sobą tabelach. Pozwala na reprezentację relacji między różnymi danymi.
    B. relacyjnym. // Model relacyjny jest strukturą baz danych, w której dane są przechowywane w tabelach, z których można tworzyć złożone zapytania, korzystając z języka SQL. Opiera się na teorii relacji i kluczowych pojęciach, takich jak tabelki, klucze główne i obce.
    C. jednorodnym. // Model jednorodny to struktura prostych baz danych, w której wszystkie dane są przechowywane w jednej tabeli. Wszystkie informacje są zapisane w jednym miejscu i nie ma potrzeby łączenia ich z innymi tabelami.
    D. hierarchicznym. // Model hierarchiczny to struktura baz danych, w której dane są zorganizowane w formie drzewa, gdzie każdy węzeł może mieć tylko jeden węzeł nadrzędny. Działa na zasadzie relacji rodzic-dziecko, gdzie tylko rodzice mogą mieć wiele dzieci, a dzieci mogą mieć tylko jednego rodzica.
    
    549. W przedstawionym diagramie bazy danych biblioteka, elementy: czytelnik, wypozyczenie i ksiazka są // pytanie posiada zdjecie D:

    550. W języku zapytań SQL, aby dodać do tabeli Towar kolumnę rozmiar typu znakowego o maksymalnej długości 20 znaków, należy wykonać polecenie
    A. ALTER TABLE Towar ADD rozmiar varchar(20); // Polecenie ALTER TABLE Towar ADD rozmiar varchar(20) służy do dodania nowej kolumny o nazwie 'rozmiar' do tabeli 'Towar'. Kolumna ta ma typ danych 'varchar' o maksymalnej długości 20 znaków.
    B. ALTER TABLE Towar DROP COLUMN rozmiar varchar(20); // Polecenie ALTER TABLE Towar DROP COLUMN rozmiar varchar(20) służy do usunięcia kolumny 'rozmiar' z tabeli 'Towar'.
    C. ALTER TABLE Towar ALTER COLUMN rozmiar varchar(20); // Polecenie ALTER TABLE Towar ALTER COLUMN rozmiar varchar(20) służy do zmiany definicji kolumny 'rozmiar' w tabeli 'Towar'. Możemy zmienić typ danych, maksymalną długość oraz inne ustawienia tej kolumny.
    D. ALTER TABLE Towar CREATE COLUMN rozmiar varchar(20); // Polecenie ALTER TABLE Towar CREATE COLUMN rozmiar varchar(20) nie istnieje w języku zapytań SQL. Nie możemy użyć 'CREATE COLUMN', aby dodać nową kolumnę do istniejącej tabeli.
    
    551. Liczba 0x142, zapisana w kodzie skryptu JavaScript, ma postać
    A. dziesiętną. // Liczba 0x142, zapisana w kodzie skryptu JavaScript, ma postać dziesiętną.
    B. dwójkową. // Liczba 0x142, zapisana w kodzie skryptu JavaScript, ma postać dwójkową.
    C. ósemkową. // Liczba 0x142, zapisana w kodzie skryptu JavaScript, ma postać ósemkową.
    D. szesnastkową. // Liczba 0x142, zapisana w kodzie skryptu JavaScript, ma postać szesnastkową.
    
    552. W aplikacjach internetowych tablice asocjacyjne to tablice, w których
    A. indeks jest łańcuchem tekstowym. // Tablice asocjacyjne w aplikacjach internetowych są tablicami, w których indeksem jest łańcuch tekstowy. Oznacza to, że zamiast używać numerów jako indeksów, możemy używać tekstowych kluczy do identyfikacji elementów. Dzięki temu możemy łatwo odwoływać się do konkretnych wartości w tablicy za pomocą nazw, co ułatwia pracę z danymi.
    B. istnieją przynajmniej dwa wymiary. // Tablice asocjacyjne nie muszą mieć więcej niż jeden wymiar. Możemy tworzyć tablice o różnych wymiarach w zależności od potrzeb. Przykładowo, możemy mieć tablicę asocjacyjną o jednym wymiarze, w której indeksowane są wartości związane z poszczególnymi użytkownikami.
    C. elementy tablicy są zawsze indeksowane od 0. // W tablicach asocjacyjnych elementy nie zawsze są indeksowane od 0. Możemy zdefiniować dowolne indeksy w postaci łańcuchów tekstowych. Na przykład, możemy mieć tablicę asocjacyjną, gdzie indeksami są nazwy miesięcy, a wartościami są liczby dni w poszczególnych miesiącach.
    D. w każdej komórce tablicy przechowywana jest inna tablica. // W tablicach asocjacyjnych nie przechowujemy innych tablic w każdej komórce. Tablica asocjacyjna przechowuje wartości, które są powiązane z określonymi indeksami. Na przykład, możemy mieć tablicę asocjacyjną, gdzie indeksami są nazwy kolorów, a wartościami są ich kod hex.
    
    553. Odwołaniem do imienia Agata, zawartym w przedstawionej tablicy JavaScript, jest element // pytanie posiada zdjecie D:

    554. Specjalna metoda danej klasy stosowana w programowaniu obiektowym, wywoływana automatycznie podczas tworzenia obiektu,której podstawowym zadaniem jest zwykle zainicjowanie pól, to
    A. obiekt. // Obiekt - specjalna metoda danej klasy stosowana w programowaniu obiektowym, wywoływana automatycznie podczas tworzenia obiektu.
    B. destruktor. // Destruktor - specjalna metoda danej klasy stosowana w programowaniu obiektowym, wywoływana automatycznie podczas niszczenia obiektu.
    C. konstruktor. // Konstruktor - specjalna metoda danej klasy stosowana w programowaniu obiektowym, wywoływana automatycznie podczas tworzenia obiektu, którego podstawowym zadaniem jest zazwyczaj zainicjowanie pól.
    D. specyfikator dostępu. // Specyfikator dostępu - instrukcja w języku programowania, która określa, jakie inne części kodu mają dostęp do danej klasy, metody lub pola.
    
    555. Wskaż poprawny zapis instrukcji zapisanej w języku JavaScript.
    A. document.write("Liczba π z dokładnością do 2 miejsc po przecinku ≈ " + 3.14 ); // Instrukcja zapisana w języku JavaScript, która wykorzystuje funkcję document.write do wyświetlenia tekstu 'Liczba π z dokładnością do 2 miejsc po przecinku ≈ ' oraz liczby 3.14.
    B. document.write("Liczba π z dokładnością do 2 miejsc po przecinku ≈ " ; 3.14 ); // Niepoprawny zapis instrukcji w języku JavaScript. Zawiera błąd składniowy związany z nieprawidłowym użyciem znaku średnika i liczby.
    C. document.write("Liczba π z dokładnością do 2 miejsc po przecinku ≈ " . 3.14 ); // Niepoprawny zapis instrukcji w języku JavaScript. Zawiera błąd składniowy związany z nieprawidłowym użyciem kropki w miejscu, gdzie powinien być znak plus.
    D. document.write("Liczba π z dokładnością do 2 miejsc po przecinku ≈ " 3.14 ); // Niepoprawny zapis instrukcji w języku JavaScript. Zawiera błąd składniowy związany z brakiem znaku plus pomiędzy tekstem a liczbą.
    
    556. W języku skryptowym JavaScript operatory: ||, && należą do grupy operatorów
    A. bitowych. // Operator bitowy wykonuje operacje bitowe na dwóch operandach. Nie jest to grupa operatorów do której należą operatory || i && w języku JavaScript.
    B. logicznych. // Operator logiczny || jest używany do porównywania dwóch warunków, zwracając true jeśli co najmniej jeden z nich jest prawdziwy. Operator && natomiast zwraca true tylko wtedy, gdy oba warunki są prawdziwe.
    C. przypisania. // Operator przypisania służy do przypisywania wartości do zmiennych. Nie należy do grupy operatorów || i &&.
    D. arytmetycznych. // Operator arytmetyczny wykonuje podstawowe operacje arytmetyczne, takie jak dodawanie, odejmowanie, mnożenie i dzielenie. Nie jest to grupa operatorów do której należą operatory || i &&.
    
    557. Wskaż pętlę, która w języku JavaScript wyświetli sześć kolejnych liczb parzystych.
    A. for(i=2;i<12;i+=2) {document.write(i);} // Pętla A w języku JavaScript wykorzystuje konstrukcję for, której parametry są: i=2 (początkowa wartość zmiennej i), i<=12 (warunek zakończenia pętli), i+=2 (krok, czyli zwiększanie wartości i o 2 przy każdej iteracji). Wewnątrz pętli korzystamy z metody document.write(i), która wyświetla wartość zmiennej i na stronie. Cała pętla pozwala wyświetlić sześć kolejnych liczb parzystych: 2, 4, 6, 8, 10, 12.
    B. for(i=2;i<=12;i+=2) {document.write(i);} // Pętla B działa podobnie jak pętla A, jednak zamieniono warunek zakończenia pętli na i<=12. Pozwala to również wyświetlić sześć kolejnych liczb parzystych: 2, 4, 6, 8, 10, 12.
    C. for(i=2;i<12;i++) {i++; document.write(i);} // Pętla C ma nieprawidłowe działanie. Po inkrementacji zmiennej i wewnątrz pętli, zmienia się kolejność i wartości iterowanych liczb, co powoduje wyświetlenie kolejno liczb: 3, 5, 7, 9, 11, 13. Nie są to liczby parzyste, więc pętla nie spełnia zadania.
    D. for(i=2;i<=12;i++) {i=i+2; document.write(i);} // Pętla D także ma nieprawidłowe działanie. Po inkrementacji zmiennej i o 2, wartość zmiennej i przeskakuje kolejne liczby nieparzyste, dlatego pętla wyświetla wartości: 4, 7, 10, 13, 16, 19. Nie są to liczby kolejne ani parzyste, więc pętla nie spełnia zadania.
    
    558. Wybierz poprawną definicję funkcji w języku JavaScript.
    A. nazwa_funkcji(argumenty) {instrukcje;} // Punkt A przedstawia poprawną definicję funkcji w języku JavaScript. Funkcje są definiowane za pomocą słowa kluczowego 'function', po którym podajemy nazwę funkcji, listę argumentów w nawiasach, oraz blok instrukcji w nawiasach klamrowych.
    B. new nazwa_funkcji(argumenty) {instrukcje;} // Punkt B jest niepoprawny. Wykorzystanie słowa kluczowego 'new' sugeruje tworzenie nowego obiektu, a nie definiowanie funkcji.
    C. function nazwa_funkcji(argumenty) {instrukcje;} // Punkt C przedstawia poprawną definicję funkcji w języku JavaScript. Funkcje są definiowane za pomocą słowa kluczowego 'function', po którym podajemy nazwę funkcji, listę argumentów w nawiasach, oraz blok instrukcji w nawiasach klamrowych.
    D. typ_funkcji nazwa_funkcji(argumenty) {instrukcje;} // Punkt D jest niepoprawny. Brak słowa kluczowego 'function' oznacza, że nie jest to poprawna definicja funkcji w języku JavaScript.
    
    559. W języku PHP zapisywanie danych do pliku realizuje funkcja?
    A. fgets() // Funkcja fgets() służy do odczytywania danych z pliku w języku PHP. W skrócie, pozwala na odczytanie jednego wiersza tekstu z pliku.
    B. fputs() // Funkcja fputs() służy do zapisywania danych do pliku w języku PHP. Jest to najczęściej używana funkcja do zapisywania tekstu do pliku.
    C. fopen() // Funkcja fopen() służy do otwierania pliku w języku PHP. Może zostać użyta do odczytywania lub zapisywania danych do pliku.
    D. freadfile() // Funkcja freadfile() służy do odczytywania danych z pliku i umieszczania ich w zmiennej w języku PHP.
    
    560. Plikiem konfiguracyjnym, który pozwala na zdefiniowanie ustawień PHP dla całego serwera, jest
    A. my.ini // Plik konfiguracyjny my.ini nie jest używany do definiowania ustawień PHP dla całego serwera. Służy do konfiguracji bazy danych MySQL.
    B. php.ini // Plik konfiguracyjny php.ini pozwala na zdefiniowanie ustawień PHP dla całego serwera. Tutaj można ustawić takie parametry jak maksymalny rozmiar przesyłanych plików, limity pamięci, rozszerzenia PHP i wiele innych.
    C. httpd.conf // Plik konfiguracyjny httpd.conf jest używany do konfiguracji serwera HTTP Apache. Tutaj można zdefiniować różne ustawienia serwera, takie jak porty, foldery, moduły i wiele innych.
    D. config.inc.php // Plik config.inc.php nie jest standardowym plikiem konfiguracyjnym dla PHP. Często jest używany w aplikacjach napisanych w PHP do przechowywania ważnych informacji, takich jak dane logowania do bazy danych.
    
    561. Efektem wykonania przedstawionego kodu PHP jest wyświetlenie komunikatu // pytanie posiada zdjecie D:

    562. Ile razy zostanie wykonana pętla zapisana w przedstawionym skrypcie PHP? // pytanie posiada zdjecie D:

    563. Jaką wartość zwróci funkcja empty($a); zapisana w języku PHP, gdy zmienna $a przyjmie wartość liczbową równą 0?
    A. 0 // Funkcja empty($a) zwraca wartość TRUE, gdy zmienna $a przyjmuje wartość liczbową równą 0.
    B. TRUE // Funkcja empty($a) zwraca wartość TRUE, gdy zmienna $a przyjmuje wartość liczbową równą 0.
    C. NULL // Funkcja empty($a) zwraca wartość TRUE, gdy zmienna $a przyjmuje wartość liczbową równą 0.
    D. FALSE // Funkcja empty($a) zwraca wartość TRUE, gdy zmienna $a przyjmuje wartość liczbową równą 0.
    

    
    564. W języku JavaScript, funkcja matematyczna Math.pow() służy do wyznaczenia
    A. potęgi liczby. // Funkcja matematyczna Math.pow() w języku JavaScript służy do wyznaczenia potęgi liczby. Możemy podać dwie liczby jako argumenty: podstawę i wykładnik. Funkcja zwróci wynik podstawy podniesionej do potęgi wykładnika.
    B. wartości przybliżonej liczby. // Funkcja matematyczna Math.pow() nie służy do wyznaczania wartości przybliżonej liczby.
    C. wartości bezwzględnej liczby. // Funkcja matematyczna Math.pow() nie służy do wyznaczania wartości bezwzględnej liczby.
    D. pierwiastka kwadratowego liczby. // Funkcja matematyczna Math.pow() nie służy do wyznaczania pierwiastka kwadratowego liczby.
    
    565. Jakie wartości muszą przyjmować zmienne w funkcji biblioteki mysqli, aby połączyć się z serwerem i bazą danych?
    A. adres serwera - $a, nazwa bazy danych - $b, login - $c, hasło - $d // Zmienna $a w funkcji biblioteki mysqli odpowiada za adres serwera, którym jest połączona baza danych.
    B. adres serwera - $c, nazwa bazy danych - $d, login - $a, hasło - $b // Zmienna $b w funkcji biblioteki mysqli określa nazwę bazy danych, z którą chcemy się połączyć.
    C. adres serwera - $c, nazwa bazy danych - $d, login - $b, hasło - $a // Zmienna $c w funkcji biblioteki mysqli reprezentuje login, który jest używany do autoryzacji połączenia z serwerem.
    D. adres serwera - $a, nazwa bazy danych - $d, login - $b, hasło - $c // Zmienna $d w funkcji biblioteki mysqli przechowuje hasło, które jest używane do autoryzacji połączenia z serwerem.
    
    566. W którym z bloków należy umieścić warunek pętli? // pytanie posiada zdjecie D:

    567. Ile razy należy zapisać instrukcję warunkową, aby zaimplementować w języku programowania przedstawiony algorytm?  // pytanie posiada zdjecie D:

    568. W języku C, aby zadeklarować stałą, należy użyć
    A. const // Słowo kluczowe 'const' w języku C służy do deklaracji stałej. Stała to wartość, która nie może być zmieniana w trakcie działania programu. Po zadeklarowaniu stałej przy pomocy 'const', jej wartość nie może być modyfikowana.
    B. static // Słowo kluczowe 'static' w języku C ma różne zastosowania, jednak nie służy do deklaracji stałej. Może być używane np. do deklaracji statycznych zmiennych, które są przechowywane na przestrzeni całego programu i zachowują swoją wartość między wywołaniami funkcji.
    C. #CONST // Wyrażenie '#CONST' nie jest poprawne w języku C. Nie istnieje takie słowo kluczowe ani dyrektywa.
    D. #INCLUDE // Wyrażenie '#INCLUDE' nie służy do deklaracji stałej w języku C. Jest to dyrektywa preprocesora, która służy do włączania zawartości plików nagłówkowych do programu.
    
    569. Które z wyrażeń logicznych zapisanych w języku C sprawdza, czy zmienna o nazwie zm1 należy do przedziału (6, 203> ?

    A. (zm1 > 6) || (zm1 <= 203) // Warunek sprawdza, czy zmienna zm1 jest większa od 6 lub mniejsza lub równa 203.
    B. (zm1 > 6) || (zm1 != 203) // Warunek sprawdza, czy zmienna zm1 jest większa od 6 lub różna od 203.
    C. (zm1 > 6) && (zm1 <= 203) // Warunek sprawdza, czy zmienna zm1 jest większa od 6 oraz mniejsza lub równa 203.
    D. (zm1 > 6) && (zm1 != 203) // Warunek sprawdza, czy zmienna zm1 jest większa od 6 oraz różna od 203.
    
    570. Kwalifikatory dostępu: private, protected i public definiują mechanizm
    A. przeładowania. // Kwalifikator dostępu private oznacza, że dany element jest widoczny tylko w obrębie klasy, w której został zdefiniowany. Nie jest dostępny dla innych klas.
    B. polimorfizmu. // Kwalifikator dostępu protected oznacza, że dany element jest widoczny w obrębie klasy, w której został zdefiniowany oraz w klasach dziedziczących. Nie jest dostępny dla innych klas.
    C. hermetyzacji. // Kwalifikator dostępu public oznacza, że dany element jest widoczny dla wszystkich klas i obiektów. Może być używany z dowolnego miejsca w programie.
    D. rekurencji. // Kwalifikator dostępu rekurencji nie istnieje. Nie ma związku pomiędzy kwalifikatorami dostępu a rekurencją.
    
    571. bool gotowe=true;
cout << gotowe;
Co zostanie wypisane w wyniku wykonania przedstawionych instrukcji?

    A. 0 // Punkt A - W wyniku wykonania przedstawionych instrukcji zostanie wypisane 1.
    B. 1 // Punkt B - W wyniku wykonania przedstawionych instrukcji zostanie wypisane 1.
    C. tak // Punkt C - W wyniku wykonania przedstawionych instrukcji nie zostanie wypisane 'tak'.
    D. nie // Punkt D - W wyniku wykonania przedstawionych instrukcji nie zostanie wypisane 'nie'.
    
    572. Za pomocą którego słowa kluczowego deklaruje się zmienną w języku JavaScript?
    A. var // Słowo kluczowe 'var' służy do deklaracji zmiennych w języku JavaScript. Jest to najpopularniejszy sposób tworzenia zmiennych.
    B. new // Słowo kluczowe 'new' służy do tworzenia nowych obiektów w języku JavaScript. Jest używane w połączeniu z konstruktorem obiektu.
    C. variable // Słowo 'variable' nie jest słowem kluczowym w języku JavaScript i nie służy do deklaracji zmiennych. Nie jest często używane w programowaniu.
    D. instanceof // Słowo kluczowe 'instanceof' służy do sprawdzania czy dany obiekt jest instancją określonego typu w języku JavaScript.
    
    573. Zadaniem przedstawionej pętli jest // pytanie posiada zdjecie D:

    574. Która z deklaracji funkcji w języku C++ ma parametr wejściowy typu rzeczywistego, a zwraca wartość całkowitą?
    A. void fun1(int a); // Funkcja o nazwie fun1 przyjmuje jeden parametr, który musi być liczba całkowitą oznaczoną jako 'a'. Funkcja nie zwraca żadnej wartości, ponieważ ma typ 'void'.
    B. int fun1(float a); // Funkcja o nazwie fun1 przyjmuje jeden parametr, który musi być liczbą zmiennoprzecinkową oznaczoną jako 'a'. Funkcja zwraca wartość całkowitą, ponieważ ma typ 'int'.
    C. float fun1(int a); // Funkcja o nazwie fun1 przyjmuje jeden parametr, który musi być liczbą całkowitą oznaczoną jako 'a'. Funkcja zwraca wartość zmiennoprzecinkową, ponieważ ma typ 'float'.
    D. float fun1(void a); // Funkcja o nazwie fun1 przyjmuje jeden parametr, jednak ten parametr został oznaczony jako 'void', co oznacza, że nie przyjmuje żadnej wartości. Funkcja zwraca wartość zmiennoprzecinkową, ponieważ ma typ 'float'.
    
    575. Jednym z wariantów testów jednostkowych jest analiza ścieżek, która polega na
    A. testowaniu wartości brzegowych zbioru danych. // Testowanie wartości brzegowych zbioru danych.
    B. testowaniu obiektów pod względem inicjacji i zwolnienia zarezerwowanej pamięci. // Testowanie obiektów pod względem inicjacji i zwolnienia zarezerwowanej pamięci.
    C. określeniu punktu początkowego i końcowego oraz badaniu możliwych dróg pomiędzy tymi
punktami. // Określenie punktu początkowego i końcowego oraz badanie możliwych dróg pomiędzy tymi punktami.
    D. utworzeniu kilku zbiorów danych o podobnym sposobie przetwarzania i użyciu ich do
przeprowadzenia testu. // Utworzenie kilku zbiorów danych o podobnym sposobie przetwarzania i użycie ich do przeprowadzenia testu.
    
    576. Który sposób komentowania w języku PHP pozwala na zapis bloku komentarza w kilku liniach?
    A. # // Odpowiedź A. # nie pozwala na zapis bloku komentarza w kilku liniach.
    B. / / // Odpowiedź B. // pozwala na komentowanie tylko jednej linii.
    C. /*   */ // Odpowiedź C. /* */ pozwala na zapis bloku komentarza w kilku liniach.
    D. < !--  -- > // Odpowiedź D. <!-- --> to znaczniki komentarza używane w języku HTML, nie w PHP.
    
    577. Pole lub zbiór pól jednoznacznie identyfikujący każdy pojedynczy wiersz w tabeli w bazie danych to klucz
    A. inkrementacyjny. // Odpowiedź A - inkrementacyjny oznacza, że wartość klucza jest zwiększana o jeden przy dodawaniu nowego wiersza do tabeli. Jest to często stosowane w bazach danych do automatycznego generowania unikalnych identyfikatorów dla nowych rekordów.
    B. podstawowy. // Odpowiedź B - klucz podstawowy to pole lub zbiór pól, które jednoznacznie identyfikuje każdy pojedynczy wiersz w tabeli. Jest to najważniejszy klucz w bazie danych, ponieważ zapewnia unikalność każdego rekordu.
    C. przestawny. // Odpowiedź C - klucz przestawny to rodzaj klucza, który może być używany do mapowania relacji między różnymi tabelami w bazie danych. Pozwala na identyfikację powiązań między rekordami w różnych tabelach.
    D. obcy. // Odpowiedź D - klucz obcy to pole lub zbiór pól w tabeli, które odwołuje się do klucza podstawowego w innej tabeli. Jest to używane do tworzenia związków między tabelami i umożliwia tworzenie relacji między nimi.
    
    578. W języku SQL, aby zmienić strukturę tabeli, np. poprzez dodanie lub usunięcie kolumny, należy zastosować polecenie
    A. UPDATE // Polecenie UPDATE w języku SQL służy do modyfikowania istniejących rekordów w tabeli, a nie do zmiany struktury tabeli.
    B. TRUNCATE // Polecenie TRUNCATE w języku SQL służy do usuwania wszystkich rekordów z tabeli, nie do zmiany struktury tabeli.
    C. DROP TABLE // Polecenie DROP TABLE w języku SQL służy do usuwania całej tabeli, nie do zmiany struktury tabeli.
    D. ALTER TABLE // Polecenie ALTER TABLE w języku SQL służy do zmiany struktury tabeli, takich jak dodawanie lub usuwanie kolumny.
    
    579. Atrybut kolumny NOT NULL jest wymagany w przypadku
    A. klucza podstawowego. // Atrybut kolumny NOT NULL jest wymagany w przypadku klucza podstawowego. Klucz podstawowy to unikalny identyfikator dla każdego wiersza w tabeli. Wartość klucza podstawowego nie może być pusta ani NULL, dlatego wymaga atrybutu NOT NULL.
    B. użycia atrybutu DEFAULT. // Atrybut kolumny NOT NULL nie jest konieczny przy użyciu atrybutu DEFAULT. Atrybut DEFAULT umożliwia określenie domyślnej wartości dla kolumny, która zostanie użyta, jeśli nie zostanie podana inna wartość.
    C. definicji wszystkich pól tabeli. // Atrybut kolumny NOT NULL nie jest konieczny przy definicji wszystkich pól tabeli. NOT NULL dotyczy pojedynczych kolumn, a nie całej tabeli. Można określić, czy dana kolumna wymaga wartości, czy może być pusta.
    D. definicji wszystkich pól typu numerycznego. // Atrybut kolumny NOT NULL nie jest konieczny przy definicji wszystkich pól typu numerycznego. NOT NULL odnosi się do wymaganej wartości dla kolumny, niezależnie od jej typu danych.
    
    580. Aby za pomocą polecenia SELECT wyświetlić nazwiska osób mieszkających na osiedlu tak, aby te nazwiska nie powtarzały się, należy zapisać zapytanie w postaci
    A. SELECT nazwisko FROM mieszkancy ORDER BY nazwisko; // Punkt A - polecenie SELECT wyświetla nazwiska osób mieszkających na osiedlu, ale nie zapewnia, że nazwiska będą się powtarzać. W zapytaniu używamy klauzuli ORDER BY, która sortuje wyniki względem nazwisk w kolejności rosnącej.
    B. SELECT DISTINCT nazwisko FROM mieszkancy; // Punkt B - polecenie SELECT DISTINCT wyświetla tylko unikalne nazwiska osób mieszkających na osiedlu. Dzięki temu, nazwiska się nie powtarzają w wynikach zapytania.
    C. SELECT TOP 10 nazwisko FROM mieszkancy; // Punkt C - polecenie SELECT TOP 10 wyświetla pierwsze 10 nazwisk osób mieszkających na osiedlu. Ten punkt nie gwarantuje, że nazwiska się nie powtarzają ani nie są uporządkowane alfabetycznie.
    D. SELECT AVG(nazwisko) FROM mieszkancy; // Punkt D - polecenie SELECT AVG oblicza średnią wartość w kolumnie nazwisko. W tym przypadku, wynikiem zapytania będzie liczba, a nie lista nazwisk.
    
    581. Baza danych zawiera dane multimedialne, co wiąże się z przechowywaniem dużych ilości danych binarnych. Do takich danych należy zastosować typ
    A. BLOB // Typ BLOB w bazie danych służy do przechowywania danych multimedialnych, takich jak obrazy, dźwięki czy filmy. Jest to odpowiedni typ danych, gdy chcemy zapisać duże ilości danych binarnych.
    B. ENUM // Typ ENUM w bazie danych służy do przechowywania wartości, które są ograniczone do wybranej listy możliwości. Na przykład, możemy zdefiniować typ ENUM o nazwie 'status' z wartościami 'aktywny', 'nieaktywny' i 'zawieszony'.
    C. DOUBLE // Typ DOUBLE w bazie danych służy do przechowywania liczb zmiennoprzecinkowych z podwójną precyzją. Jest to odpowiedni typ, gdy potrzebujemy dokładnych wartości dziesiętnych.
    D. LONGTEXT // Typ LONGTEXT w bazie danych służy do przechowywania długich ciągów znaków o zmiennej długości. Jest to odpowiedni typ, gdy potrzebujemy przechowywać duże ilości tekstu.
    
    582. W tabeli Recepta pola Imie i Nazwisko dotyczą pacjenta, na którego recepta jest wydana. Którą kwerendę należy zastosować, aby dla wszystkich recept uzyskać datę wystawienia recepty oraz imię i nazwisko lekarza wystawiającego? // pytanie posiada zdjecie D:

    583. W bazach danych do prezentacji danych spełniających określone warunki należy utworzyć
    A. raport. // Raporty w bazach danych służą do prezentacji danych, które spełniają określone warunki. Pozwalają na wygenerowanie uporządkowanych i czytelnych zestawień informacji, które można łatwo przejrzeć i zrozumieć.
    B. relację. // Relacje w bazach danych są strukturami, które umożliwiają powiązanie danych ze sobą. Dzięki nim można tworzyć spójne zbiory informacji i przeprowadzać skomplikowane zapytania, łącząc dane z różnych tabel.
    C. formularz. // Formularze w bazach danych pozwalają na interakcję użytkownika z danymi. Są to narzędzia, które umożliwiają wprowadzanie nowych danych, edytowanie istniejących oraz wyświetlanie ich w strukturyzowanej formie.
    D. makropolecenie. // Makropolecenia w bazach danych to zestawy poleceń, które można zdefiniować i wywołać w celu automatyzacji powtarzających się czynności. Dzięki nim można np. wykonywać serię operacji na danych przy jednym kliknięciu.
    
    584. Które polecenie służy do zmiany wartości o jeden w polu RokStudiów w tabeli Studenci dla studentów, którzy studiują na roku 1÷4?

    A. UPDATE Studenci, RokStudiow+1 WHERE RokStudiow < 5; // Polecenie 'UPDATE Studenci, RokStudiow+1 WHERE RokStudiow < 5;' służy do zmiany wartości o jeden w polu RokStudiow w tabeli Studenci dla studentów, którzy studiują na roku od 1 do 4. Polecenie to aktualizuje wartość pola RokStudiow na wartość obecnej wartości pola RokStudiow plus jeden dla rekordów, których wartość pola RokStudiow jest mniejsza niż 5.
    B. UPDATE Studenci SET RokStudiow WHERE RokStudiow < 5; // Polecenie 'UPDATE Studenci SET RokStudiow WHERE RokStudiow < 5;' jest niepoprawne. Brakuje operatora przypisania po słowie 'SET'. Polecenie to nie zmieni wartości pola RokStudiow w tabeli Studenci.
    C. UPDATE RokStudiow SET RokStudiow++ WHERE RokStudiow < 5; // Polecenie 'UPDATE RokStudiow SET RokStudiow++ WHERE RokStudiow < 5;' jest niepoprawne. Brakuje nazwy tabeli, która ma być zmieniana. Ponadto, operator '++' nie jest obsługiwany w języku SQL.
    D. UPDATE Studenci SET RokStudiow = RokStudiow+1 WHERE RokStudiow
< 5; // Polecenie 'UPDATE Studenci SET RokStudiow = RokStudiow+1 WHERE RokStudiow < 5;' jest poprawne. Zmienia wartość pola RokStudiow w tabeli Studenci o jeden, dla rekordów, których wartość pola RokStudiow jest mniejsza niż 5.
    
    585. Wskaż różnicę pomiędzy poleceniami DROP TABLE i TRUNCATE TABLE.
    A. DROP TABLE usuwa tabelę, a TRUNCATE TABLE modyfikuje w niej dane spełniające
warunek. // Polecenie DROP TABLE usuwa całkowicie tabelę wraz z jej zawartością.
    B. DROP TABLE usuwa tabelę, a TRUNCATE TABLE usuwa wszystkie dane, pozostawiając
pustą tabelę. // Polecenie TRUNCATE TABLE usuwa wszystkie dane z tabeli, pozostawiając pustą tabelę.
    C. Obydwa polecenia usuwają jedynie zawartość tabeli, ale tylko polecenie DROP TABLE może
być cofnięte. // Obydwa polecenia usuwają jedynie zawartość tabeli, ale tylko polecenie DROP TABLE może być cofnięte.
    D. Obydwa polecenia usuwają tabelę wraz zawartością, ale tylko polecenie TRUNCATE TABLE może być cofnięte. // Obydwa polecenia usuwają tabelę wraz z jej zawartością, ale tylko polecenie TRUNCATE TABLE może być cofnięte.
    
    586. Aby nadać użytkownikowi uprawnienia do tabel w bazie danych, należy zastosować polecenie
    A. GRANT // Punkt A, czyli polecenie GRANT, służy do nadawania użytkownikowi uprawnień do tabel w bazie danych. Dzięki temu poleceniu można określić, jakie operacje użytkownik może wykonywać na danych w tabelach.
    B. SELECT // Punkt B, czyli polecenie SELECT, służy do pobierania danych z tabel w bazie danych. Używając tego polecenia, można wybrać konkretne kolumny i wiersze lub zastosować specjalne warunki, aby filtrować wyniki.
    C. CREATE // Punkt C, czyli polecenie CREATE, służy do tworzenia nowych tabel, baz danych, funkcji, widoków itp. Wprowadzając odpowiednie parametry, można zdefiniować strukturę i właściwości nowo utworzonych elementów.
    D. REVOKE // Punkt D, czyli polecenie REVOKE, służy do odebrania użytkownikowi uprawnień do tabel w bazie danych, które zostały wcześniej nadane za pomocą polecenia GRANT. Dzięki temu poleceniu można kontrolować, które operacje nie są już dostępne dla danego użytkownika.
    
    587. Aby przesłać dane za pomocą funkcji mysqli_query() w skrypcie PHP, który wstawia do bazy danych dane pobrane z formularza ze strony internetowej, jako jednego z parametrów należy użyć kwerendy
    A. INSERT INTO // Funkcja mysqli_query() w PHP służy do przesyłania danych do bazy danych. W przypadku wstawiania danych pobranych z formularza ze strony internetowej, jako jeden z parametrów funkcji należy użyć kwerendy INSERT INTO. Kwerenda INSERT INTO służy do wstawiania nowych wierszy do tabeli w bazie danych.
    B. UPDATE // Odpowiedź B
    C. SELECT // Odpowiedź C
    D. ALTER // Odpowiedź D
    
    588. Przedstawiony fragment kodu PHP działa poprawnie i ma za zadanie wyświetlić na stronie internetowej dane pobrane kwerendą z bazy danych. Z ilu pól zostaną wyświetlone dane?
 // pytanie posiada zdjecie D:

    589. Na rysunku przedstawiono strukturę bloków strony internetowej. Który z fragmentów formatowania strony pasuje do takiego układu? (Dla uproszczenia pominięto właściwości koloru tła, wysokości i czcionki)
 // pytanie posiada zdjecie D:

    590. Wskaż nazwę Systemu Zarządzania Treścią, którego logo zostało przedstawione na rysunku. // pytanie posiada zdjecie D:

    591. Który kod języka HTML da efekt formatowania jak na przedstawionym rysunku? // pytanie posiada zdjecie D:

    592. Który znacznik należy do znaczników definiujących listy w języku HTML?
    A. < tr > // Znacznik <tr> używany jest do tworzenia wierszy w tabelach w HTML.
    B. < th > // Znacznik <th> jest używany do definiowania nagłówków kolumn w tabelach w HTML.
    C. < td > // Znacznik <td> służy do definiowania komórek (celle) w tabelach w HTML.
    D. < ul > // Znacznik <ul> jest używany do tworzenia list nienumerowanych w HTML.
    
    593. Który z kodów HTML opisuje przedstawioną tabelę? (Dla uproszczenia pominięto zapis stylu obramowania tabeli i komórek)
 // pytanie posiada zdjecie D:

    594. Przedstawione w języku CSS formatowanie czcionki będzie obowiązywać dla // pytanie posiada zdjecie D:

    595. Której właściwości CSS należy użyć, aby zdefiniować marginesy wewnętrzne dla elementu?
    A. hight // Właściwość 'hight' nie służy do definiowania marginesów wewnętrznych, więc nie jest poprawną odpowiedzią.
    B. width // Właściwość 'width' nie służy do definiowania marginesów wewnętrznych, więc nie jest poprawną odpowiedzią.
    C. margin // Właściwość 'margin' służy do definiowania zewnętrznych marginesów elementu, a nie marginesów wewnętrznych.
    D. padding // Właściwość 'padding' służy do definiowania marginesów wewnętrznych dla elementu, czyli odstępów między zawartością elementu a jego granicami.
    
    596. W kodzie CSS zastosowano formatowanie elementu listy, przy czym żadne inne formatowanie CSS nie zostało zdefiniowane. Zastosowane formatowanie sprawi, że // pytanie posiada zdjecie D:

    597. Wartości: static, relative, fixed, absolute oraz sticky można przypisać do właściwości
    A. display // Wartość 'static' oznacza, że element jest wyświetlany w standardowym przepływie dokumentu. Nie ma wpływu na pozycjonowanie elementu.
    B. position // Wartość 'relative' pozwala na przemieszczanie elementu względem jego oryginalnej pozycji. Element wciąż zajmuje miejsce w przepływie dokumentu.
    C. list-style-type // Wartość 'fixed' powoduje, że element jest umieszczony w stałej pozycji na ekranie, niezależnie od przewijania strony. Nie zajmuje miejsca w przepływie dokumentu.
    D. text-transform // Wartość 'absolute' powoduje, że element jest usunięty z normalnego przepływu dokumentu i pozycjonowany względem jego pierwszego przodka z pozycją inne niż 'static'. Nie zajmuje miejsca w przepływie dokumentu.
    
    598. Aby dostosować stronę internetową dla niewidomych, należy nadać wyświetlanym za pomocą znacznika img obrazom atrybut
    A. alt // Aby dostosować stronę internetową dla niewidomych, należy nadać wyświetlanym za pomocą znacznika img obrazom atrybut alt. Atrybut ten zawiera alternatywny tekst opisujący obraz, który jest odczytywany przez czytniki ekranowe, umożliwiając osobom niewidomym zrozumienie zawartości obrazu.
    B. src // Odpowiedź B - src - dotyczy adresu URL, który wskazuje na źródło obrazu, a nie jest związana z dostosowaniem strony dla osób niewidomych.
    C. text // Odpowiedź C - text - nie jest poprawną odpowiedzią. Nie istnieje znacznik czy atrybut o nazwie text w kontekście dostosowywania strony dla osób niewidomych.
    D. style // Odpowiedź D - style - odnosi się do stylów CSS, które definiują wygląd elementów na stronie, ale nie ma związku z dostosowywaniem strony dla osób niewidomych.
    
    599. Którą czynność należy wykonać podczas obróbki zdjęcia w edytorze grafiki, aby białe tło zamienić na przezroczystość? 
    A. Dodać kanał alfa. // Aby zamienić białe tło na przezroczystość w edytorze grafiki, należy dodać kanał alfa. Kanał alfa jest dodatkowym kanałem w obrazie, który określa stopień przezroczystości poszczególnych pikseli. Dzięki dodaniu kanału alfa, można ustawić wartości przezroczystości dla pikseli na tle, co spowoduje, że tło stanie się przezroczyste.
    B. Skadrować obraz. // Skadrowanie obrazu nie jest odpowiedzią na pytanie. Skadrowanie to proces przycinania obrazu, aby usunąć niechciane elementy lub dostosować kompozycję. Nie ma bezpośredniego związku ze zmianą tła na przezroczystość.
    C. Zmienić saturację obrazu. // Zmiana saturacji obrazu również nie jest odpowiedzią na pytanie. Zmiana saturacji odnosi się do nasycenia barw w obrazie. Zmiana saturacji nie wpływa na tło i nie powoduje zamiany białego tła na przezroczystość.
    D. Maksymalnie zmniejszyć jasność. // Maksymalne zmniejszenie jasności również nie jest odpowiedzią na pytanie. Zmniejszenie jasności obrazu zmienia tylko ogólny poziom jasności w całym obrazie, ale nie wpływa na zamianę białego tła na przezroczystość.
    
    600. Aby zwiększyć szybkość działania strony zawierającej grafikę o wymiarach 2000 px na 760 px, należy zmniejszyć rozmiary grafiki

    A. w programie graficznym. // Aby zwiększyć szybkość działania strony zawierającej grafikę o wymiarach 2000 px na 760 px, należy zmniejszyć rozmiar grafiki w programie graficznym. Oznacza to, że należy zmniejszyć liczbę pikseli, z których składa się grafika, co pozwoli zaoszczędzić miejsce na serwerze i przyspieszyć wczytywanie strony.
    B. za pomocą atrybutów HTML. // Zmniejszenie rozmiaru grafiki za pomocą atrybutów HTML nie wpłynie na szybkość działania strony. Atrybuty HTML służą do określania wyglądu i struktury elementów na stronie, a nie do manipulowania rozmiarem plików graficznych.
    C. za pomocą właściwości CSS, podając rozmiar w pikselach. // Zmniejszenie rozmiaru grafiki za pomocą właściwości CSS, podając rozmiar w pikselach, również nie wpłynie na szybkość działania strony. Właściwości CSS służą do stylizacji elementów na stronie, ale nie mają wpływu na rzeczywisty rozmiar plików graficznych.
    D. za pomocą właściwości CSS, podając rozmiar w procentach. // Zmniejszenie rozmiaru grafiki za pomocą właściwości CSS, podając rozmiar w procentach, również nie przyspieszy działania strony. Podanie rozmiaru w procentach odnosi się do rodzica elementu, a nie bezpośrednio do rozmiaru pliku graficznego.
    
    601. Przedstawiona linia kodu została zapisana w języku // pytanie posiada zdjecie D:

    602. Na stronie internetowej znajduje się formularz, do którego należy zaprogramować następujące funkcje: 
- walidacja: w trakcie wypełniania formularza w czasie rzeczywistym jest sprawdzana poprawność danych 
- przesyłanie danych: po wypełnieniu formularza i jego zatwierdzeniu dane są przesyłane do bazy danych
na serwerze 
Aby zaimplementować tę funkcjonalność w możliwie najprostszy sposób, należy zapisać
    A. walidację i przesyłanie danych w języku PHP. // Implementacja walidacji i przesyłania danych w języku PHP. Funkcja walidacji polega na sprawdzaniu poprawności danych podczas wypełniania formularza, natomiast przesyłanie danych odbywa się po zatwierdzeniu formularza i polega na przekazaniu danych do bazy danych na serwerze. Implementacja w języku PHP pozwala na wykorzystanie gotowych bibliotek i funkcji dostępnych w tym języku do obsługi formularzy i baz danych.
    B. walidację i przesyłanie danych w języku JavaScript. // Implementacja walidacji i przesyłania danych w języku JavaScript. Funkcja walidacji polega na sprawdzaniu poprawności danych w czasie rzeczywistym podczas wypełniania formularza, a przesyłanie danych odbywa się również w JavaScript po zatwierdzeniu formularza. Implementacja w języku JavaScript umożliwia dynamiczną walidację danych bez konieczności przeładowywania strony.
    C. walidację w skrypcie PHP, a przesyłanie danych w JavaScript. // Implementacja walidacji w skrypcie PHP, a przesyłanie danych w JavaScript. Funkcja walidacji danych odbywa się na serwerze za pomocą skryptu PHP, który sprawdza poprawność danych, natomiast przesyłanie danych do bazy danych odbywa się poprzez język JavaScript. Taki podział umożliwia zabezpieczenie danych oraz zapewnia prostą obsługę formularza po stronie przeglądarki.
    D. walidację w języku JavaScript, a przesyłanie danych w skrypcie PHP. // Implementacja walidacji w języku JavaScript, a przesyłanie danych w skrypcie PHP. Funkcja walidacji danych odbywa się na stronie klienta za pomocą języka JavaScript, który sprawdza poprawność danych podczas wypełniania formularza. Po zatwierdzeniu formularza dane są przesyłane do serwera przy użyciu skryptu PHP. Taki podział umożliwia szybką walidację danych oraz bezpieczne przesyłanie ich do bazy danych.
    
    603. Globalne tablice do przechowywania danych o ciastkach i sesjach: $ _ COOKIE oraz $ _ SESSION są częścią
języka

    A. C# // Globalne tablice $ _COOKIE i $ _SESSION w języku PHP służą do przechowywania danych dotyczących ciastek i sesji. $ _COOKIE przechowuje dane ciastek, które są przechowywane po stronie klienta, natomiast $ _SESSION przechowuje dane sesji, które są przechowywane po stronie serwera.
    B. Perl // Perl nie ma wbudowanych globalnych tablic do przechowywania danych o ciastkach i sesjach. W Perl można jednak użyć modułów lub bibliotek zewnętrznych, które umożliwią obsługę ciastek i sesji.
    C. PHP // W języku PHP globalne tablice $ _COOKIE i $ _SESSION służą do przechowywania danych o ciastkach i sesjach. $ _COOKIE przechowuje dane ciastek, które są przechowywane po stronie klienta, natomiast $ _SESSION przechowuje dane sesji, które są przechowywane po stronie serwera.
    D. JavaScript // JavaScript nie ma wbudowanych globalnych tablic do przechowywania danych o ciastkach i sesjach. W JavaScript można jednak użyć obiektu Cookie lub mechanizmu LocalStorage/SessionStorage, aby przechowywać dane po stronie klienta.
    
    604. Podczas walidacji dokumentu HTML5 pojawił się komunikat o treści: „Error: Element head is missing a required instance of child element title”. Oznacza to, że w dokumencie

    A. element < title > nie jest wymagany. // Element <title> nie jest wymagany, co oznacza, że może być pominięty w dokumencie HTML5.
    B. element < title > nie został zamknięty przez < /title >. // Element <title> nie został zamknięty poprawnie, co oznacza, że brakuje znaku </title>.
    C. nie zdefiniowano elementu < title > w części < head > dokumentu. // Nie zdefiniowano elementu <title> w części <head> dokumentu, co jest konieczne w HTML5.
    D. nie zdefiniowano obowiązkowego atrybutu title w znaczniku < img >. // Nie zdefiniowano obowiązkowego atrybutu title w znaczniku <img>.
    
    605. Którego protokołu należy użyć, aby przesłać pliki strony internetowej na serwer hostingowy?
    A. FTP // Protokół FTP służy do przesyłania plików na serwer hostingowy. Jest to skrót od File Transfer Protocol. Działa na zasadzie klient-serwer, gdzie klient wysyła pliki na serwer. Używa specjalnych komend do zarządzania transferem plików, takich jak pobieranie, wysyłanie, usuwanie czy zmiana nazwy plików.
    B. IRC // Protokół IRC (Internet Relay Chat) służy do komunikacji tekstowej w czasie rzeczywistym. Nie jest jednak używany do przesyłania plików na serwer hostingowy.
    C. HTTP // Protokół HTTP (Hypertext Transfer Protocol) jest odpowiedzialny za przesyłanie stron internetowych między serwerem a przeglądarką użytkownika. Umożliwia żądanie i otrzymywanie zasobów, takich jak pliki HTML, obrazy czy style CSS.
    D. SMTP // Protokół SMTP (Simple Mail Transfer Protocol) używany jest do przesyłania wiadomości e-mail między serwerem pocztowym nadawcy a serwerem pocztowym odbiorcy. Nie jest stosowany do przesyłania plików strony internetowej na serwer hostingowy.
    
    606. Przedstawiony blok reprezentuje czynność // pytanie posiada zdjecie D:

    607. Aby zadeklarować pole klasy, do którego mają dostęp jedynie metody tej klasy i pole to nie jest dostępne dla klas pochodnych, należy użyć kwalifikatora dostępu
    A. public. // Kwalifikator dostępu public oznacza, że pole klasy jest dostępne zarówno dla metod w tej klasie, jak i dla metod innych klas. Pozwala na swobodny dostęp i modyfikację tego pola z dowolnego miejsca w programie.
    B. private. // Kwalifikator dostępu private oznacza, że pole klasy jest dostępne jedynie dla metod w tej klasie. Pole to nie jest dostępne dla klas pochodnych, co oznacza, że nie można do niego bezpośrednio odnieść się z innej klasy. Umożliwia to ukrycie pól, które nie powinny być widoczne i modyfikowalne spoza klasy.
    C. protected. // Kwalifikator dostępu protected oznacza, że pole klasy jest dostępne dla metod w tej klasie oraz dla metod w klasach pochodnych. Pozwala na dostęp i modyfikację tego pola z metod w klasie dziedziczącej.
    D. published. // Kwalifikator dostępu published nie istnieje w języku programowania. Nie jest to poprawna odpowiedź.
    
    608. Pętla while powinna być wykonywana tak długo, jak długo zmienna x będzie przyjmowała wartości z przedziału obustronnie otwartego (-2, 5). Zapis tego warunku w nagłówku pętli za pomocą języka PHP ma postać
    A. ($x > -2) && ($x < 5) // Punkt A oznacza, że pętla while będzie wykonywana tak długo, jak długo zmienna x będzie miała wartość większą niż -2 i jednocześnie mniejszą niż 5.
    B. ($x == -2) && ($x < 5) // Punkt B jest niepoprawny, ponieważ oznacza, że pętla while będzie wykonywana tylko w przypadku, gdy zmienna x ma wartość równą -2 i jednocześnie mniejszą niż 5.
    C. ($x < -2) || ($x > 5) // Punkt C oznacza, że pętla while będzie wykonywana tak długo, jak długo zmienna x ma wartość mniejszą niż -2 lub jednocześnie większą niż 5.
    D. ($x > -2) || ($x > 5) // Punkt D oznacza, że pętla while będzie wykonywana tak długo, jak długo zmienna x ma wartość większą niż -2 lub jednocześnie większą niż 5.
    
    609. Po wykonaniu się przedstawionego fragmentu kodu języka C/C++ zmiennej o nazwie zmienna2 zostanie // pytanie posiada zdjecie D:

    610. W języku PHP float reprezentuje typ
    A. logiczny. // Typ logiczny w języku PHP to reprezentacja wartości prawda/fałsz. Służy do przechowywania informacji logicznych i wyników operacji logicznych.
    B. całkowity. // Typ całkowity w języku PHP służy do przechowywania liczb całkowitych, czyli bez części dziesiętnej. Może być dodatni, ujemny lub zero.
    C. łańcuchowy. // Typ łańcuchowy w języku PHP służy do przechowywania tekstów, czyli ciągów znaków. Może zawierać litery, cyfry, symboly i spacje.
    D. zmiennoprzecinkowy. // Typ zmiennoprzecinkowy w języku PHP służy do przechowywania liczb z częścią dziesiętną. Może być dodatni, ujemny lub zero i umożliwia wykonywanie operacji matematycznych.
    
    611. Którym słowem kluczowym, w języku z rodziny C należy posłużyć się, aby przypisać alternatywną nazwę dla istniejącego typu danych?
    A. enum // Słowo kluczowe 'enum' służy do definiowania typu danych, który może przyjmować tylko jedną z predefiniowanych wartości. Jest używane do tworzenia zbioru nazwanych wartości stałych.
    B. union // Słowo kluczowe 'union' służy do definiowania struktury danych, która może przechowywać różne typy danych, ale jednocześnie może być traktowana jako jeden określony typ danych.
    C. switch // Słowo kluczowe 'switch' służy do wyboru odpowiedniego bloku kodu do wykonania na podstawie wartości wyrażenia. Jest używane w instrukcjach warunkowych.
    D. typedef // Słowo kluczowe 'typedef' służy do tworzenia alternatywnych nazw dla istniejących typów danych. Używa się go, gdy chcemy nadawać inną nazwę dla istniejącego typu w celu zwiększenia czytelności kodu.
    
    612. Instrukcja for może być zastąpiona instrukcją
    A. case // Instrukcja case służy do wyboru jednej z kilku opcji w zależności od wartości wyrażenia. Jest używana wewnątrz instrukcji switch.
    B. while // Instrukcja while wykonuje blok kodu, dopóki określony warunek jest spełniony. Jest to często używane do iteracji przez elementy listy lub tablicy.
    C. switch // Instrukcja switch służy do wyboru jednej z wielu opcji w zależności od wartości wyrażenia. Jest używana wewnątrz bloku kodu i sprawdza, czy wartość wyrażenia pasuje do któregoś z przypadków.
    D. continue // Instrukcja continue służy do przerwania jednego przebiegu pętli i rozpoczęcia kolejnego przebiegu. Jest to często używane do pominięcia pewnych kroków w przypadku spełnienia określonego warunku.
    
    613. Przedstawiony kod źródłowy, zapisany w języku C++, ma za zadanie dla wprowadzanych dowolnych całkowitych liczb różnych od zera wypisać // pytanie posiada zdjecie D:

    614. DOM dostarcza metod i własności, które w języku JavaScript pozwalają na
    A. manipulowanie zadeklarowanymi w kodzie łańcuchami // Metody i własności w obiekcie DOM pozwalają na manipulowanie zadeklarowanymi w kodzie łańcuchami. Dzięki nim można tworzyć, usuwać i modyfikować tekst wyświetlany na stronie.
    B. wysyłanie danych formularza bezpośrednio do bazy danych // W obiekcie DOM nie ma wbudowanych funkcji do wysyłania danych formularza bezpośrednio do bazy danych. Jednak można użyć metod obiektu DOM do pobrania danych z formularza i przekazania ich do odpowiedniego mechanizmu obsługi danych, który z kolei może je przesłać do bazy danych.
    C. wykonywanie operacji na zmiennych przechowujących liczby // Obiekt DOM nie dostarcza specjalnych operacji na zmiennych przechowujących liczby. Do operacji matematycznych na liczbach zazwyczaj używa się standardowych operatorów i funkcji języka JavaScript.
    D. pobieranie i modyfikowanie elementów strony wyświetlonej przez przeglądarkę // Metody i własności obiektu DOM umożliwiają pobieranie i modyfikowanie elementów strony internetowej, która jest wyświetlana przez przeglądarkę. Można na przykład pobierać wartości pól formularza, dodawać, usuwać lub zmieniać elementy HTML, zmieniać style, a nawet dodawać interakcje i reakcje na interakcje użytkownika.
    
    615. Testy dotyczące skalowalności oprogramowania mają za zadanie sprawdzić, czy aplikacja
    A. ma odpowiednią funkcjonalność. // Testy dotyczące skalowalności oprogramowania mają za zadanie sprawdzić, czy aplikacja ma odpowiednią funkcjonalność.
    B. jest odpowiednio udokumentowana. // Testy dotyczące skalowalności oprogramowania mają za zadanie sprawdzić, czy aplikacja jest odpowiednio udokumentowana.
    C. potrafi działać przy zakładanym i większym obciążeniu. // Testy dotyczące skalowalności oprogramowania mają za zadanie sprawdzić, czy aplikacja potrafi działać przy zakładanym i większym obciążeniu.
    D. jest zabezpieczona przed niedozwolonymi operacjami, np. dzielenie przez zero. // Testy dotyczące skalowalności oprogramowania mają za zadanie sprawdzić, czy aplikacja jest zabezpieczona przed niedozwolonymi operacjami, np. dzielenie przez zero.
    
    616. Który z komentarzy opisuje zadanie zdefiniowanej w języku PHP funkcji? // pytanie posiada zdjecie D:

    617. W relacyjnych bazach danych, jeżeli dwie tabele są połączone za pomocą ich kluczy głównych, mamy do czynienia z relacją
    A. 1..1 // Relacja 1..1 w relacyjnej bazie danych oznacza, że między dwiema tabelami istnieje ściśle jedno-wielkościowe powiązanie. To oznacza, że każdy rekord w jednej tabeli jest powiązany tylko z jednym rekordem w drugiej tabeli i vice versa.
    B. 1..n // Relacja 1..n w relacyjnej bazie danych oznacza, że między dwiema tabelami istnieje jedno-wielu powiązanie. To oznacza, że dla każdego rekordu w jednej tabeli może być wiele powiązanych rekordów w drugiej tabeli, ale dla rekordu w drugiej tabeli istnieje tylko jedno powiązanie w pierwszej tabeli.
    C. n..1 // Relacja n..1 w relacyjnej bazie danych oznacza, że między dwiema tabelami istnieje wiele-jedno powiązanie. To oznacza, że dla każdego rekordu w jednej tabeli istnieje tylko jedno powiązanie w drugiej tabeli i vice versa, ale dla rekordów w drugiej tabeli może być wiele powiązań w pierwszej tabeli.
    D. n..n // Relacja n..n w relacyjnej bazie danych oznacza, że między dwiema tabelami istnieje wiele-wielu powiązanie. To oznacza, że dla każdego rekordu w jednej tabeli może istnieć wiele powiązanych rekordów w drugiej tabeli, i vice versa. Wynik takiej relacji wymaga użycia tabeli łączącej, która przechowuje informacje o połączeniach między tymi dwiema tabelami.
    
    618. Normalizacja tabel jest procesem, który ma na celu
    A. dodanie rekordów do bazy. // Dodanie rekordów do bazy.
    B. przedstawienie graficzne bazy. // Przedstawienie graficzne bazy.
    C. jedynie utworzenie tabel i relacji w bazie. // Jedynie utworzenie tabel i relacji w bazie.
    D. sprawdzenie i optymalizację bazy danych. // Sprawdzenie i optymalizacja bazy danych.
    
    619. Wbudowanym w pakiet XAMPP narzędziem służącym do zarządzania bazą danych jest
    A. MySQL Workbench // MySQL Workbench to narzędzie do zarządzania bazą danych wbudowane w pakiet XAMPP.
    B. phpMyAdmin // phpMyAdmin to narzędzie do zarządzania bazą danych wbudowane w pakiet XAMPP.
    C. pgAdmin // pgAdmin nie jest narzędziem wbudowanym w pakiet XAMPP.
    D. SQLite // SQLite nie jest narzędziem wbudowanym w pakiet XAMPP.
    
    620. Wskaż zapytanie, w którym dane zostały posortowane.
    A. SELECT DISTINCT produkt, cena FROM artykuly; // Punkt A wykonuje zapytanie SELECT DISTINCT, które zwraca unikalne wartości pary produkt-cena z tabeli artykuły. Dane w tym zapytaniu nie są posortowane.
    B. SELECT AVG(ocena) FROM uczniowie WHERE klasa = 2; // Punkt B wykonuje zapytanie SELECT AVG, które oblicza średnią wartość oceny uczniów z klasy 2. Dane w tym zapytaniu nie są posortowane.
    C. SELECT nazwisko FROM firma WHERE pensja > 2000 LIMIT 10; // Punkt C wykonuje zapytanie SELECT, które zwraca nazwiska z tabeli firma, gdzie pensja jest większa niż 2000. Następnie LIMIT 10 ogranicza liczbę zwróconych rekordów do 10. Dane w tym zapytaniu nie są posortowane.
    D. SELECT imie, nazwisko FROM mieszkancy WHERE wiek > 18 ORDER BY wiek; // Punkt D wykonuje zapytanie SELECT, które zwraca imię i nazwisko z tabeli mieszkańcy, gdzie wiek jest większy niż 18. Dalsza część zapytania ORDER BY wiek sortuje dane względem wieku rosnąco. Ta odpowiedź przedstawia zapytanie, w którym dane zostały posortowane.
    
    621. Funkcją agregującą zwracającą liczbę rekordów jest
    A. SUM // Funkcja SUM służy do agregowania danych i zwraca sumę wartości.
    B. AVG // Funkcja AVG służy do agregowania danych i zwraca średnią wartość.
    C. COUNT // Funkcja COUNT służy do agregowania danych i zwraca liczbę rekordów.
    D. NUMBER // Funkcja NUMBER nie istnieje w kontekście funkcji agregujących.
    
    622. Dana jest tabela zwierzeta z polami nazwa, gatunek, gromada, cechy, dlugosc_zycia. Dla dowolnego zestawu danych, aby wyświetlić nazwy tych zwierząt, które żyją przynajmniej 20 lat oraz są ssakami, należy wydać zapytanie:
    A. SELECT nazwa FROM zwierzeta WHERE gromada = ‘ssak‘; // W punkcie A zapytanie SELECT nazwa FROM zwierzeta WHERE gromada = 'ssak' pobiera nazwy zwierząt, które należą do gromady 'ssak'.
    B. SELECT nazwa FROM zwierzeta WHERE dlugosc_zycia >=20; // W punkcie B zapytanie SELECT nazwa FROM zwierzeta WHERE dlugosc_zycia >= 20 pobiera nazwy zwierząt, które mają długość życia równą lub większą niż 20 lat.
    C. SELECT nazwa FROM zwierzeta WHERE dlugosc_zycia >=20 AND gromada = ‘ssak‘; // W punkcie C zapytanie SELECT nazwa FROM zwierzeta WHERE dlugosc_zycia >= 20 AND gromada = 'ssak' pobiera nazwy zwierząt, które żyją przynajmniej 20 lat i należą do gromady 'ssak'.
    D. SELECT nazwa FROM zwierzeta WHERE dlugosc_zycia >=20 OR gromada = ‘ssak‘; // W punkcie D zapytanie SELECT nazwa FROM zwierzeta WHERE dlugosc_zycia >= 20 OR gromada = 'ssak' pobiera nazwy zwierząt, które mają długość życia równą lub większą niż 20 lat lub należą do gromady 'ssak'.
    
    623. W tabeli personel znajdują się pola: imie, nazwisko, pensja, staz. Aby otrzymać średnią pensję pracowników, dla których staż wynosi od 10 do 20 lat pracy włącznie, należy wykonać kwerendę:
    A. SELECT COUNT (pensja) FROM personel WHERE staz > = 10 AND staz < = 20; // Kwerenda A zlicza ilość wartości w polu pensja dla pracowników, których staż wynosi od 10 do 20 lat. Nie oblicza jednak średniej pensji.
    B. SELECT AVG(pensja) FROM personel WHERE staz >= 10 AND staz <= 20; // Kwerenda B oblicza średnią pensję pracowników, których staż wynosi od 10 do 20 lat. Jest to poprawna kwerenda do uzyskania średniej pensji.
    C. SELECT COUNT(*) FROM personel WHERE staz >= 10 AND staz <= 20; // Kwerenda C zlicza ilość wszystkich rekordów w tabeli personel, które spełniają warunek stażu od 10 do 20 lat.
    D. SELECT AVG (*) FROM personel WHERE staz > = 10 AND staz < = 20; // Kwerenda D nie jest poprawna, ponieważ używa AVG(*) zamiast AVG(pensja). Nie oblicza więc średniej pensji pracowników o określonym stażu.
    
    624. Zapytanie z klauzulą JOIN stosuje się, aby
    A. wywołać funkcję agregującą. // Klauzula JOIN w zapytaniu służy do wywołania funkcji agregującej.
    B. zdefiniować klucz obcy dla tabeli. // Klauzula JOIN w zapytaniu służy do zdefiniowania klucza obcego dla tabeli.
    C. otrzymać wynik jedynie z jednej tabeli. // Klauzula JOIN w zapytaniu nie ogranicza wyniku tylko do jednej tabeli.
    D. uzyskać wyniki z dwóch tabel pozostających ze sobą w relacji. // Klauzula JOIN w zapytaniu umożliwia uzyskanie wyników z dwóch tabel powiązanych ze sobą relacją.
    
    625. Aby usunąć tabelę należy zastosować kwerendę
    A. DELETE // Aby usunąć tabelę należy zastosować kwerendę DELETE. Jest to polecenie SQL, które służy do usuwania wierszy danych z tabeli. Działanie polega na wybraniu odpowiednich wierszy z tabeli i ich usunięciu.
    B. UNIQUE // Aby usunąć tabelę należy zastosować kwerendę UNIQUE. Jednakże, polecenie UNIQUE nie jest używane do usuwania tabeli, a do tworzenia unikalnych wartości w kolumnie tabeli. Działa poprzez zapewnienie, że żadna wartość w danej kolumnie nie będzie się powtarzać.
    C. DROP TABLE // Aby usunąć tabelę należy zastosować kwerendę DROP TABLE. Jest to polecenie SQL, które służy do usuwania całej tabeli w bazie danych. Działa poprzez usunięcie zarówno samej struktury tabeli, jak i wszystkich danych w niej zawartych.
    D. TRUNCATE TABLE // Aby usunąć tabelę należy zastosować kwerendę TRUNCATE TABLE. Jest to polecenie SQL, które służy do usuwania wszystkich danych z tabeli, pozostawiając jednak samą strukturę tabeli nienaruszoną. Działanie polega na usunięciu wszystkich wierszy z tabeli, ale nie usuwa samej tabeli.
    
    626. Za pomocą przedstawionego zapytania w tabeli zostanie // pytanie posiada zdjecie D:

    627. Które tabele zostaną sprawdzone za pomocą przedstawionego polecenia? // pytanie posiada zdjecie D:

    628. Jakie uprawnienia będzie miał użytkownik jan po wykonaniu na bazie danych przedstawionych poleceń? // pytanie posiada zdjecie D:

    629. Witryna internetowa wysyła dane poufne za pomocą formularza do kodu PHP. Która metoda wysłania jest najbardziej bezpieczna?
    A. Metoda GET, za pomocą protokołu HTTP // Metoda GET, za pomocą protokołu HTTP - jest to metoda wysłania danych, w której parametry są przekazywane w adresie URL. Jest mniej bezpieczna, ponieważ parametry są widoczne w adresie przeglądarki i mogą być łatwo przechwycone przez osoby trzecie.
    B. Metoda POST, za pomocą protokołu HTTP // Metoda POST, za pomocą protokołu HTTP - jest to metoda wysłania danych, w której parametry są przesyłane w ciele zapytania HTTP. Jest bardziej bezpieczna, ponieważ parametry nie są widoczne w adresie przeglądarki i trudniej je przechwycić.
    C. Metoda GET, za pomocą protokołu HTTPS // Metoda GET, za pomocą protokołu HTTPS - jest to metoda wysłania danych, w której parametry są przekazywane w adresie URL. Jednak w przeciwieństwie do metody GET, protokół HTTPS zapewnia szyfrowane połączenie, co dodatkowo zabezpiecza dane przed przechwyceniem.
    D. Metoda POST, za pomocą protokołu HTTPS // Metoda POST, za pomocą protokołu HTTPS - jest to metoda wysłania danych, w której parametry są przesyłane w ciele zapytania HTTP. W połączeniu z protokołem HTTPS, które zapewnia szyfrowane połączenie, jest to najbardziej bezpieczna metoda wysłania danych poufnych przez formularz internetowy.
    
    630. Przedstawiony fragment kodu PHP ma za zadanie umieścić dane znajdujące się w zmiennych $a, $b, $c w bazie danych, w tabeli dane. Tabela dane zawiera cztery pola, z czego pierwsze to autoinkrementowany klucz główny. Które z poleceń powinno być przypisane do zmiennej $zapytanie? // pytanie posiada zdjecie D:

    631. Witryna internetowa ma mieć przedstawioną strukturę bloków. Aby uzyskać ten układ, należy znacznikom sekcji przypisać właściwości w następujący sposób: // pytanie posiada zdjecie D:

    632. Podstawowym zadaniem systemu CMS jest oddzielenie treści serwisu informacyjnego od jego wyglądu. Efekt ten jest uzyskany poprzez generowanie zawartości
    A. z bazy danych oraz wyglądu ze zdefiniowanego szablonu. // System CMS oddziela treść serwisu informacyjnego od jego wyglądu poprzez generowanie zawartości z bazy danych oraz wyglądu ze zdefiniowanego szablonu.
    B. z bazy danych oraz wyglądu za pomocą atrybutów HTML. // System CMS oddziela treść serwisu informacyjnego od jego wyglądu poprzez generowanie zawartości z bazy danych oraz wyglądu za pomocą atrybutów HTML.
    C. ze statycznych plików HTML oraz wyglądu ze zdefiniowanego szablonu. // System CMS oddziela treść serwisu informacyjnego od jego wyglądu poprzez generowanie zawartości ze statycznych plików HTML oraz wyglądu ze zdefiniowanego szablonu.
    D. ze statycznych plików HTML oraz wyglądu za pomocą technologii FLASH. // System CMS oddziela treść serwisu informacyjnego od jego wyglądu poprzez generowanie zawartości ze statycznych plików HTML oraz wyglądu za pomocą technologii FLASH.
    
    633. W języku HTML znacznik < i > nadaje znakom taki sam wizualny efekt jak znacznik
    A. < u > // Znacznik <u> w języku HTML służy do podkreślania tekstu. Powoduje, że tekst zostaje podkreślony na stronie wizualnie.
    B. < em > // Znacznik <em> w języku HTML nadaje tekstowi wyróżnienie semantyczne, czyli informuje przeglądarkę, że dany fragment tekstu jest istotny dla znaczenia strony. Wizualnie może być wyświetlany kursywą.
    C. < pre > // Znacznik <pre> w języku HTML służy do wyświetlania tekstu z zachowaniem formatowania. Pozwala na wyświetlanie tekstu w monoszczurze i zachowanie odstępów oraz wcięć.
    D. < strong > // Znacznik <strong> w języku HTML nadaje tekstowi wyróżnienie semantyczne, informując przeglądarkę, że dany fragment jest ważniejszy od innych. Wizualnie może być wyświetlany pogrubieniem.
    
    634. Przedstawiono tabelę zdefiniowaną kodem HTML, bez formatowania CSS. Który z fragmentów kodu HTML odpowiada pierwszemu wierszowi tabeli? // pytanie posiada zdjecie D:

    635. Aby obraz wstawiony kodem HTML mógł być interpretowany przez programy wspomagające osoby niewidzące, należy zdefiniować atrybut
    A. alt // Aby obraz wstawiony kodem HTML mógł być interpretowany przez programy wspomagające osoby niewidzące, należy zdefiniować atrybut 'alt'. Ten atrybut zawiera tekstowy opis obrazu, który jest odczytywany przez oprogramowanie dla osób niewidzących, umożliwiając im zrozumienie zawartości wizualnej.
    B. src // Atrybut 'src' jest używany do określania adresu URL, pod którym znajduje się plik obrazu. Dzięki temu przeglądarka wie, skąd ma pobrać obraz i wstawić go na stronę.
    C. sizes // Atrybut 'sizes' jest używany do definiowania różnych rozmiarów obrazu, które mogą być wykorzystane w zależności od aktualnej szerokości okna przeglądarki. Przez zdefiniowanie tych rozmiarów, przeglądarka może zoptymalizować wyświetlanie obrazu, dostosowując go do dostępnej przestrzeni.
    D. border // Atrybut 'border' jest używany do określania szerokości granicy wokół obrazu. Może być ustalony jako liczba, określająca szerokość w pikselach, lub jako wartość '0' w przypadku braku granicy.
    
    636. Na obrazie przedstawiono efekt formatowania stylami CSS oraz kod HTML generujący ten przykład. Zakładając, że marginesy wewnętrzne wynoszą 50 px, a zewnętrzne wynoszą 20 px, styl CSS dla obrazu ma postać // pytanie posiada zdjecie D:

    637. W kodzie CSS zdefiniowano cztery klasy formatowania, których następnie użyto do formatowania paragrafów. Efekt widoczny na rysunku powstał po zastosowaniu klasy o nazwie // pytanie posiada zdjecie D:

    638. W jakim formacie należy zapisać obraz, aby mógł być wyświetlony na stronie internetowej z zachowaniem przezroczystości?
    A. JPG // Format JPG nie zachowuje przezroczystości i jest często używany do kompresji zdjęć.
    B. BMP // Format BMP nie zachowuje przezroczystości i jest często używany do przechowywania obrazów w wysokiej jakości.
    C. PNG // Format PNG jest idealny do zachowania przezroczystości, co pozwala na wyświetlanie obrazów z przeźroczystym tłem na stronach internetowych.
    D. CDR // Format CDR jest formatem znanym głównie w programie CorelDRAW, służącym do projektowania grafiki wektorowej.
    
    639. Na potrzeby strony internetowej przygotowano grafikę rysunek.jpg o rozmiarze: szerokość 200 px, wysokość 100 px. Aby wyświetlić tę grafikę jako miniaturę – pomniejszoną z zachowaniem proporcji, można zastosować znacznik
    A. < img src = "rysunek.png" > // Znacznik <img> z atrybutem src = "rysunek.png" nie pomniejsza grafiki rysunek.jpg, tylko wyświetla ją w oryginalnym rozmiarze.
    B. < img src = "rysunek.png" style = "width: 50px" > // Znacznik <img> z atrybutem src = "rysunek.png" i stylem width: 50px pomniejsza grafikę rysunek.jpg proporcjonalnie do szerokości 50 pikseli.
    C. < img src = "rysunek.png" style = "width: 25px; height: 50px" > // Znacznik <img> z atrybutem src = "rysunek.png" i stylem width: 25px; height: 50px pomniejsza grafikę rysunek.jpg do szerokości 25 pikseli i wysokości 50 pikseli, niezachowując proporcji.
    D. < img src = "rysunek.png" style = "width: 25px; height: 25px" > // Znacznik <img> z atrybutem src = "rysunek.png" i stylem width: 25px; height: 25px pomniejsza grafikę rysunek.jpg do szerokości 25 pikseli i wysokości 25 pikseli, niezachowując proporcji.
    
    640. Której funkcji edytora grafiki rastrowej należy użyć, aby przygotować rysunek do wyświetlenia na stronie w ten sposób, żeby było widoczne tylko to, co znajduje się w ramce? // pytanie posiada zdjecie D:

    641. Przedstawiony fragment dokumentu HTML z kodem JavaScript spowoduje, że po wciśnięciu przycisku // pytanie posiada zdjecie D:

    642. Co spowoduje fragment skryptu w języku JavaScript? // pytanie posiada zdjecie D:

    643. Przedstawiony kod PHP nawiązuje połączenie z serwerem bazy danych. Jakiego typu operacje powinny się znaleźć w instrukcji warunkowej w miejscu trzech kropek? // pytanie posiada zdjecie D:

    644. Który znacznik należący do sekcji head dokumentu HTML w wersji 5 jest wymagany przez walidator języka HTML, a jego brak jest zgłaszany jako błąd (error)?
    A. title // Znacznik <title> jest używany w sekcji <head> dokumentu HTML w wersji 5. Służy do określania tytułu strony, który widnieje na pasku tytułowym przeglądarki oraz jest wykorzystywany przez wyszukiwarki internetowe. Jest wymagany przez walidator języka HTML, a jego brak jest zgłaszany jako błąd (error).
    B. link // Znacznik <link> jest używany w sekcji <head> dokumentu HTML w wersji 5. Służy do łączenia zewnętrznych plików CSS oraz innych zasobów, takich jak czcionki czy ikony. Jest opcjonalny i nie jest wymagany przez walidator języka HTML.
    C. metą // Znacznik <meta> jest używany w sekcji <head> dokumentu HTML w wersji 5. Służy do określania metadanych strony, takich jak jej opis, słowa kluczowe czy kodowanie znaków. Jest opcjonalny i nie jest wymagany przez walidator języka HTML.
    D. style // Znacznik <style> jest używany w sekcji <head> dokumentu HTML w wersji 5. Służy do definiowania stylów CSS bezpośrednio w pliku HTML. Pozwala na modyfikację wyglądu elementów na stronie. Jest opcjonalny i nie jest wymagany przez walidator języka HTML.
    
    645. Za pomocą którego protokołu można opublikować stronę internetową na serwerze?
    A. FTP // Protokół FTP (File Transfer Protocol) umożliwia publikację stron internetowych na serwerze. Jest to protokół służący do transferu plików między hostami w sieci. Działa na zasadzie klient-serwer, gdzie klient wysyła żądanie o przesłanie pliku na serwer, a serwer go udostępnia. Dzięki temu możliwe jest przekazywanie plików z lokalnego komputera na serwer, co umożliwia publikację stron internetowych na serwerze.
    B. ICMP // Protokół ICMP (Internet Control Message Protocol) nie służy do publikowania stron internetowych na serwerze. Jest to protokół, który jest używany głównie do diagnostyki i zarządzania siecią. ICMP jest odpowiedzialny za przesyłanie komunikatów o błędach i informacji o stanie sieci, ale nie jest wykorzystywany do publikacji stron internetowych.
    C. SMTP // Protokół SMTP (Simple Mail Transfer Protocol) służy do wysyłania i odbierania wiadomości e-mail. Nie jest wykorzystywany do publikowania stron internetowych na serwerze. SMTP działa na zasadzie klient-serwer, gdzie klient wysyła wiadomość e-mail, a serwer przekazuje ją do docelowego serwera. Dzięki temu użytkownicy mogą wymieniać się wiadomościami e-mail.
    D. NNTP // Protokół NNTP (Network News Transfer Protocol) służy przede wszystkim do dostępu do grup dyskusyjnych w sieci Usenet. Nie jest wykorzystywany do publikowania stron internetowych na serwerze. NNTP umożliwia przekazywanie wiadomości w grupach dyskusyjnych między serwerami, co umożliwia udział w różnych dyskusjach tematycznych.
    
    646. W przedstawionym fragmencie algorytmu zastosowano // pytanie posiada zdjecie D:

    647. Do optymalnej realizacji algorytmu szukającego największej z trzech podanych liczb a, b i c, wystarczy
zastosować
    A. jedną pętlę. // Jedna pętla wystarczy do optymalnej realizacji algorytmu szukającego największej z trzech podanych liczb a, b i c. W tej pętli można porównać kolejno wartości a, b i c i znaleźć największą z nich.
    B. dwie tablice. // Dwie tablice nie są potrzebne do optymalnej realizacji tego algorytmu. Korzystając tylko z jednej pętli i porównując wartości a, b i c, można znaleźć największą z nich.
    C. dwa warunki. // Do optymalnej realizacji algorytmu wystarczy zastosowanie dwóch warunków, które będą porównywać wartości a, b i c. Po sprawdzeniu obu warunków można znaleźć największą z tych trzech liczb.
    D. pięć zmiennych. // Do optymalnej realizacji tego algorytmu nie są potrzebne pięć zmiennych. Wystarczy jedna zmienna, do której będzie przypisywana największa wartość spośród a, b i c.
    
    648. Które wyrażenie logiczne w języku PHP sprawdza, czy zmienna1 należy do przedziału jednostronnie
domkniętego <-5, 10)?
    A. $zmienna1 >= -5 || $zmienna1 < 10 // W odpowiedzi A sprawdzamy, czy zmienna1 jest większa lub równa -5 lub mniejsza niż 10. Jeśli tak, to wyrażenie jest prawdziwe.
    B. $zmienna1 <= -5 || $zmienna1 < 10 // W odpowiedzi B sprawdzamy, czy zmienna1 jest mniejsza lub równa -5 lub mniejsza niż 10. Jeśli tak, to wyrażenie jest prawdziwe.
    C. $zmienna1 >= -5 && $zmienna1 < 10 // W odpowiedzi C sprawdzamy, czy zmienna1 jest większa lub równa -5 i jednocześnie mniejsza niż 10. Jeśli tak, to wyrażenie jest prawdziwe.
    D. $zmienna1 <= -5 && $zmienna1 < 10 // W odpowiedzi D sprawdzamy, czy zmienna1 jest mniejsza lub równa -5 i jednocześnie mniejsza niż 10. Jeśli tak, to wyrażenie jest prawdziwe.
    
    649. Przedstawiona w języku C++ definicja typu wyliczeniowego sprawi, że enumerator CZWARTEK będzie
równy // pytanie posiada zdjecie D:

    650. Tablica tab[] jest wypełniona dowolnymi liczbami całkowitymi. Jaka wartość znajdzie się w zmiennej zm2
po wykonaniu prezentowanego fragmentu kodu? // pytanie posiada zdjecie D:

    651. W języku JavaScript metoda getElementById odwołuje się do
    A. zmiennej liczbowej. // Metoda getElementById odwołuje się do zmiennej liczbowej.
    B. klasy zdefiniowanej w CSS. // Metoda getElementById odwołuje się do klasy zdefiniowanej w CSS.
    C. znacznika HTML o podanym id. // Metoda getElementById odwołuje się do znacznika HTML o podanym id.
    D. znacznika HTML o podanej nazwie klasy. // Metoda getElementById odwołuje się do znacznika HTML o podanej nazwie klasy.
    
    652. W języku C++ funkcja zwracająca wynik potęgowania, działająca na dwóch parametrach wejściowych:
liczbie x i wykładniku w, ma deklarację
    A. int potega(int x); // Funkcja potega przyjmuje jeden parametr wejściowy - liczbe x, i zwraca wynik potęgowania tego parametru. Jest zadeklarowana jako int potega(int x);
    B. int potega(int x, int w); // Funkcja potega przyjmuje dwa parametry wejściowe - liczbe x i wykładnik w, i zwraca wynik potęgowania x^w. Jest zadeklarowana jako int potega(int x, int w);
    C. void potega(int x, int w); // Funkcja potega przyjmuje dwa parametry wejściowe - liczbe x i wykładnik w. Nie zwraca wyniku potęgowania, ale może wykonać inne operacje. Jest zadeklarowana jako void potega(int x, int w);
    D. void potega(int x, int w, int wynik); // Funkcja potega przyjmuje trzy parametry wejściowe - liczbe x, wykładnik w oraz zmienną wynik, do której zostanie zapisany wynik potęgowania. Nie zwraca żadnej wartości. Jest zadeklarowana jako void potega(int x, int w, int wynik);
    
    653. Aby skorzystać ze skryptu zapisanego w pliku przyklad.js, należy połączyć go ze stroną za pomocą kodu
    A. < script > przyklad.js < /script > // Punkt A polega na dołączeniu skryptu zapisanego w pliku przyklad.js do strony za pomocą tagu script. Skrypt ten zostanie wykonany przy ładowaniu strony.
    B. < script src="przyklad.js" > < /script > // Punkt B polega na dołączeniu skryptu zapisanego w pliku przyklad.js do strony za pomocą tagu script i określeniu ścieżki do pliku przyklad.js w atrybucie src. Skrypt ten zostanie wykonany przy ładowaniu strony.
    C. < script link="przyklad.js" > < /script > // Punkt C jest niepoprawny. Nie istnieje tag script z atrybutem link. Prawidłowy tag to script z atrybutem src.
    D. < link rel="script" href="przyklad.js" > // Punkt D jest niepoprawny. Tag link jest używany do podłączania stylów CSS, a nie skryptów JavaScript. Prawidłowy tag to script z atrybutem src.
    
    654. Programista napisał w języku C++ pętlę, która miała obliczyć wynik działania 5! (5! = 1 * 2 * 3 * 4 * 5).
Popełnił jednak błąd logiczny polegający na tym, że // pytanie posiada zdjecie D:

    655. Który ze sposobów komentowania kodu nie jest stosowany w kodzie PHP?
    A. # komentarz // A. # komentarz - ten sposób komentowania nie jest stosowany w kodzie PHP. Komentarze rozpoczynające się od znaku # są używane na przykład w języku Python.
    B. // komentarz // B. // komentarz - ten sposób komentowania jest powszechnie używany w PHP. Komentarze rozpoczynające się od dwóch ukośników podwójnych są ignorowane przez interpreter PHP.
    C. /* komentarz */ // C. /* komentarz */ - ten sposób komentowania jest również powszechnie stosowany w PHP. Komentarze umieszczone między /* a */ są ignorowane przez interpreter PHP.
    D. < !-- komentarz -- > // D. <!-- komentarz --> - ten sposób komentowania jest stosowany w języku HTML, a nie w PHP. Komentarze w HTML rozpoczynają się od <!-- i kończą -->.
    
    656. Klucz obcy w tabeli jest tworzony po to, aby
    A. łączyć go z innymi kluczami obcymi tabeli. // Klucz obcy w tabeli jest tworzony po to, aby łączyć go z innymi kluczami obcymi tabeli.
    B. stworzyć formularz wpisujący dane do tabeli. // Klucz obcy w tabeli nie ma bezpośredniego związku z tworzeniem formularza wpisującego dane do tabeli.
    C. umożliwić jednoznaczną identyfikację rekordu w tabeli. // Klucz obcy w tabeli umożliwia jednoznaczną identyfikację rekordu w tabeli.
    D. zdefiniować relację 1..n wiążącą go z kluczem głównym innej tabeli. // Klucz obcy w tabeli jest wykorzystywany do zdefiniowania relacji 1..n, wiążącej go z kluczem głównym innej tabeli.
    
    657. Które ze stwierdzeń dotyczących klucza podstawowego jest prawdziwe?
    A. Jest unikalny w obrębie tabeli. // Klucz podstawowy jest unikalny w obrębie tabeli, co oznacza, że każdy wiersz w tabeli musi mieć inny klucz podstawowy. Jest to ważne, ponieważ umożliwia jednoznaczne identyfikowanie i rozróżnianie poszczególnych wierszy.
    B. Składa się tylko z jednego pola. // Klucz podstawowy może składać się tylko z jednego pola, co oznacza, że jest to pojedyncza kolumna w tabeli. Jest to istotne, ponieważ upraszcza strukturę tabeli, umożliwiając bardziej efektywne wyszukiwanie i porównywanie danych.
    C. Może przyjmować tylko wartości liczbowe. // Klucz podstawowy może przyjmować różne wartości, nie tylko liczbowe. Może to być na przykład tekst lub data. Jest to istotne, ponieważ umożliwia przechowywanie i identyfikowanie różnych typów danych w tabeli.
    D. Dla tabeli z danymi osobowymi może być to pole nazwisko. // Dla tabeli z danymi osobowymi kluczem podstawowym może być pole nazwisko. Oznacza to, że każda osoba w tabeli będzie miała unikalne nazwisko, co ułatwia identyfikację i wyszukiwanie konkretnych osób.
    
    658. W języku SQL aby zmodyfikować dane w tabeli, należy posłużyć się poleceniem
    A. CREATE // Polecenie CREATE służy do tworzenia nowej tabeli w bazie danych.
    B. UPDATE // Polecenie UPDATE służy do modyfikacji danych w tabeli, czyli aktualizowania wartości w istniejących rekordach.
    C. SELECT // Polecenie SELECT służy do wyświetlania danych z tabeli, czyli pobierania informacji z bazy danych.
    D. JOIN // Polecenie JOIN służy do łączenia danych z dwóch lub więcej tabel na podstawie wspólnego klucza.
    
    659. Które zapytanie SQL posłuży do wyszukania z przedstawionej tabeli wyłącznie wszystkich imion i nazwisk
pacjentów urodzonych przed rokiem 2002? // pytanie posiada zdjecie D:

    660. Aby utworzyć tabelę, należy się posłużyć poleceniem
    A. INSERT INTO // Polecenie INSERT INTO służy do wstawienia danych do istniejącej tabeli.
    B. ALTER TABLE // Polecenie ALTER TABLE służy do modyfikacji struktury istniejącej tabeli.
    C. CREATE TABLE // Polecenie CREATE TABLE służy do tworzenia nowej tabeli.
    D. CREATE DATABASE // Polecenie CREATE DATABASE służy do tworzenia nowej bazy danych.
    
    661. Wynikiem uruchomienia zapytania SQL jest // pytanie posiada zdjecie D:

    662. Aby wyświetlić jedynie imię, nazwisko i ulicę wszystkich mieszkańców, należy zastosować zapytanie // pytanie posiada zdjecie D:

    663. Przedstawiona baza danych zawiera trzy tabele i dwie relacje. Aby wyświetlić dane wszystkich lekarzy
przypisanych do konkretnego pacjenta, należy przyrównać klucze // pytanie posiada zdjecie D:

    664. W wyniku połączenia relacją kluczy głównych dwóch tabel otrzymuje się relację typu 
    A. wiele do wielu. // Relacja typu wiele do wielu oznacza, że jeden rekord w tabeli może być powiązany z wieloma rekordami w drugiej tabeli, a jednocześnie jeden rekord w drugiej tabeli może być powiązany z wieloma rekordami w tabeli pierwszej.
    B. jeden do wielu. // Relacja typu jeden do wielu oznacza, że jeden rekord w tabeli może być powiązany z wieloma rekordami w drugiej tabeli, ale rekord w drugiej tabeli może być powiązany tylko z jednym rekordem z tabeli pierwszej.
    C. jeden do jednego. // Relacja typu jeden do jednego oznacza, że jeden rekord w tabeli może być powiązany z tylko jednym rekordem w drugiej tabeli, a jednocześnie rekord w drugiej tabeli może być powiązany tylko z jednym rekordem z tabeli pierwszej.
    D. wiele do jednego. // Relacja typu wiele do jednego oznacza, że wiele rekordów w tabeli może być powiązanych z jednym rekordem w drugiej tabeli, ale rekord w drugiej tabeli może być powiązany z wieloma rekordami z tabeli pierwszej.
    
    665. Obiektem służącym w bazie danych do podsumowywania, wyświetlania i wydruków danych jest
    A. raport. // Raporty są obiektami w bazie danych, które służą do podsumowywania, wyświetlania i drukowania danych. Mogą zawierać różne informacje i statystyki z bazy danych i są często używane do generowania raportów dla użytkowników.
    B. zapytanie. // Zapytanie to obiekt w bazie danych, który służy do wyszukiwania konkretnych informacji. Za pomocą zapytań można filtrować dane, sortować je lub przeprowadzać różne operacje na bazie danych, aby uzyskać potrzebne informacje.
    C. formularz. // Formularze są obiektami w bazie danych, które pozwalają użytkownikom wprowadzać, edytować i przeglądać dane. Umożliwiają interakcję między użytkownikiem a bazą danych, dzięki czemu można łatwo dodawać lub aktualizować dane w bazie.
    D. zestawienie. // Zestawienie to obiekt w bazie danych, który służy do prezentacji danych w formie tabel lub wykresów. Mogą to być na przykład raporty z różnymi danymi numerycznymi, które są podsumowane i przedstawione w bardziej czytelny sposób.
    
    666. Za pomocą polecenia ALTER TABLE można
    A. usuwać tabelę. // Polecenie ALTER TABLE umożliwia usuwanie tabeli.
    B. tworzyć tabelę. // Polecenie ALTER TABLE umożliwia tworzenie tabeli.
    C. modyfikować strukturę tabeli. // Polecenie ALTER TABLE umożliwia modyfikowanie struktury tabeli.
    D. modyfikować wartości zapisane w rekordach tabeli. // Polecenie ALTER TABLE umożliwia modyfikowanie wartości zapisanych w rekordach tabeli.
    
    667. W bazie danych zdefiniowano tabelę Mieszkancy wypełnioną danymi. Aby usunąć tę tabelę wraz
z zawartością, należy posłużyć się poleceniem
    A. DROP TABLE Mieszkancy; // Polecenie DROP TABLE służy do usuwania tabeli wraz z jej zawartością w bazie danych
    B. DELETE FROM Mieszkancy; // Polecenie DELETE FROM służy do usuwania danych znajdujących się w tabeli, ale nie usuwa samej tabeli
    C. ALTER TABLE Mieszkancy; // Polecenie ALTER TABLE służy do modyfikacji tabeli, np. dodawania, usuwania lub zmiany nazwy kolumn
    D. TRUNCATE TABLE Mieszkancy; // Polecenie TRUNCATE TABLE służy do usunięcia wszystkich danych z tabeli, ale zachowuje strukturę tabeli
    
    668. Aby odebrać uprawnienia użytkownikowi, należy zastosować polecenie
    A. DELETE // Polecenie DELETE służy do usuwania danych, nie ma zastosowania w przypadku odebrania uprawnień użytkownikowi.
    B. REVOKE // Polecenie REVOKE jest używane do odebrania uprawnień użytkownikowi. Poprawnie możemy go zastosować w celu odebrania uprawnień.
    C. DELETE PRIVILEGES // Polecenie DELETE PRIVILEGES nie istnieje w kontekście odebrania uprawnień użytkownikowi.
    D. GRANT NO PRIVILEGES // Polecenie GRANT NO PRIVILEGES nie służy do odebrania uprawnień użytkownikowi, a jedynie do przyznania uprawnień bez możliwości ich nadawania dalej.
    
    669. Aby aplikacja PHP mogła komunikować się z bazą danych, niezbędne jest w pierwszej kolejności wywołanie
funkcji o nazwie
    A. mysqli_close // Funkcja mysqli_close służy do zamknięcia połączenia z bazą danych w aplikacji PHP.
    B. mysqli_connect // Funkcja mysqli_connect pozwala na nawiązanie połączenia z bazą danych w aplikacji PHP.
    C. mysql_select_db // Funkcja mysql_select_db jest używana do wyboru konkretnej bazy danych, z którą aplikacja PHP będzie komunikować się.
    D. mysql_create_db // Funkcja mysql_create_db została oznaczona jako nieaktualna i nie powinna być już używana. Służyła do tworzenia nowej bazy danych w aplikacji PHP.
    
    670. Który z wymienionych znaczników języka HTML może posłużyć do budowy struktury strony internetowej?
    A. < em > // Znacznik <em> służy do wyróżnienia tekstu jako wyróżnienie pochodzącego z innego kontekstu.
    B. < aside > // Znacznik <aside> służy do oznaczania bloku treści mającego małe znaczenie w kontekście głównej treści strony.
    C. < input > // Znacznik <input> służy do tworzenia interaktywnych pól do wpisywania danych, takich jak formularze.
    D. < mark > // Znacznik <mark> służy do wyróżniania fragmentów tekstu jako ważnych lub interesujących.
    
    671. Logo systemu CMS o nazwie Joomla! to // pytanie posiada zdjecie D:

    672. Język HTML dysponuje nagłówkami do budowania hierarchii treści. Nagłówki te występują jedynie
w zakresie
    A. h1 – h4 // Nagłówki h1 - h4 w języku HTML służą do budowania hierarchii treści. Są to elementy używane do oznaczania różnych poziomów nagłówków na stronie internetowej.
    B. h1 – h6 // Nagłówki h1 - h6 w języku HTML są używane do budowania hierarchii treści. Pozwalają one na oznaczanie różnych poziomów nagłówków na stronie internetowej.
    C. h1 – h8 // Nagłówki h1 - h8 nie występują w języku HTML. Jedynie nagłówki h1 - h6 są dostępne do budowania hierarchii treści.
    D. h1 – h10 // Nagłówki h1 - h10 nie występują w języku HTML. Jedynie nagłówki h1 - h6 są dostępne do budowania hierarchii treści.
    
    673. W języku HTML zdefiniowano odnośnik do strony internetowej. Aby strona otwierała się w nowym oknie
lub zakładce przeglądarki, należy dopisać do definicji odnośnika atrybut // pytanie posiada zdjecie D:

    674. Która lista jest interpretacją przedstawionego kodu? // pytanie posiada zdjecie D:

    675. Na potrzeby strony internetowej zdefiniowano styl. Styl będzie przypisany tylko do niektórych znaczników
(np. niektórych nagłówków, kilku akapitów). W takim wypadku, aby przypisać styl do kilku konkretnych
znaczników, najlepiej jest zastosować  // pytanie posiada zdjecie D:

    676. Aby zdefiniować krój czcionki w stylu CSS, należy użyć właściwości
    A. text-style // Właściwość 'text-style' nie istnieje w CSS. Aby zdefiniować krój czcionki, należy użyć właściwości 'font-style'.
    B. font-style // Właściwość 'font-style' służy do definiowania króju czcionki w CSS.
    C. text-family // Właściwość 'text-family' nie istnieje w CSS. Aby zdefiniować rodzinę czcionek, należy użyć właściwości 'font-family'.
    D. font-family // Właściwość 'font-family' służy do definiowania rodzin czcionek w CSS.
    
    677. Który z obrazów został sformatowany za pomocą przedstawionego stylu CSS? // pytanie posiada zdjecie D:

    678. Aby na stronie internetowej wyświetlić logo, którego tło jest przezroczyste, należy zastosować format
    A. JPG // Format JPG jest idealny do wyświetlania zdjęć na stronach internetowych. Jednak nie umożliwia zachowania przezroczystego tła.
    B. CDR // Format CDR jest używany głównie przez programy graficzne CorelDRAW. Nie jest to odpowiedni format do wyświetlania logo z przezroczystym tłem na stronie internetowej.
    C. PNG // Format PNG jest często używany do wyświetlania grafiki na stronach internetowych. Dzięki obsłudze przezroczystości, logo z tłem przezroczystym wygląda estetycznie i dobrze się prezentuje.
    D. BMP // Format BMP jest formatem pliku mapy bitowej. Choć może wyświetlać obrazy wysokiej jakości, nie obsługuje przezroczystości, dlatego nie jest odpowiedni do wyświetlania logo z przezroczystym tłem na stronie internetowej.
    
    679. Aby obraz umieszczony na stronie internetowej automatycznie skalował się do rozmiaru ekranu, na którym
jest wyświetlana strona, należy
    A. oba jego wymiary ustawić w pikselach.  // Aby obraz umieszczony na stronie internetowej automatycznie skalował się do rozmiaru ekranu, na którym jest wyświetlana strona, należy ustawić oba jego wymiary w pikselach.
    B. jeden z jego wymiarów ustawić w pikselach. // Aby obraz umieszczony na stronie internetowej automatycznie skalował się do rozmiaru ekranu, na którym jest wyświetlana strona, wystarczy  ustawić jeden z jego wymiarów w pikselach.
    C. nie modyfikować obu jego wymiarów stylami CSS. // Aby obraz umieszczony na stronie internetowej automatycznie skalował się do rozmiaru ekranu, na którym jest wyświetlana strona, nie należy modyfikować obu jego wymiarów stylami CSS.
    D. jego szerokość ustawić w wartościach procentowych. // Aby obraz umieszczony na stronie internetowej automatycznie skalował się do rozmiaru ekranu, na którym jest wyświetlana strona, należy ustawić jego szerokość w wartościach procentowych.
    
    680. W procesie przygotowywania grafiki na stronę internetową należy wyciąć jedynie jej fragment. Taka
operacja to
    A. skalowanie.
 // W punkcie A, skalowanie jest operacją zmiany rozmiaru obrazu. Może być używane do powiększania lub pomniejszania grafiki na stronie internetowej.
    B. kadrowanie. // W punkcie B, kadrowanie jest operacją wycięcia jedynie fragmentu obrazu. Pozwala na dostosowanie wyglądu grafiki do wymagań strony internetowej.
    C. odbicie obrazu // W punkcie C, odbicie obrazu jest operacją lustrzanego odwrócenia grafiki. Może być używane do uzyskania efektu symetrii lub odwrócenia obiektu na stronie internetowej.
    D. łączenie warstw. // W punkcie D, łączenie warstw to operacja, która pozwala na scalenie różnych elementów obrazu. Można używać jej do tworzenia efektów specjalnych lub kompozycji na stronie internetowej.
    
    681. W aplikacji internetowej komunikat powinien pojawiać się tylko wtedy, gdy dany użytkownik jest na stronie
po raz pierwszy. Którą funkcję PHP należy w tym celu zastosować?
    A. define // Funkcja define służy do definiowania stałych w PHP. Nie ma ona zastosowania w tym przypadku.
    B. setcookie // Funkcja setcookie służy do ustawiania ciasteczka na komputerze użytkownika. Może być użyta w celu zapisania informacji o tym, czy dany użytkownik jest na stronie po raz pierwszy.
    C. session_destroy // Funkcja session_destroy służy do niszczenia sesji w PHP. Nie ma ona zastosowania w tym przypadku.
    D. mysqli_change_user // Funkcja mysqli_change_user służy do zmiany użytkownika bieżącej połączonej bazy danych MySQL. Nie ma ona zastosowania w tym przypadku.
    
    682. Przedstawiona definicja formularza została zastosowana na stronie internetowej, która wysyła dane do pliku
zapisanego w języku PHP. W której tablicy będą dostępne dane z formularza? // pytanie posiada zdjecie D:

    683. W skrypcie JavaScript zastosowano metodę DOM getElementsByClassName('akapit'). Metoda ta
odwoła się do akapitu
    A. < p > akapit < /p > // Punkt A to oznaczenie akapitu w znacznikach <p>. Należy podać odpowiedni identyfikator (id) w atrybucie 'class', który zostanie użyty w metodzie getElementsByClassName(). W tym przypadku nie jest to poprawne oznaczenie akapitu.
    B. < p id="akapit" > akapit2 < /p > // Punkt B to oznaczenie akapitu w znacznikach <p>. Należy podać odpowiedni identyfikator (id) w atrybucie 'class', który zostanie użyty w metodzie getElementsByClassName(). W tym przypadku nie jest to poprawne oznaczenie akapitu.
    C. < p href="akapit" > akapit3 < /p > // Punkt C to oznaczenie akapitu w znacznikach <p>. Należy podać odpowiedni identyfikator (id) w atrybucie 'class', który zostanie użyty w metodzie getElementsByClassName(). W tym przypadku nie jest to poprawne oznaczenie akapitu.
    D. < p class="akapit" > akapit4 < /p > // Punkt D to oznaczenie akapitu w znacznikach <p>. Należy podać odpowiedni identyfikator (id) w atrybucie 'class', który zostanie użyty w metodzie getElementsByClassName(). W tym przypadku jest to poprawne oznaczenie akapitu.
    
    684. Dla przedstawionego fragmentu kodu walidator HTML zwróci błąd, ponieważ // pytanie posiada zdjecie D:

    685. Program FileZilla może posłużyć do
    A. kompilacji skryptu na stronie. // Program FileZilla nie służy do kompilacji skryptu na stronie. Ma on jednak inne zastosowanie, które polega na publikacji strony internetowej.
    B. walidacji strony internetowej. // Program FileZilla nie służy do walidacji strony internetowej. Ma on jednak inne zastosowanie, które polega na publikacji strony internetowej.
    C. publikacji strony internetowej. // Program FileZilla służy do publikacji strony internetowej. Dzięki niemu możemy przesyłać pliki strony na serwer, umożliwiając jej dostępność w sieci.
    D. debugowania skryptu na stronie.  // Program FileZilla nie służy do debugowania skryptu na stronie. Ma on jednak inne zastosowanie, które polega na publikacji strony internetowej.
    
    686. Która wartość zostanie wypisana przez algorytm? // pytanie posiada zdjecie D:

    687. Wskaż złożoność obliczeniową algorytmu naiwnego (zwykłego) wyszukiwania minimum w zbiorze liczb?
    A. O(n) // Złożoność obliczeniowa algorytmu naiwnego (zwykłego) wyszukiwania minimum w zbiorze liczb wynosi O(n), co oznacza, że czas potrzebny do wykonania algorytmu jest liniowo zależny od rozmiaru zbioru liczb. Algorytm porównuje każdą liczbę ze wszystkimi pozostałymi liczbami w zbiorze, aby znaleźć najmniejszą wartość.
    B. O(n2) // Złożoność obliczeniowa O(n^2) oznacza, że czas wykonania algorytmu jest kwadratowo zależny od rozmiaru zbioru liczb. Może to być wynik stosowania dwóch pętli zagnieżdżonych, gdzie każda pętla iteruje po wszystkich elementach zbioru.
    C. O(n3) // Złożoność obliczeniowa O(n^3) oznacza, że czas wykonania algorytmu jest sześciokrotnie zależny od rozmiaru zbioru liczb. Może to być wynik stosowania trzech pętli zagnieżdżonych, gdzie każda pętla iteruje po wszystkich elementach zbioru.
    D. O(n!) // Złożoność obliczeniowa O(n!) oznacza, że czas wykonania algorytmu rośnie bardzo szybko wraz ze wzrostem rozmiaru zbioru liczb. Oznacza to, że czas potrzebny do wykonania algorytmu jest równy iloczynowi wszystkich liczb mniejszych lub równych rozmiarowi zbioru.
    
    688. Do którego pola klasy Dane możliwy będzie dostęp z zewnątrz poprzez nazwę obiektu utworzonego jako instancja tej klasy? // pytanie posiada zdjecie D:

    689. W języku JavaScript utworzono obiekt. Aby pobrać wartość własności w można zapisać // pytanie posiada zdjecie D:

    690. W języku PHP zainicjowano zmienną $a wartością 1. Porównanie $a === $b przyjmuje wartość true, w przypadku, gdy zmienna $b jest zainicjowana wartością
    A. *1 // Porównanie $a === $b przyjmuje wartość true, gdy zmienna $b jest zainicjowana wartością 1.
    B. '1' // Porównanie $a === $b nie przyjmuje wartości true, gdy zmienna $b jest zainicjowana wartością '1'.
    C. 1 // Porównanie $a === $b przyjmuje wartość true, gdy zmienna $b jest zainicjowana wartością 1.
    D. "1" lub '1' // Porównanie $a === $b przyjmuje wartość true, gdy zmienna $b jest zainicjowana wartością '1' lub "1".
    
    691. Która pętla w języku PHP pozwala wykonać operacje na wszystkich elementach tablicy z automatycznym indeksowaniem jej elementów?
    A. for // Pętla for pozwala wykonać operacje na wszystkich elementach tablicy z automatycznym indeksowaniem jej elementów. W pętli for określamy początkowe wartości licznika, warunek kontynuacji pętli oraz sposób zwiększania licznika. Dzięki temu możemy przejść przez wszystkie elementy tablicy i wykonać na nich określone operacje.
    B. while // Pętla while pozwala wykonać operacje na wszystkich elementach tablicy z automatycznym indeksowaniem jej elementów. W pętli while określamy warunek kontynuacji pętli. Pętla będzie wykonywana dopóki warunek będzie spełniony. Dzięki temu możemy przejść przez wszystkie elementy tablicy i wykonać na nich określone operacje.
    C. foreach // Pętla foreach pozwala wykonać operacje na wszystkich elementach tablicy z automatycznym indeksowaniem jej elementów. W pętli foreach iterujemy przez tablicę i każdemu jej elementowi przypisujemy wartość do zmiennej tymczasowej. Dzięki temu możemy łatwo wykonywać operacje na wszystkich elementach tablicy bez konieczności zdefiniowania indeksów.
    D. do...while // Pętla do...while pozwala wykonać operacje na wszystkich elementach tablicy z automatycznym indeksowaniem jej elementów. W pętli do...while najpierw wykonywany jest blok instrukcji, a następnie sprawdzany jest warunek kontynuacji pętli. Pętla będzie wykonywana dopóki warunek będzie spełniony. Dzięki temu możemy przejść przez wszystkie elementy tablicy i wykonać na nich określone operacje.
    
    692. Wskaż wynik wykonania przedstawionego kodu PHP, jeżeli zmienna tab jest tablicą. // pytanie posiada zdjecie D:

    693. Zapisaną językiem PHP funkcję o nazwie policz wywołano z argumentem $Z = 1. Jaki wynik zostanie zwrócony? // pytanie posiada zdjecie D:

    694. Wskaż funkcję JavaScript, za pomocą której można obliczyć połowę kwadratu liczby przekazanej jako argument.
    A. function wynik(a) { return a/2+a/2; } // Funkcja wynik(a) działa poprzez obliczenie kwadratu liczby przekazanej jako argument, a następnie podzielenie go przez 2. Wynik jest zwracany jako wynik funkcji.
    B. function wynik(a) { return a*2/2; } // Funkcja wynik(a) działa poprzez pomnożenie liczby przekazanej jako argument przez 2, a następnie podzielenie tego wyniku przez 2. Wynik jest zwracany jako wynik funkcji.
    C. function wynik(a) { return a*a/2; } // Funkcja wynik(a) działa poprzez podniesienie liczby przekazanej jako argument do kwadratu, a następnie podzielenie tego wyniku przez 2. Wynik jest zwracany jako wynik funkcji.
    D. function wynik(a) { return 2*a/a; } // Funkcja wynik(a) działa poprzez pomnożenie liczby przekazanej jako argument przez 2, a następnie podzielenie tego wyniku przez tę samą liczbę. Wynik jest zwracany jako wynik funkcji.
    
    695. Która z przedstawionych funkcji języka PHP zamieni słowo "kota" na słowo "mysz" w napisie "ala ma kota"?
    A. replace ("ala ma kota", "kota", "mysz"); // Funkcja replace("ala ma kota", "kota", "mysz") zamienia w napisie "ala ma kota" wszystkie wystąpienia słowa "kota" na słowo "mysz".
    B. replace ("kota", "mysz", "ala ma kota"); // Funkcja replace("kota", "mysz", "ala ma kota") próbuje zamienić wszystkie wystąpienia słowa "kota" na słowo "mysz" w napisie "ala ma kota". Jednak, ponieważ podano niewłaściwą kolejność argumentów, funkcja nie zadziała poprawnie.
    C. str_replace("ala ma kota", "kota", "mysz"); // Funkcja str_replace("ala ma kota", "kota", "mysz") zamienia w napisie "ala ma kota" wszystkie wystąpienia słowa "kota" na słowo "mysz".
    D. str_replace("kota", "mysz", "ala ma kota"); // Funkcja str_replace("kota", "mysz", "ala ma kota") zamienia w napisie "ala ma kota" wszystkie wystąpienia słowa "kota" na słowo "mysz".
    
    696. Która z przedstawionych metod pozwoli wypisać w języku JavaScript komunikat w konsoli przeglądarki internetowej?
    A. console.write("test"); // Metoda console.write() nie istnieje w języku JavaScript. Nie można jej użyć do wypisania komunikatu w konsoli przeglądarki internetowej.
    B. console.print("test"); // Metoda console.print() nie istnieje w języku JavaScript. Nie można jej użyć do wypisania komunikatu w konsoli przeglądarki internetowej.
    C. console.echo("test"); // Metoda console.echo() nie istnieje w języku JavaScript. Nie można jej użyć do wypisania komunikatu w konsoli przeglądarki internetowej.
    D. console.log("test"); // Metoda console.log() jest jedną z metod wbudowanych w język JavaScript, która pozwala wypisać komunikat w konsoli przeglądarki internetowej. Jest to najpopularniejsza metoda do tego celu.
    
    697. Polecenie wysyłane do serwera bazy danych, polegające na zbieraniu, poszukiwaniu lub modyfikowaniu danych w bazie jest nazywane
    A. formularzem. // Formularz to narzędzie służące do zbierania danych od użytkownika. Nie jest związane bezpośrednio z bazą danych.
    B. kwerendą. // Kwerenda to polecenie wysyłane do serwera bazy danych, które służy do zbierania, poszukiwania lub modyfikowania danych w bazie.
    C. kolumną. // Kolumna to struktura w bazie danych, która przechowuje dane o określonym typie. Może być porównywana do kolumny w arkuszu kalkulacyjnym.
    D. kopią. // Kopia to replika danych zawartych w bazie danych, służąca do zabezpieczenia przed utratą danych w przypadku awarii lub błędów.
    
    698. Kolumna pełniąca rolę klucza głównego w tabeli musi
    A. zawierać ciągłą numerację. // Kolumna pełniąca rolę klucza głównego w tabeli musi posiadać ciągłą numerację.
    B. zawierać unikalne wartości. // Kolumna pełniąca rolę klucza głównego w tabeli musi zawierać unikalne wartości.
    C. zawierać wartości liczbowe. // Kolumna pełniąca rolę klucza głównego w tabeli może zawierać różnego rodzaju wartości, nie tylko liczbowe.
    D. być innego typu niż pozostałe kolumny. // Kolumna pełniąca rolę klucza głównego w tabeli nie musi być innego typu niż pozostałe kolumny.
    
    699. Która z wbudowanych funkcji agregujących języka SQL oblicza średnią wartości we wskazanej kolumnie?
    A. MIN // Funkcja MIN oblicza najmniejszą wartość w wskazanej kolumnie.
    B. AVG // Funkcja AVG oblicza średnią wartość we wskazanej kolumnie.
    C. SUM // Funkcja SUM sumuje wartości we wskazanej kolumnie.
    D. COUNT // Funkcja COUNT zlicza liczbę wystąpień wartości w wskazanej kolumnie.
    
    700. Aby w wyniku zapytania wyeliminować powtarzające się wiersze, należy użyć klauzuli
    A. LIMIT // LIMIT - klauzula używana do ograniczenia liczby wyników zapytania
    B. UNIQUE // UNIQUE - nie jest poprawna klauzulą w celu eliminacji powtarzających się wierszy
    C. DISTINCT // DISTINCT - klauzula używana do wyeliminowania powtarzających się wierszy w wyniku zapytania
    D. ORDER BY // ORDER BY - klauzula używana do sortowania wyników zapytania
    
    701. Za pomocą, którego polecenia SQL można usunąć z tabeli artykuły wiersze zawierające słowo "sto" znajdujące się w dowolnym miejscu pola tresc?
    A. DELETE FROM artykuly WHERE tresc = "%sto%"; // Polecenie DELETE FROM artykuly WHERE tresc = "%sto%" usuwa wiersze z tabeli artykuły, gdzie pole tresc zawiera dokładnie słowo "sto". Nie uwzględnia innych wystąpień tego słowa.
    B. DELETE * FROM artykuly WHERE tresc = "%sto%"; // Polecenie DELETE * FROM artykuly WHERE tresc = "%sto%" jest niepoprawne, ponieważ nie ma takiej składni w SQL. Nie możemy używać * w poleceniu DELETE.
    C. DELETE FROM artykuly WHERE tresc LIKE "%sto%"; // Polecenie DELETE FROM artykuly WHERE tresc LIKE "%sto%" usuwa wiersze z tabeli artykuły, gdzie pole tresc zawiera słowo "sto" w dowolnym miejscu. Uwzględnia również inne wystąpienia tego słowa.
    D. DELETE * FROM artykuly WHERE tresc LIKE "%sto%"; // Polecenie DELETE * FROM artykuly WHERE tresc LIKE "%sto%" jest niepoprawne, ponieważ nie ma takiej składni w SQL. Nie możemy używać * w poleceniu DELETE.
    
    702. W bazie danych sklepu istnieją dwie tabele powiązane relacją: produkty oraz ceny. Tabela oceny zawiera dowolną liczbę ocen klientów dla danego produktu opisaną polami: id, ocena (pole numeryczne), produktID (klucz obcy). Aby wskazać maksymalną ocenę dla produktu o ID równym 10, należy posłużyć się zapytaniem
    A. MAX SELECT ocena FROM oceny WHERE produktID = 10; // Punkt A: Zapytanie bierze pod uwagę tylko pole 'ocena' z tabeli 'oceny' dla konkretnego produktu o ID równym 10. Nie wskazuje maksymalnej oceny, a jedynie wyświetla jedno pole 'ocena'. To zapytanie nie jest poprawne.
    B. SELECT MAX(ocena) FROM oceny WHERE produktID = 10; // Punkt B: Zapytanie bierze pod uwagę pole 'ocena' z tabeli 'oceny' dla konkretnego produktu o ID równym 10 i wyświetla maksymalną wartość tego pola. Jest to właściwe zapytanie, które podaje maksymalną ocenę dla produktu o ID równym 10.
    C. COUNT MAX SELECT ocena FROM oceny WHERE produktID = 10; // Punkt C: Zapytanie łączy polecenia MAX SELECT, co jest błędne. Nie ma potrzeby używać polecenia COUNT. To zapytanie nie jest poprawne.
    D. SELECT MAX COUNT(ocena) FROM oceny WHERE produktID = 10; // Punkt D: Zapytanie łączy polecenia SELECT MAX oraz COUNT, co jest błędne. To zapytanie nie jest poprawne.
    
    703. Aby zmodyfikować strukturę tabeli w bazie MySQL należy wykonać polecenie
    A. ALTER TABLE // Polecenie ALTER TABLE służy do modyfikacji struktury tabeli w bazie MySQL. Pozwala na dodawanie, usuwanie lub zmianę kolumn w tabeli, a także na dodawanie, usuwanie lub zmianę ograniczeń (np. kluczy obcych) na tabeli.
    B. INSERT INTO // Polecenie INSERT INTO służy do dodawania nowych rekordów do tabeli w bazie MySQL. Pozwala na podanie wartości dla wszystkich kolumn tabeli lub tylko wybranych kolumn.
    C. UPDATE // Polecenie UPDATE służy do aktualizacji istniejących rekordów w tabeli w bazie MySQL. Pozwala na zmianę wartości w wybranej kolumnie dla wybranych rekordów spełniających określone warunki.
    D. GRANT // Polecenie GRANT służy do nadawania uprawnień użytkownikom w bazie MySQL. Pozwala na określenie, jakie operacje użytkownik może wykonywać na tabelach, bazach danych itp.
    
    704. Za pomocą, którego zapytania Administrator odbierze prawo przeglądania oraz aktualizacji danych w bazie gazeta, dla użytkownika redaktor?
    A. REVOKE SELECT, UPDATE ON gazeta.* FROM 'redaktor'@'localhost'; // Punkt A oznacza, że Administrator odejmuje użytkownikowi redaktor prawo do przeglądania i aktualizacji danych w bazie gazeta. Używając tego zapytania, Administrator usuwa uprawnienia SELECT i UPDATE dla użytkownika redaktor w bazie danych gazeta.
    B. REVOKE SELECT, ALTER ON gazeta.* FROM 'redaktor'@'localhost'; // Punkt B nie jest poprawną odpowiedzią.
    C. GRANT SELECT, UPDATE ON gazeta.* TO 'redaktor'@'localhost'; // Punkt C nie jest poprawną odpowiedzią.
    D. GRANT SELECT, ALTER ON gazeta.* TO 'redaktor'@'localhost'; // Punkt D nie jest poprawną odpowiedzią.
    
    705. Za pomocą, której funkcji języka PHP można ustanowaić połączenie z bazą danych o nazwie zwierzaki?
    A. $polacz = db_connect('localhost', 'root', '', 'zwierzaki'); // Funkcja db_connect nie istnieje w języku PHP. Nie można za jej pomocą ustanowić połączenia z bazą danych.
    B. $polacz = sql_connect('localhost', 'root', '', 'zwierzaki'); // Funkcja sql_connect nie istnieje w języku PHP. Nie można za jej pomocą ustanowić połączenia z bazą danych.
    C. $polacz = server_connect('localhost', 'root', '', 'zwierzaki'); // Funkcja server_connect nie istnieje w języku PHP. Nie można za jej pomocą ustanowić połączenia z bazą danych.
    D. $polacz = mysqli_connect('localhost', 'root', '', 'zwierzaki'); // Funkcja mysqli_connect jest używana do nawiązywania połączenia z bazą danych o nazwie 'zwierzaki' znajdującą się na serwerze 'localhost'. Parametry 'root', '' oznaczają nazwę użytkownika i hasło do bazy danych. Ta funkcja jest jednym z podstawowych narzędzi do manipulacji danymi w bazie danych przy użyciu PHP.
    
    706. Po uszkodzeniu serwera bazy danych, aby możliwe najsprawniej przywrócić działanie kompletnej bazy należy użyć
    A. najnowszej wersji instalacyjnej serwera. // Najnowsza wersja instalacyjna serwera jest potrzebna do zainstalowania serwera bazy danych po jego uszkodzeniu. Jest to kompletny pakiet oprogramowania, który zawiera wszystkie niezbędne pliki i narzędzia potrzebne do uruchomienia serwera.
    B. pełnej listy użytkowników serwera. // Pełna lista użytkowników serwera jest przydatna, gdy chcemy przywrócić baze danych. Dzięki niej możemy skonfigurować odpowiednie uprawnienia i dostępy użytkowników do bazy danych.
    C. aktualnej wersji kopii zapasowej. // Aktualna wersja kopii zapasowej jest niezbędna do przywrócenia działania kompletnej bazy danych po uszkodzeniu serwera. Kopia zapasowa zawiera wszystkie dane i struktury tabel, które były przechowywane w bazie przed awarią.
    D. opisu struktur danych w tabelach. // Opis struktur danych w tabelach jest przydatny do zrozumienia i odnalezienia właściwych informacji w bazie danych. Jednak nie jest wystarczający do przywrócenia działania kompletnej bazy danych po uszkodzeniu serwera.
    
    707. Która z przedstawionych grup znaczników HTML zawiera znaczniki służące do grupowania elementów i tworzenia struktur dokumentu?
    A. br, img, hr // Znaczniki br, img, hr są używane do tworzenia linii odstępu, wstawiania obrazów i horyzontalnych linii wewnątrz dokumentu.
    B. table, tr, td // Znaczniki table, tr, td służą do tworzenia tabeli i organizowania danych w kolumnach i wierszach.
    C. span, strong, em // Znaczniki span, strong, em służą do manipulowania i podkreślania tekstu oraz nadawania mu specjalnego znaczenia.
    D. div, article, header // Znaczniki div, article, header są wykorzystywane do grupowania elementów i tworzenia struktury dokumentu HTML.
    
    708. Który zapis w języku HTML jest deklaracją kodowania znaków w dokumencie?
    A. < charset="UTF-8" > // Kod <meta charset='UTF-8'> w języku HTML jest deklaracją kodowania znaków w dokumencie. Umożliwia poprawne wyświetlanie i interpretację znaków specjalnych, takich jak polskie znaki diakrytyczne.
    B. < encoding="UTF-8" > // Niepoprawna odpowiedź.
    C. < meta charset="UTF-8" > // Kod <meta charset='UTF-8'> w języku HTML jest deklaracją kodowania znaków w dokumencie. Poprawnie ustala kodowanie na UTF-8, które jest powszechnie używane i umożliwia obsługę znaków z większości języków świata.
    D. < meta encoding="UTF-8" > // Niepoprawna odpowiedź.
    
    709. Który zapis w dokumencie HTML pozwala na połączenie z zewnętrznym arkuszem stylów o nazwie style.css?
    A. < link rel="stylesheet" href="style.css" > // Odpowiedź A pozwala na połączenie z zewnętrznym arkuszem stylów o nazwie style.css. W tym celu używa się znacznika <link> z atrybutem rel='stylesheet' i atrybutem href='style.css'. Ten kod umieszczany jest w dokumencie HTML i informuje przeglądarkę, że powinna załączyć zewnętrzny arkusz stylów o nazwie style.css.
    B. < link rel="stylesheet' src="style.css" > // Odpowiedź B jest niepoprawna. Nie ma takiego zapisu w HTML, który pozwalałby na połączenie z zewnętrznym arkuszem stylów.
    C. < a href="style.css" > // Odpowiedź C jest niepoprawna. Zapis <a href='style.css'> nie służy do podłączania arkuszy stylów, a do tworzenia linków do innych stron.
    D. < a src="style.css" > // Odpowiedź D jest niepoprawna. Zapis <a src='style.css'> nie służy do podłączania arkuszy stylów, a do wstawiania obrazków na stronie.
    
    710. Który znacznik HTML jest elementem blokowym?
    A. p // Tag HTML <p> jest elementem blokowym, co oznacza, że tworzy blok tekstu na stronie internetowej. Blok tekstu zazwyczaj zajmuje całą dostępną szerokość na stronie i automatycznie rozpoczyna nową linię przed i po tekście.
    B. img // Tag HTML <img> jest elementem inline, co oznacza, że może być umieszczony wewnątrz innego elementu blokowego i nie tworzy nowego bloku. <img> służy do wyświetlania obrazków na stronie internetowej.
    C. span // Tag HTML <span> jest również elementem inline, który jest używany do stosowania stylów do części tekstu lub innych elementów wewnątrz bloków tekstu. <span> nie wpływa na kolejność bloków tekstu ani nie tworzy nowego bloku.
    D. strong // Tag HTML <strong> jest elementem inline, który nadaje wyróżnienie silniejszego akcentu na tekście. W przeglądarkach internetowych może to być wyświetlane jako pogrubienie tekstu.
    
    711. Ile maksymalnie należy użyć znaczników < td > w tabeli o trzech kolumnach i trzech wierszach niezawierającej złączeń komórek i wiersza nagłówkowego?
    A. 3 // W punkcie A pytanie dotyczy ilości znaczników <td> w tabeli o trzech kolumnach i trzech wierszach, bez złączeń komórek i wiersza nagłówkowego. Poprawną odpowiedzią jest 3, ponieważ każdy wiersz ma po jednym znaczniku <td> dla każdej kolumny.
    B. 6 // Punkt B oznacza liczbę maksymalnych znaczników <td> w tej samej tabeli. Poprawną odpowiedzią jest 6, ponieważ każda komórka tabeli może zawierać tylko jeden znacznik <td>, a tabela ma 3 kolumny i 3 wiersze.
    C. 9 // W punkcie C pytanie odnosi się do ilości znaczników <td> w tabeli o trzech kolumnach i trzech wierszach, bez złączeń komórek i wiersza nagłówkowego. Poprawną odpowiedzią jest 9, ponieważ każda komórka tabeli musi zawierać jeden znacznik <td>, a tabela składa się z 3 kolumn i 3 wierszy.
    D. 12 // Punkt D dotyczy maksymalnej liczby znaczników <td> w tabeli o trzech kolumnach i trzech wierszach, bez złączeń komórek i wiersza nagłówkowego. Poprawną odpowiedzią jest 12, ponieważ dla każdego wiersza mamy po 3 znaczniki <td>, a tabela ma 3 wiersze, więc 3 * 3 = 9.
    
    712. Atrybutem określającym lokalizację pliku graficznego dla znacznika < img > jest
    A. alt // A. alt - Atrybut alt służy do określania alternatywnego tekstu dla obrazka. Jest wykorzystywany, gdy obrazek nie może zostać wyświetlony lub dla użytkowników korzystających z czytników ekranowych.
    B. src // B. src - Atrybut src określa lokalizację pliku graficznego dla znacznika <img>. Wskazuje, gdzie znajduje się plik obrazka, który ma zostać wyświetlony na stronie.
    C. href // C. href - Atrybut href jest używany do określania adresu URL docelowego dla linku. Jest stosowany dla znaczników <a> i <area>, które tworzą hiperłącza.
    D. link // D. link - Atrybut link nie jest używany jako lokalizacja pliku graficznego dla znacznika <img>. Jest to błędna odpowiedź.
    
    713. Formatowanie CSS akapitu określa styl szarej ramki o cechach: // pytanie posiada zdjecie D:

    714. Który selektor formatuje akapity tekstu o klasie tekst oraz element blokowy o ID obrazki?
    A. p.tekst, div#obrazki // Punkt A oznacza, że selektor p.tekst formatuje akapity tekstu o klasie tekst, a selektor div#obrazki formatuje element blokowy o ID obrazki.
    B. p#tekst, div.obrazki // Punkt B oznacza, że selektor p#tekst formatuje akapit tekstu o ID tekst, a selektor div.obrazki formatuje element blokowy o klasie obrazki.
    C. p.tekst + div#obrazki // Punkt C oznacza, że selektor p.tekst + div#obrazki formatuje element blokowy o ID obrazki, który następuje bezpośrednio po akapicie tekstu o klasie tekst.
    D. p#tekst + div.obrazki // Punkt D oznacza, że selektor p#tekst + div.obrazki formatuje element blokowy o klasie obrazki, który następuje bezpośrednio po akapicie tekstu o ID tekst.
    
    715. Pogrubienie tekstu za pomocą znacznika < b > można uzyskać także przy wykorzystaniu właściwości CSS
    A. text-weight // Właściwość text-weight nie istnieje. Nie ma możliwości pogrubienia tekstu za pomocą tego znacznika.
    B. font-weight // Właściwość font-weight służy do pogrubiania tekstu. Można ją użyć zarówno z użyciem znacznika < b >, jak i za pomocą CSS.
    C. font-size // Właściwość font-size jest wykorzystywana do zmiany rozmiaru czcionki, nie do pogrubiania tekstu.
    D. text-size // Właściwość text-size nie istnieje. Nie ma możliwości zmiany rozmiaru tekstu za pomocą tego znacznika.
    
    716. Aby w języku CSS ustawić czerwony kolor dla tekstu można użyć stylu
    A. color: rgb(255,0,0); // Punkt A - color: rgb(255,0,0) - Używając tego stylu w języku CSS można ustawić czerwony kolor dla tekstu. Funkcja rgb(255,0,0) oznacza, że wartość czerwonego koloru powinna być maksymalna (255), natomiast wartości zielonego i niebieskiego koloru powinny być zerowe (0), co daje nam kolor czerwony.
    B. color: rgb(#FF0000); // Punkt B - color: rgb(#FF0000) - Ten styl nie zadziała poprawnie. W języku CSS, wartość koloru w formacie heksadecymalnym powinna być poprzedzona symbolem #, jednak w tym przypadku brakuje symbolu # przed kodem koloru FF0000. Poprawna składnia powinna wyglądać tak: color: #FF0000.
    C. text-color: rgb(255,0,0); // Punkt C - text-color: rgb(255,0,0) - Ten styl nie zadziała poprawnie. W języku CSS, właściwość do ustawiania koloru tekstu nie jest text-color, tylko color. Poprawna składnia powinna wyglądać tak: color: rgb(255,0,0).
    D. text-color: rgb(#FF0000); // Punkt D - text-color: rgb(#FF0000) - Ten styl nie zadziała poprawnie. W języku CSS, właściwość do ustawiania koloru tekstu nie jest text-color, tylko color. Ponadto, wartość koloru w formacie heksadecymalnym powinna być poprzedzona symbolem #. Poprawna składnia powinna wyglądać tak: color: #FF0000.
    
    717. Za pomocą, którego zapisu zostanie utworzony w dokumencie HTML element wyświetlający obraz kotek.jpg z tekstem alternatywnym "obrazek kotka"?
    A. < img href="kotek.jpg" title="obrazek kotka" > // Punkt A zawiera błędny zapis. Atrybut 'href' nie jest prawidłowy dla tagu 'img'. Prawidłowy atrybut to 'src'.
    B. < img src="kotek.jpg" title="obrazek kotka" > // Punkt B zawiera poprawny zapis. Atrybut 'src' jest używany do określenia ścieżki do obrazu 'kotek.jpg', a atrybut 'title' zawiera alternatywny tekst 'obrazek kotka'.
    C. < img href="kotek.jpg" alt="obrazek kotka" > // Punkt C zawiera błędny zapis. Atrybut 'href' nie jest prawidłowy dla tagu 'img'. Prawidłowy atrybut to 'src'. Ponadto, atrybut 'alt' powinien zawierać alternatywny tekst, a nie 'obrazek kotka'.
    D. < img src="kotek.jpg" alt="obrazek kotka" > // Punkt D zawiera poprawny zapis. Atrybut 'src' jest używany do określenia ścieżki do obrazu 'kotek.jpg', a atrybut 'alt' zawiera alternatywny tekst 'obrazek kotka'.
    
    718. Wskaż poprawne stwierdzenie dotyczące przedstawionego kodu HTML. // pytanie posiada zdjecie D:

    719. Które zdarzenie pozwala wykonać kod w języku JavaScript w chwili wysyłania formularza HTML i zablokować lub pozwolić na jego wysłanie?
    A. onClick // Zdarzenie onClick pozwala wykonać kod w języku JavaScript po kliknięciu na element HTML.
    B. onEnter // Zdarzenie onEnter pozwala wykonać kod w języku JavaScript po naciśnięciu klawisza Enter na klawiaturze.
    C. onSubmit // Zdarzenie onSubmit pozwala wykonać kod w języku JavaScript w chwili wysyłania formularza HTML. Można w nim zablokować wysłanie formularza lub pozwolić na jego wysłanie.
    D. onChange // Zdarzenie onChange pozwala wykonać kod w języku JavaScript po zmianie wartości elementu HTML, na przykład po wprowadzeniu tekstu do pola tekstowego.
    
    720. W kodzie JavaScript pobrano element za pomocą metody getElementById. Aby zmodyfikować zawartość (treść) elementu można użyć właściwości
    A. Body // Właściwość 'body' nie istnieje w JavaScript. By zmodyfikować zawartość elementu, należy użyć właściwości 'innerHTML'. Ta właściwość umożliwia zmianę/edycję treści danego elementu.
    B. HTML // Właściwość 'HTML' również nie istnieje w JavaScript. Ta odpowiedź jest nieprawidłowa.
    C. innerBody // Właściwość 'innerBody' również nie istnieje w JavaScript. Ta odpowiedź jest nieprawidłowa.
    D. innerHTML // Właściwość 'innerHTML' służy do zmiany zawartości danego elementu. Można użyć jej do wstawienia tekstu, kodu HTML lub innych elementów do elementu pobranego za pomocą metody 'getElementById'.
    
    721. Przedstawiona linia kodu zapisana językiem PHP ma za zadanie // pytanie posiada zdjecie D:

    722. Walidacja pól formularzy polega na sprawdzeniu
    A. czy użytkownik jest zalogowany. // Punkt A dotyczy sprawdzenia, czy użytkownik jest zalogowany. Walidacja pól formularzy sprawdza, czy dane zostały wprowadzone przez zalogowanego użytkownika.
    B. który użytkownik wprowadził dane. // Punkt B dotyczy identyfikacji użytkownika, który wprowadził dane. Walidacja pól formularzy może zapisywać informacje o użytkowniku, który wprowadził dane w celu monitorowania działalności.
    C. czy istnieje plik PHP, który odbierze dane. // Punkt C dotyczy sprawdzenia istnienia pliku PHP, który odbierze dane. Walidacja pól formularzy może sprawdzać, czy odpowiedni plik PHP jest dostępny do przetwarzania danych.
    D. czy wprowadzone dane spełniają określone reguły. // Punkt D jest poprawną odpowiedzią. Polega ona na sprawdzeniu, czy wprowadzone przez użytkownika dane spełniają określone reguły. Na przykład może to obejmować sprawdzenie formatu adresu e-mail, długości hasła lub innych wymagań dotyczących danych.
    
    723. Zgodnie z regułami walidacji HTML5, poprawnym zapisem znacznika hr jest
    A. < hr > // Znacznik hr służy do wstawienia poziomej linii na stronie internetowej. Poprawnym zapisem tego znacznika w HTML5 jest <hr>.
    B. < / hr > // Odpowiedź B: </hr> jest niepoprawna. Zamykanie znacznika hr nie jest wymagane w HTML5.
    C. < /hr? > // Odpowiedź C: </hr?> jest niepoprawna. Znaki zapytania nie są dozwolone w nazwach znaczników.
    D. < / hr / > // Odpowiedź D: </hr/> jest niepoprawna. Znacznik hr nie posiada zamknięcia w HTML5.
    
    724. Użytkownik wprowadził adres nieistniejącego zasobu na serwerze. Próba połączenia wygeneruje błąd
    A. 400 // Odpowiedź A (400) oznacza błąd zapytania, który jest spowodowany przez błędnie sformułowane żądanie klienta. Może to obejmować nieprawidłowe składnie, błędne parametry czy niekompletne dane.
    B. 404 // Odpowiedź B (404) oznacza, że żądany zasób nie został odnaleziony na serwerze. Może to być spowodowane tym, że strona została usunięta, przeniesiona lub nigdy nie istniała.
    C. 500 // Odpowiedź C (500) oznacza wewnętrzny błąd serwera, który występuje, gdy serwer napotyka problem techniczny, który uniemożliwia mu przetworzenie żądania klienta. Może to wynikać z błędów w kodzie serwera, problemów z bazą danych lub innymi nieprawidłowościami.
    D. 503 // Odpowiedź D (503) oznacza tymczasowy brak dostępności serwera. W takiej sytuacji serwer nie jest w stanie obsłużyć żądania klienta z powodu przeciążenia, konserwacji lub innych czynników. Klient może spróbować ponownie później.
    
    725. Program o nazwie FileZilla pozwala na
    A. uruchomienie testów aplikacji. // Program o nazwie FileZilla pozwala na uruchomienie testów aplikacji.
    B. walidację plików HTML i CSS. // Program o nazwie FileZilla pozwala na walidację plików HTML i CSS.
    C. załadowanie baz danych do strony CMS Jommla! // Program o nazwie FileZilla pozwala na załadowanie baz danych do strony CMS Joomla!
    D. publikację strony internetowej na odległym serwerze. // Program o nazwie FileZilla pozwala na publikację strony internetowej na odległym serwerze.
    
    726. Który odnośnik jest prawidłowo zdefiniowany?
    A. < a src="www.strona.pl">strona // Odnośnik A jest nieprawidłowo zdefiniowany. Zamiast atrybutu 'src' powinien mieć atrybut 'href', który określa adres URL, do którego odnośnik prowadzi.
    B. < a href=http://strona.pl>strona // Odnośnik B jest prawidłowo zdefiniowany. Atrybut 'href' określa adres URL strony, do której odnośnik prowadzi.
    C. < a href="http::/strona.pl>strona // Odnośnik C jest nieprawidłowo zdefiniowany. W adresie URL występuje błąd z dwukropkiem, który powinien być pojedynczym ukośnikiem, aby odnośnik był prawidłowy.
    D. < a href="http://strona.pl">strona // Odnośnik D jest prawidłowo zdefiniowany. Atrybut 'href' określa adres URL strony, do której odnośnik prowadzi.
    
    727. W którym standardzie języka hipertekstowego zostały wprowadzone do składni znaczniki sekcji < footer >, < header >, < nav >?
    A. HTML4 // W standardzie HTML4 nie występują znaczniki sekcji <footer>, <header>, <nav>. Zostały one wprowadzone do składni języka hipertekstowego w standardzie HTML5.
    B. HTML5 // W standardzie HTML5 zostały wprowadzone znaczniki sekcji <footer>, <header>, <nav> do składni języka hipertekstowego.
    C. XHTML1.0 // W standardzie XHTML1.0 nie występują znaczniki sekcji <footer>, <header>, <nav>.
    D. XHTML2.0 // W standardzie XHTML2.0 nie występują znaczniki sekcji <footer>, <header>, <nav>.
    
    728. Selektor klasy w kaskadowych arkuszach stylów należy zdefiniować za pomocą symbolu
    A. . (kropka) // Selektor klasy w kaskadowych arkuszach stylów należy zdefiniować za pomocą symbolu kropki (.)
    B. : (dwukropek) // Symbol dwukropka (:) nie jest odpowiednim symbolem do definiowania selektora klasy w kaskadowych arkuszach stylów
    C. # // Symbol hashtagu (#) nie jest odpowiednim symbolem do definiowania selektora klasy w kaskadowych arkuszach stylów
    D. * // Symbol gwiazdki (*) nie jest odpowiednim symbolem do definiowania selektora klasy w kaskadowych arkuszach stylów
    
    729. W języku CSS, aby uzyskać efekt pochylenia tekstu, należy użyć właściwości
    A. font-size // Właściwość 'font-size' kontroluje wielkość czcionki.
    B. font-style // Właściwość 'font-style' nadaje tekstowi pochylenie.
    C. font-family // Właściwość 'font-family' określa rodzaj czcionki do wykorzystania.
    D. font-variant // Właściwość 'font-variant' kontroluje wariant czcionki (np. małe wielkie litery).
    
    730. Dla którego akapitu zastosowano przedstawioną właściwość stylu CSS?
    border-radius: 20%; // pytanie posiada zdjecie D:

    731. Aby za pomocą CSS zdefiniować przedstawione opływanie obrazu tekstem należy w stylu obrazu wprowadzić zapis // pytanie posiada zdjecie D:

    732. Pojęcie "front-end" stosowane w kontekście tworzenia stron WWW odnosi się do
    A. organizowania informacji na serwerze WWW. // Organizowanie informacji na serwerze WWW
    B. bazy danych z informacjami publikowanymi na stronie. // Baza danych z informacjami publikowanymi na stronie
    C. działania skryptów i programów wykonywanych po stronie serwera WWW. // Działanie skryptów i programów wykonywanych po stronie serwera WWW
    D. interfejsu strony internetowej związanego z technologiami działającymi po stronie przeglądarki internetowej. // Interfejs strony internetowej związanego z technologiami działającymi po stronie przeglądarki internetowej
    
    733. Który zestaw pojęć definiuje interfejs użytkownika strony internetowej?
    A. Wysyłanie kwerend do bazy, skrypty PHP. // Wysyłanie kwerend do bazy, skrypty PHP - opisują sposoby przetwarzania danych i komunikację z bazą danych poprzez język programowania PHP.
    B. Przyciski, menu, interakcja użytkownika z aplikacją. // Przyciski, menu, interakcja użytkownika z aplikacją - opisują elementy interfejsu, które umożliwiają użytkownikowi wchodzenie w interakcję z stroną internetową.
    C. Szkic strony, diagram witryny, diagram przepływu informacji. // Szkic strony, diagram witryny, diagram przepływu informacji - opisują narzędzia używane do planowania struktury i organizacji zawartości na stronie internetowej.
    D. Przetwarzanie informacji, system zarządzania treścią, projektowanie informacji. // Przetwarzanie informacji, system zarządzania treścią, projektowanie informacji - opisują procesy i narzędzia związane z organizacją i prezentacją informacji na stronie internetowej.
    
    734. Na rysunku pokazano schemat rozmieszczenia bloków na stronie WWW, w której jego części umieszcza się zwykle stopkę strony? // pytanie posiada zdjecie D:

    735. Aby zweryfikować poprawność składni kodu CSS można użyć
    A. debbugera // Debbuger służy do analizowania kodu CSS i znajdowania błędów w jego składni. Pozwala na debugowanie i naprawę problemów związanych z formatowaniem, selektorami czy właściwościami.
    B. walidatora // Walidator sprawdza poprawność składni kodu CSS zgodnie z określonymi standardami. Wykrywa błędy i oznacza miejsca, w których należy dokonać poprawek, tak aby kod był zgodny z ustalonymi normami.
    C. konsolidatora // Konsolidator służy do scalania wielu plików CSS w jeden, co pozwala na optymalizację i zwiększenie wydajności strony internetowej. Działa poprzez usuwanie powtórzeń oraz niepotrzebnych znaczników, co skraca czas ładowania strony.
    D. optymalizatora // Optymalizator optymalizuje kod CSS, usuwając zbędne lub nieefektywne elementy. Jest to ważne, aby skrócić czas ładowania strony i zoptymalizować jej działanie, poprawiając tym samym użytkowników.
    
    736. Który z poniższych przykładów kodu HTML5 zostanie zakwalifikowany przez walidator HTML jako błędny?
    A. <p class= "stl">tekst</p> // Punkt A zawiera element <p> z atrybutem class o wartości 'stl' oraz zawartością 'tekst'. Nie ma żadnych dodatkowych atrybutów. Jest to poprawny kod HTML5.
    B. <p class= "stl" id= "a">tekst</p> // Punkt B zawiera element <p> z atrybutami class i id o wartościach 'stl' i 'a' odpowiednio, oraz zawartością 'tekst'. Nie ma żadnych dodatkowych atrybutów. Jest to poprawny kod HTML5.
    C. <p class= "stl" style = "color: #F00 ">tekst</p> // Punkt C zawiera element <p> z atrybutem class o wartości 'stl', atrybutem style o wartości 'color: #F00' oraz zawartością 'tekst'. Nie ma żadnych dodatkowych atrybutów. Jest to poprawny kod HTML5.
    D. <p class= "stl"><style>.a{color:#F00}</style>tekst</p> // Punkt D zawiera element <p> z atrybutem class o wartości 'stl' oraz zawartością 'tekst'. Dodatkowo, wewnątrz tego elementu znajduje się element <style> z zawartością '.a{color:#F00}'. To jest błędny kod HTML5, ponieważ nie można umieszczać elementu <style> wewnątrz elementu <p>.
    
    737. Aby bezpiecznie przesłać pliki strony internetowej na serwer WWW można użyć protokołu
    A. POP3 // POP3 - to protokół służący do pobierania wiadomości e-mail z serwera. Nie służy do przesyłania plików strony internetowej na serwer WWW.
    B. SFTP // SFTP - to protokół służący do bezpiecznej transmisji plików między klientem a serwerem. Jest często wykorzystywany do przesyłania plików strony internetowej na serwer WWW.
    C. TELNET // TELNET - to protokół służący do zdalnego logowania się na serwer i wykonywania poleceń. Nie jest przeznaczony do przesyłania plików strony internetowej na serwer WWW.
    D. IMAP // IMAP - to protokół służący do zarządzania i pobierania wiadomości e-mail z serwera. Nie jest używany do przesyłania plików strony internetowej na serwer WWW.
    
    738. Kolor zielony, w notacji szesnastkowej skróconej, można zapisać w CSS sekwencją
    A. #F00 // Odpowiedź A oznacza kolor czerwony w notacji szesnastkowej skróconej. Składają się na nią trzy wartości szesnastkowe, gdzie pierwsza wartość oznacza intensywność koloru czerwonego, druga wartość oznacza intensywność koloru zielonego, a trzecia wartość oznacza intensywność koloru niebieskiego.
    B. #0F0 // Odpowiedź B oznacza kolor zielony w notacji szesnastkowej skróconej. Składają się na nią trzy wartości szesnastkowe, gdzie pierwsza wartość oznacza intensywność koloru czerwonego, druga wartość oznacza intensywność koloru zielonego, a trzecia wartość oznacza intensywność koloru niebieskiego.
    C. #00F // Odpowiedź C oznacza kolor niebieski w notacji szesnastkowej skróconej. Składają się na nią trzy wartości szesnastkowe, gdzie pierwsza wartość oznacza intensywność koloru czerwonego, druga wartość oznacza intensywność koloru zielonego, a trzecia wartość oznacza intensywność koloru niebieskiego.
    D. #FFF // Odpowiedź D oznacza kolor biały w notacji szesnastkowej skróconej. Składają się na nią trzy wartości szesnastkowe, gdzie każda wartość oznacza maksymalną intensywność koloru czerwonego, zielonego i niebieskiego.
    
    739. Składowymi modelu barw CMYK są kolory:
    A. czerwony, zielony i niebieski. // Punkt A. W skład modelu barw CMYK wchodzą kolory czerwony, zielony i niebieski. Te kolory są podstawami do tworzenia innych kolorów w tym modelu.
    B. cyjan, magenta, żółty i czarny. // Punkt B. Składnikami modelu barw CMYK są cyjan, magenta, żółty i czarny. Te kolory są stosowane do drukowania i mieszania innych kolorów w druku.
    C. cyjan, magenta, żółty i karmazyn. // Punkt C. Składnikami modelu barw CMYK są cyjan, magenta, żółty i karmazyn. Te kolory są używane do tworzenia odcieni i tonów w druku i projektowaniu.
    D. czerwony, zielony, niebieski i kanał alfa. // Punkt D. W modelu barw CMYK składowymi są czerwony, zielony, niebieski i kanał alfa. Kanał alfa jest używany do określania przezroczystości koloru w druku i grafice komputerowej.
    
    740. Powstające podczas zapisu pliku graficznego prostokątne zniekształcenia obrazu są charakterystyczne dla formatu // pytanie posiada zdjecie D:

    741. Który rastrowy format graficzny jest obsługiwany przez przeglądarki internetowe?
    A. PCX // PCX to format graficzny obsługiwany przez niektóre programy graficzne, ale nie jest powszechnie obsługiwany przez przeglądarki internetowe.
    B. TGA // TGA to format graficzny używany głównie w grach komputerowych, nie jest powszechnie obsługiwany przez przeglądarki internetowe.
    C. PNG // PNG to format graficzny obsługiwany przez przeglądarki internetowe. Jest to popularny format stosowany do przechowywania obrazów o dużej jakości, obsługujący przezroczystość.
    D. FLIF // FLIF to format graficzny stosunkowo nowy, który oferuje skompresowane obrazy o wysokiej jakości. Jednak nie jest powszechnie obsługiwany przez przeglądarki internetowe.
    
    742. Proporcje obrazu 16:9 (przy założeniu, że piksel ma kształt kwadratu) można uzyskać przy rozdzielczości
    A. 320 na 240 pikseli. // Odpowiedź A oznacza, że proporcje obrazu 16:9 można uzyskać przy rozdzielczości 320 na 240 pikseli. W praktyce oznacza to, że obraz będzie składany z 320 pikseli szerokości i 240 pikseli wysokości. Proporcje obrazu 16:9 są popularne w telewizorach i monitorach, a rozdzielczość 320 na 240 pikseli jest stosowana w starszych urządzeniach.
    B. 800 na 480 pikseli. // Odpowiedź B oznacza, że proporcje obrazu 16:9 można uzyskać przy rozdzielczości 800 na 480 pikseli. W praktyce oznacza to, że obraz będzie składany z 800 pikseli szerokości i 480 pikseli wysokości. Ta rozdzielczość jest często stosowana w urządzeniach mobilnych i komputerach.
    C. 1366 na 768 pikseli. // Odpowiedź C oznacza, że proporcje obrazu 16:9 można uzyskać przy rozdzielczości 1366 na 768 pikseli. W praktyce oznacza to, że obraz będzie składany z 1366 pikseli szerokości i 768 pikseli wysokości. Ta rozdzielczość jest szeroko stosowana w monitorach komputerowych oraz telewizorach HD.
    D. 2560 na 2048 pikseli. // Odpowiedź D oznacza, że proporcje obrazu 16:9 można uzyskać przy rozdzielczości 2560 na 2048 pikseli. W praktyce oznacza to, że obraz będzie składany z 2560 pikseli szerokości i 2048 pikseli wysokości. Ta rozdzielczość jest wykorzystywana w wysokiej klasy telewizorach, monitorach komputerowych oraz w produkcji filmowej.
    
    743. Który z wymienionych formatów umożliwia zapis dźwięku i obrazu?
    A. MP3 // Format MP3 umożliwia zapis dźwięku, ale nie obrazu.
    B. MP4 // Format MP4 umożliwia zapis zarówno dźwięku, jak i obrazu.
    C. PNG // Format PNG umożliwia zapis tylko obrazu, nie dźwięku.
    D. WAV // Format WAV umożliwia zapis dźwięku, ale nie obrazu.
    
    744. Podczas strumieniowego przesyłania cyfrowego materiału wideo parametrem wpływającym na jakość obrazu i dźwięku jest przepływność. Wielkość ta opisuje liczbę
    A. próbek dźwięku w jednostce czasu. // Przepływność podczas strumieniowego przesyłania cyfrowego materiału wideo opisuje liczbę próbek dźwięku transmitowanych w jednostce czasu.
    B. pikseli obrazu wyświetlanych na ekranie. // Przepływność podczas strumieniowego przesyłania cyfrowego materiału wideo nie opisuje pikseli obrazu wyświetlanych na ekranie.
    C. bitów transmitowanych w jednostce czasu. // Przepływność podczas strumieniowego przesyłania cyfrowego materiału wideo opisuje liczbę bitów transmitowanych w jednostce czasu.
    D. pikseli wyświetlanego obrazu wyrażoną ilorazem jego długości do wysokości. // Przepływność podczas strumieniowego przesyłania cyfrowego materiału wideo nie opisuje pikseli wyświetlanego obrazu wyrażonej ilorazem jego długości do wysokości.
    
    745. Funkcja COUNT języka SQL realizuje
    A. zliczanie znaków w polu tekstowym. // Funkcja COUNT języka SQL realizuje zliczanie znaków w polu tekstowym.
    B. zliczanie rekordów wybranych kwerendą. // Funkcja COUNT języka SQL realizuje zliczanie rekordów wybranych kwerendą.
    C. obliczenie średniej wartości w wybranej kolumnie. // Funkcja COUNT języka SQL nie oblicza średniej wartości w wybranej kolumnie.
    D. obliczenie wartości bezwzględnej w polu liczbowym. // Funkcja COUNT języka SQL nie oblicza wartości bezwzględnej w polu liczbowym.
    
    746. Ustalenie relacji pomiędzy tabelami w systemie bazodanowym MySQL umożliwia klauzula
    A. INDEX // Klauzula INDEX służy do tworzenia indeksów na kolumnach tabeli w systemie bazodanowym MySQL. Indeksy pozwalają na szybkie wyszukiwanie i sortowanie danych, co przyspiesza działanie zapytań.
    B. ORDER BY // Klauzula ORDER BY służy do sortowania wyników zapytania w systemie bazodanowym MySQL. Pozwala na określenie kolumny lub kolumn, według których mają być sortowane wyniki, oraz kolejności sortowania (rosnąco lub malejąco).
    C. REFERENCES // Klauzula REFERENCES służy do ustalenia relacji pomiędzy tabelami w systemie bazodanowym MySQL. Pozwala na określenie klucza obcego (foreign key), który powiąże kolumnę z inną tabelą. Dzięki temu można tworzyć zależności pomiędzy rekordami różnych tabel.
    D. PRIMARY KEY // Klauzula PRIMARY KEY służy do określenia klucza głównego (primary key) w systemie bazodanowym MySQL. Klucz główny jest unikalnym identyfikatorem rekordu w tabeli. Dzięki niemu można jednoznacznie odszukać i odwołać się do konkretnego rekordu w tabeli.
    
    747. Aby wyświetlić rekordy z tabeli pracownicy tylko dla pracowników, którzy skończyli 26 lat należy użyć zapytania
    A. SELECT * FROM pracownicy OR wiek > 25; // Punkt A: Ten punkt nie jest poprawną odpowiedzią. Zapytanie SELECT * FROM pracownicy OR wiek > 25; nie filtrować rekordów wystarczająco, aby wyświetlić tylko pracowników, którzy skończyli 26 lat.
    B. SELECT * FROM pracownicy AND wiek > 25; // Punkt B: Ten punkt również nie jest poprawną odpowiedzią. Zapytanie SELECT * FROM pracownicy AND wiek > 25; nie filtruje rekordów w sposób poprawny, aby wyświetlić tylko pracowników, którzy skończyli 26 lat.
    C. SELECT * FROM wiek WHERE pracownicy > 25; // Punkt C: Ten punkt również nie jest poprawną odpowiedzią. Zapytanie SELECT * FROM wiek WHERE pracownicy > 25; jest błędne, ponieważ próbuje wyszukać kolumnę 'wiek' w tabeli 'wiek', zamiast w tabeli 'pracownicy'.
    D. SELECT * FROM pracownicy WHERE wiek > 25; // Punkt D: Ten punkt jest poprawną odpowiedzią. Zapytanie SELECT * FROM pracownicy WHERE wiek > 25; wyświetla rekordy z tabeli 'pracownicy' tylko dla pracowników, którzy mają więcej niż 25 lat.
    
    748. W bazach danych relacja wiele-do-wielu pomiędzy tabelami występuje, gdy
    A. wielu wierszom tabeli A przypada wiele wierszy tabeli B. // W punkcie A opisana jest relacja wiele-do-wielu pomiędzy tabelami. W tym przypadku wiele wierszy tabeli A może mieć wiele powiązanych wierszy w tabeli B.
    B. wielu wierszom z tabeli A przypada tylko jeden wiersz tabeli B. // W punkcie B opisana jest relacja wiele-do-wielu pomiędzy tabelami. W tym przypadku wiele wierszy tabeli A może mieć tylko jeden powiązany wiersz w tabeli B.
    C. jednemu wierszowi z tabeli A może odpowiadać wiele wierszy w tabeli B. // W punkcie C opisana jest relacja wiele-do-wielu pomiędzy tabelami. W tym przypadku jeden wiersz tabeli A może mieć wiele powiązanych wierszy w tabeli B.
    D. jednemu wierszowi z tabeli A może odpowiadać wyłącznie jeden wiersz wtabeli B. // W punkcie D opisana jest relacja wiele-do-wielu pomiędzy tabelami. W tym przypadku jeden wiersz tabeli A może mieć tylko jeden powiązany wiersz w tabeli B.
    
    749. Aby zaimportować plik z danymi SQL do bazy danych MySQL można użyć narzędzia
    A. FileZilla // FileZilla jest narzędziem służącym do transferu plików między komputerem a serwerem. Nie jest jednak odpowiednie do importowania plików SQL do bazy danych MySQL.
    B. Symfony 3. // Symfony 3 jest frameworkiem do tworzenia aplikacji internetowych w języku PHP. Nie jest to narzędzie do importowania plików SQL do bazy danych MySQL.
    C. phpMyAdmin. // phpMyAdmin to narzędzie webowe, które umożliwia zarządzanie bazą danych MySQL. Można go użyć do zaimportowania pliku z danymi SQL do bazy danych MySQL.
    D. TotalCommander. // TotalCommander jest programem do zarządzania plikami na komputerze. Nie jest to odpowiednie narzędzie do importowania plików SQL do bazy danych MySQL.
    
    750. Aby w systemie MySQL nadać użytkownikowi prawo do nadawania i zmiany uprawnień innym użytkownikom należy zastosować klauzulę
    A. TRGGER // Triger to klauzula w systemie MySQL, która umożliwia wykonanie określonego kodu w odpowiedzi na określone zdarzenia, na przykład zmiany w tabelach.
    B. GRANT OPTION // Grant option to klauzula w systemie MySQL, która daje użytkownikowi prawo do nadawania i zmiany uprawnień innym użytkownikom.
    C. ALL PRIVILEGES // All privileges to klauzula w systemie MySQL, która nadaje użytkownikowi wszystkie dostępne uprawnienia.
    D. FLUSH PRIVILEGES // Flush privileges to polecenie w systemie MySQL, które wymusza odświeżenie listy uprawnień po wprowadzeniu zmian w bazie danych.
    
    751. Aby wykonać kopię zapasową bazy danych MySQL można posłużyć się
    A. importem bazy. // Aby wykonać kopię zapasową bazy danych MySQL można posłużyć się importem bazy. Import danych umożliwia wprowadzenie zewnętrznych danych do bazy danych MySQL.
    B. eksportem bazy. // Aby wykonać kopię zapasową bazy danych MySQL można posłużyć się eksportem bazy. Eksport danych umożliwia zapisanie bieżących danych z bazy do pliku zewnętrznego.
    C. agregacją danych. // Agregacja danych nie jest odpowiedzią na pytanie dotyczące kopii zapasowej bazy danych MySQL. Agregacja danych to proces łączenia różnych danych w celu uzyskania jednego, bardziej złożonego zestawu danych.
    D. modyfikacją danych. // Modyfikacja danych nie jest odpowiedzią na pytanie. Modyfikacja danych odnosi się do zmiany danych znajdujących się już w bazie danych, a nie do tworzenia kopii zapasowej.
    
    752. Którą integralność opisuje cytowana definicja?  "... polega na wprowadzeniu i utrzymaniu powiązań pomiędzy tabelami. Związki te tworzy się przez umieszczenie kolumny pełniącej rolę klucza głównego tabeli w innej tabeli, co nadaje kolumnie funkcję klucza obcego."
    A. Encji. // Encji - integralność encji to proces zapewniania, że każda tabela w bazie danych ma unikalne wartości w kolumnach klucza głównego. Pozwala to na identyfikację jednoznacznych obiektów w bazie danych.
    B. Statyczną. // Statyczną - integralność statyczną odnosi się do zapewnienia poprawności danych na podstawie zdefiniowanych reguł i ograniczeń w czasie tworzenia tabeli. Na przykład, możemy zdefiniować, że pewna kolumna musi mieć wartość większą niż zero.
    C. Referencyjną. // Referencyjną - integralność referencyjną polega na utrzymaniu poprawnych powiązań pomiędzy tabelami w bazie danych. Jest to osiągane poprzez umieszczenie klucza głównego jednej tabeli jako klucza obcego w innej tabeli, co zapewnia spójność danych.
    D. Semantyczną. // Semantyczną - integralność semantyczną dotyczy utrzymania spójności danych w oparciu o znaczenie lub sens tych danych. Na przykład, w bazie danych klientów możemy zdefiniować, że pole 'wiek' nie może zawierać wartości ujemnych.
    
    753. Czynnością zalecaną przed wykonaniem kopii bezpieczeństwa danych w bazie MySQL jest
    A. sprawdzenie czy baza jest dostatecznie wydajna. // Sprawdzenie czy baza jest dostatecznie wydajna przed wykonaniem kopii bezpieczeństwa danych w bazie MySQL polega na ocenie jak efektywnie baza będzie przetwarzać i udostępniać dane. Jeśli baza nie jest dostatecznie wydajna, może to prowadzić do problemów z wydajnością podczas wykonywania kopii bezpieczeństwa.
    B. zdefiniowanie systemu kodowania znaków w bazie. // Zdefiniowanie systemu kodowania znaków w bazie przed wykonaniem kopii bezpieczeństwa danych w bazie MySQL jest ważne dla poprawnego przechowywania i interpretacji różnych znaków i języków. Wprowadzenie odpowiedniego systemu kodowania zapewnia, że dane zostaną poprawnie zapisane i odczytane.
    C. nadanie uprawnień do przeglądania bazy dla Administratora. // Nadanie uprawnień do przeglądania bazy dla Administratora przed wykonaniem kopii bezpieczeństwa danych w bazie MySQL jest istotne, aby administrator miał pełny dostęp do danych i mógł sprawdzić, czy wszystko działa prawidłowo. Uprawnienia te zapewniają dostęp do wszystkich tabel i zasobów w bazie.
    D. sprawdzenie integralności bazy i ewentualnie jej naprawa. // Sprawdzenie integralności bazy i ewentualnie jej naprawa przed wykonaniem kopii bezpieczeństwa danych w bazie MySQL jest ważne w celu zapewnienia, że dane są poprawne i nie uszkodzone. Jeśli występują jakiekolwiek problemy z integralnością bazy danych, mogą one wpływać na poprawność kopii bezpieczeństwa.
    
    754. Zmienna typu integer lub int może przechowywać
    A. znak. // Zmienna typu integer lub int przechowuje znak.
    B. ciąg znaków. // Zmienna typu integer lub int nie może przechowywać ciągu znaków.
    C. liczbę całkowitą. // Zmienna typu integer lub int przechowuje liczbę całkowitą.
    D. liczbę rzeczywistą. // Zmienna typu integer lub int nie może przechowywać liczby rzeczywistej.
    
    755. Wskaż typ złożony
    A. char // Typ char reprezentuje pojedynczy znak, takie jak litera czy symbol. Może przechowywać jedynie jeden znak i zajmuje 1 bajt pamięci.
    B. bool // Typ bool reprezentuje wartość logiczną prawda/fałsz. Może przyjmować jedynie wartości true (prawda) lub false (fałsz).
    C. float // Typ float reprezentuje liczby zmiennoprzecinkowe o pojedynczej precyzji. Może przechowywać liczby z częścią dziesiętną, ale może wprowadzać pewien błąd zaokrąglenia.
    D. class // Typ class reprezentuje złożone struktury danych, które mogą zawierać zarówno zmienne, jak i funkcje. Klasa jest szablonem dla obiektów, które można tworzyć zgodnie z jej specyfikacją.
    
    756. Wskaż instrukcję iteracyjną
    A. for // Instrukcja iteracyjna 'for' służy do powtarzania określonego bloku kodu przez określoną liczbę razy lub dla każdego elementu w określonej strukturze danych. W pętli 'for', określa się warunek początkowy, warunek kontynuacji oraz inkrementację, co umożliwia wykonanie kodu wielokrotnie.
    B. else // Instrukcja 'else' jest używana wraz z instrukcją warunkową 'if' w celu wykonania pewnych czynności, gdy warunek 'if' nie jest spełniony. Wykonuje kod zawarty w bloku 'else', gdy warunek 'if' jest fałszywy.
    C. throw // Instrukcja 'throw' służy do zgłaszania wyjątków. Gdy wystąpi pewien warunek, program może rzucić wyjątek, co oznacza, że zostanie przerwane normalne wykonywanie kodu i zostanie podjęta akcja obsługi wyjątku.
    D. switch // Instrukcja 'switch' służy do wyboru jednej z wielu możliwych ścieżek wykonania, w zależności od wartości wyrażenia. Określa się różne przypadki (case) oraz (opcjonalnie) wartość domyślną (default), którą wykonuje się w przypadku, gdy żaden z przypadków nie pasuje.
    
    757. Debugger to oprogramowanie, którego zadaniem jest
    A. instalowanie środowiska programistycznego. // Debugger to oprogramowanie, które instaluje środowisko programistyczne.
    B. wykrywanie błędów składniowych języka programowania w kodzie źródłowym. // Debugger wykrywa błędy składniowe języka programowania w kodzie źródłowym.
    C. łączenie plików bibliotek i wstępnie przetworzonego kodu źródłowego w plik wykonywalny. // Debugger łączy pliki bibliotek i przetwarza kod źródłowy w plik wykonywalny.
    D. dynamiczna analiza uruchomionego programu w celu wykrycia przyczyn nieprawidłowego działania. // Debugger wykonuje dynamiczną analizę uruchomionego programu w celu wykrycia przyczyn nieprawidłowego działania.
    
    758. Którą wartość będzie przechowywała zmienna a po wykonaniu przedstawionej sekwencji instrukcji języka PHP? // pytanie posiada zdjecie D:

    759. Który framework został opracowany dla skryptowego języka PHP? 
    A. Spring. // Spring to framework stworzony dla języka Java, umożliwiający budowanie aplikacji webowych. Zapewnia wiele gotowych rozwiązań i ułatwia proces programowania.
    B. Angular. // Angular to framework stworzony dla języka JavaScript, służący do budowania aplikacji webowych. Umożliwia tworzenie dynamicznych interfejsów użytkownika i łatwo integruje się z innymi bibliotekami.
    C. Symfony. // Symfony to framework stworzony dla języka PHP, zaprojektowany w celu ułatwienia tworzenia skalowalnych aplikacji. Zapewnia modułowość, elastyczność i wiele gotowych komponentów, co przyspiesza rozwój projektów.
    D. ASP.NET // ASP.NET to framework stworzony dla języka ASP.NET, używanego głównie do tworzenia aplikacji webowych. Zapewnia narzędzia do budowania dużych i zaawansowanych projektów, oraz integrację z innymi technologiami Microsoftu.
    
    760. Formularz, którego fragment przedstawiono, został obsłużony w skrypcie PHP. Wskaż prawidłowo zapisane pobranie wartości wprowadzonej do pola edycyjnego // pytanie posiada zdjecie D:

    761. Aby przetestować poprawność działania kodu JavaScript należy użyć
    A. interpretera PHP. // Interpreter PHP służy do wykonywania kodu PHP. Nie jest odpowiednim narzędziem do testowania kodu JavaScript.
    B. kompilatora C++. // Kompilator C++ jest używany do kompilacji kodu napisanego w języku C++. Nie ma związku z testowaniem kodu JavaScript.
    C. interpretera PERL. // Interpreter PERL służy do wykonywania kodu PERL. Nie jest odpowiednim narzędziem do testowania kodu JavaScript.
    D. konsoli w przeglądarce internetowej. // Konsola w przeglądarce internetowej jest narzędziem, które umożliwia testowanie kodu JavaScript. Można w niej wprowadzać, wykonywać i debugować kod JavaScript bezpośrednio w przeglądarce.
    
    762. Wskaż komentarz wieloliniowy w języku PHP
    A. # // Komentarz wieloliniowy w języku PHP rozpoczyna się znakiem /* i kończy znakiem */. Pozwala na wstawianie wielu linii tekstu jako komentarza.
    B. / / // Symbol # w języku PHP oznacza komentarz jednoliniowy. Pozwala na wstawienie jednej linii tekstu jako komentarza.
    C. /* */ // Komentarz wieloliniowy w języku PHP rozpoczyna się znakiem /* i kończy znakiem */. Pozwala na wstawianie wielu linii tekstu jako komentarza.
    D. <!-- --> // Znaczniki <!-- --> nie są używane jako komentarzy w języku PHP. Są one używane w HTML do oznaczania komentarzy w kodzie strony internetowej.
    
    763. CAPTCHA to technika zabezpieczeń na stronach WWW pozwalająca
    A. przyspieszyć proces logowania do aplikacji internetowej. // Technika CAPTCHA pozwala przyspieszyć proces logowania do aplikacji internetowej.
    B. pominąć proces uwierzytelniania do aplikacji internetowej. // Technika CAPTCHA pomija proces uwierzytelniania do aplikacji internetowej.
    C. potwierdzić, że dane z formularza są wysyłane przez człowieka. // Technika CAPTCHA służy do potwierdzenia, że dane z formularza są wysyłane przez człowieka.
    D. automatycznie wypełnić formularz logowania danymi użytkownika. // Technika CAPTCHA automatycznie wypełnia formularz logowania danymi użytkownika.
    
    764. Wskaż znacznik HTML pozwalający na zapisanie tekstu nieprawidłowego lub nieodpowiedniego w sposób 
przekreślony.
    A. < s > < /s > // Znacznik <s> pozwala na zapisanie tekstu nieprawidłowego lub nieodpowiedniego w sposób przekreślony. Wykorzystuje się go głównie do oznaczania elementów, które nie są już aktualne lub mają zostać wykreślone.
    B. < b > < /b > // Znacznik <b> służy do wyróżnienia tekstu pogrubionym fontem. Może być stosowany w celu podkreślenia ważności lub znaczenia danego fragmentu tekstu.
    C. < em > < /em > // Znacznik <em> używa się do wyróżnienia tekstu kursywą. Jest stosowany w celu podkreślenia emocji, akcentowania ważnych fragmentów lub dodania wagi do tekstu.
    D. < sub > < /sub > // Znacznik <sub> pozwala na zapisanie tekstu w indeksie dolnym. Jest wykorzystywany głównie do oznaczania wartości chemicznych, matematycznych lub informacji zapisanych w formie indeksu dolnego.
    
    765. Element < meta charset="utf-8" > jest stosowany do określenia metadanych strony internetowej dotyczących
    A. opisu strony // Punkt A oznacza opis strony. Element <meta charset="utf-8"> jest używany do określenia metadanych strony internetowej, które zawierają informacje na temat opisu strony.
    B. języka strony // Punkt B oznacza język strony. Element <meta charset="utf-8"> jest stosowany do określenia metadanych strony internetowej, które dotyczą języka, w jakim jest napisana strona.
    C. słów kluczowych // Punkt C oznacza słowa kluczowe. Element <meta charset="utf-8"> nie jest używany do określenia metadanych strony internetowej dotyczących słów kluczowych.
    D. kodowania znaków // Punkt D oznacza kodowanie znaków. Element <meta charset="utf-8"> jest stosowany do określenia metadanych strony internetowej dotyczących kodowania znaków, czyli jak strona powinna interpretować i wyświetlać różne znaki.
    
    766. W języku HTML zdefiniowano listę, która // pytanie posiada zdjecie D:

    767. Jaką szerokość strony pozostawiono na jej treść, na podstawie przedstawionej definicji CSS? // pytanie posiada zdjecie D:

    768. Algorytm sortowania tablicy polegający na n-krotnym porównywaniu ze sobą dwóch sąsiadujących 
elementów tablicy i zamianie miejscami w przypadku spełnienia warunku jest nazywany sortowaniem
    A. szybkim // Algorytm sortowania polegający na n-krotnym porównywaniu ze sobą dwóch sąsiadujących elementów tablicy i zamianie miejscami w przypadku spełnienia warunku. Jest to algorytm bąbelkowy.
    B. przez wybór // Algorytm sortowania polegający na wybieraniu najmniejszego elementu z tablicy i umieszczaniu go na odpowiedniej pozycji. Jest to algorytm przez wybór.
    C. bąbelkowym // Algorytm sortowania polegający na n-krotnym porównywaniu ze sobą dwóch sąsiadujących elementów tablicy i zamianie miejscami w przypadku spełnienia warunku. Jest to algorytm bąbelkowy.
    D. przez scalanie // Algorytm sortowania polegający na rekurencyjnym dzieleniu tablicy na mniejsze części, a następnie scalaniu ich w odpowiedniej kolejności. Jest to algorytm przez scalanie.
    
    769. W sklepie z farbami jest ustalony schemat wyliczania ceny farby: za kolor niebieski i zielony przy pojemności
2 litry cena farby jest równa cenie bazowej + 20%. Wyrażenie logiczne zapisane w języku JavaScript 
sprawdzające tę regułę ma postać
    A. kolor = 'niebieski' || kolor = 'zielony' && pojemnosc = 2 // Odpowiedź A: Sprawdza, czy kolor farby jest równy 'niebieski' lub kolor farby jest równy 'zielony' oraz pojemność farby jest równa 2.
    B. (kolor = 'niebieski' || kolor = 'zielony') || pojemnosc = 2
 // Odpowiedź B: Sprawdza, czy kolor farby jest równy 'niebieski' lub kolor farby jest równy 'zielony' lub pojemność farby jest równa 2.
    C. kolor == 'niebieski' && kolor == 'zielony' && pojemnosc == 2 // Odpowiedź C: Sprawdza, czy kolor farby jest równy 'niebieski' oraz kolor farby jest równy 'zielony' oraz pojemność farby jest równa 2.
    D. (kolor == 'niebieski' || kolor == 'zielony') && pojemnosc == 2 // Odpowiedź D: Sprawdza, czy kolor farby jest równy 'niebieski' lub kolor farby jest równy 'zielony' oraz pojemność farby jest równa 2.
    
    770. Instrukcją równoważną funkcjonalnie do przedstawionej instrukcji JavaScript jest // pytanie posiada zdjecie D:

    771. Zmienna typu double może przyjąć wartości
    A. "Ala"; 'd' // Zmienna typu double może przyjąć wartości jako liczby zmiennoprzecinkowe, na przykład 2.4.
    B. 1,44; 2,55 // Zmienna typu double może przyjąć wartości jako liczby zmiennoprzecinkowe, na przykład 4.
    C. 2.4; 4; 3.2 // Zmienna typu double może przyjąć wartości jako liczby zmiennoprzecinkowe, na przykład 3.2.
    D. 1979-12-05; 12:33 // Zmienna typu double nie może przyjąć wartości jako napisy (string) ani znaki (char), na przykład "Ala" czy 'd'. Nie można również przypisać do niej daty w formacie "YYYY-MM-DD" oraz godziny w formacie "HH:MM" - takie jak 1979-12-05 i 12:33.
    
    772. W języku JavaScript metoda Math.random() ma za zadanie
    A. porównać dwa napisy // Metoda Math.random() w języku JavaScript nie porównuje dwóch napisów. Służy do generowania liczby pseudolosowej.
    B. zwrócić zaokrągloną liczbę // Metoda Math.random() w języku JavaScript nie zwraca zaokrąglonej liczby. Zamiast tego zwraca liczbę pseudolosową.
    C. zwrócić liczbę pseudolosową // Metoda Math.random() w języku JavaScript zwraca liczbę pseudolosową. Może być wykorzystywana, na przykład, do generowania losowych indeksów tablicy.
    D. zaokrąglić liczbę do najbliższej większej całkowitej // Metoda Math.random() w języku JavaScript nie zaokrągla liczby do najbliższej większej całkowitej. Zamiast tego zwraca liczbę pseudolosową.
    
    773. Jaki będzie efekt wykonania przedstawionych instrukcji JavaScript? // pytanie posiada zdjecie D:

    774. Po wykonaniu przedstawionego kodu JavaScript działającego na wcześniej zainicjalizowanej tablicy liczby
w zmiennej wynik jest przechowywana suma // pytanie posiada zdjecie D:

    775. Ile iteracji zrealizuje przedstawiona pętla zapisana w języku PHP? // pytanie posiada zdjecie D:

    776. Przedstawiona funkcja zapisana w języku PHP // pytanie posiada zdjecie D:

    777. Po wykonaniu przedstawionego kodu PHP w zmiennej $napis jest przechowywany ciąg znaków // pytanie posiada zdjecie D:

    778. Przedstawiony błąd, wygenerowany podczas interpretacji kodu PHP, może być spowodowany // pytanie posiada zdjecie D:

    779. Wskaż wszystkie znaki umożliwiające komentowanie kodu języku PHP
    A. jedynie /* */ // Znak /* */ umożliwia komentowanie kodu w języku PHP. Pozwala na zablokowanie fragmentu kodu, który tym samym nie będzie wykonywany.
    B. < ?php ? > oraz / / // Znaki < ?php ? > oraz / / służą do komentowania kodu w języku PHP. < ?php ? > informuje interpreter, że to jest kod PHP, a // umożliwia umieszczenie komentarza w jednej linii.
    C. /* */ oraz < !-- -- > // Znaki /* */ oraz < !-- -- > pełnią rolę komentarzy w języku PHP. /* */ pozwala na umieszczenie komentarza na większej liczbie linii, a < !-- -- > jest znanym znacznikiem komentarza w HTML.
    D. /* */ oraz / / oraz # // Znaki /* */, / / oraz # są używane do komentowania kodu w języku PHP. /* */ jest używane do blokowego komentowania, / / umożliwia komentarz w jednej linii, a # jest używane jako komentarz w plikach konfiguracyjnych PHP.
    
    780. W relacyjnych bazach danych encja jest reprezentowana przez
    A. tabelę // Encja w relacyjnych bazach danych jest reprezentowana przez tabelę. Tabela składa się z wierszy i kolumn, gdzie każdy wiersz reprezentuje jedną jednostkę danych, a każda kolumna określa atrybuty tych danych. Tabela umożliwia organizację i przechowywanie danych w sposób uporządkowany i łatwy do zarządzania.
    B. rekord // Rekord jest pojedynczym wierszem w tabeli. Reprezentuje on konkretną jednostkę danych, zawierając informacje o jej atrybutach. Rekord może zawierać wartości dla różnych kolumn w tabeli.
    C. relację // Relacja jest pojęciem matematycznym, które odnosi się do połączeń między danymi w różnych tabelach. Relacja definiuje, w jaki sposób dane w tabelach są powiązane i jak można je analizować wspólnie. Relacje pomiędzy tabelami są tworzone za pomocą kluczy głównych i kluczy obcych.
    D. kwerendę // Kwerenda jest narzędziem, które umożliwia wyszukiwanie, filtrowanie i sortowanie danych w bazie danych. Jest to zapytanie skierowane do bazy danych w celu uzyskania określonego zestawu informacji. Kwerendy pozwalają na manipulacje danymi, wykonywanie obliczeń i łączenie różnych tabel w celu analizy danych.
    
    781. Wybrany minimalny zestaw atrybutów relacji, jednoznacznie identyfikujący każdy rekord tej relacji, 
przyjmujący wartości niepowtarzalne i niepuste, nazywamy kluczem
    A. obcym // Klucz obcy to minimalny zestaw atrybutów relacji, który służy do powiązania dwóch tabel. Wartości klucza obcego w jednej tabeli są powiązane z wartościami klucza głównego w innej tabeli. Dzięki temu można tworzyć relacje między tabelami i odwoływać się do danych z innych tabel.
    B. głównym // Klucz główny to minimalny zestaw atrybutów relacji, który jednoznacznie identyfikuje każdy rekord w tej relacji. Klucz główny przyjmuje wartości niepowtarzalne i niepuste, co umożliwia unikalne identyfikowanie rekordów. Dzięki kluczowi głównemu można szybko odnaleźć, modyfikować lub usunąć konkretne rekordy.
    C. złożonym // Klucz złożony to zestaw dwóch lub więcej atrybutów, które razem stanowią klucz dla relacji. Wartości klucza złożonego są unikalne i niepuste, umożliwiając jednoznaczne identyfikowanie rekordów. Klucz złożony jest przydatny w sytuacjach, gdy pojedynczy atrybut nie jest wystarczający do unikalnego identyfikowania rekordu.
    D. kandydującym // Klucz kandydujący to minimalny zestaw atrybutów relacji, który może potencjalnie służyć jako klucz główny. Wartości klucza kandydującego są unikalne i niepuste, ale dopiero po ocenie ich unikalności może zostać wybrany jako klucz główny. Klucz kandydujący jest używany w celu wyboru najlepszego klucza głównego dla danej relacji.
    
    782. W tabeli mieszkancy z polami id, imie, nazwisko, ulica, numer, czynsz (wartość całkowita) należy wybrać 
dane osób mieszkających na ulicy Mickiewicza pod numerami 71, 72, 80, których czynsz jest niższy niż 
1000 zł. Klauzula WHERE do zapytania będzie miała postać
    A. WHERE ulica = 'Mickiewicza' OR numer IN (71, 72, 80) OR czynsz < 1000 // W punkcie A w zapytaniu do tabeli 'mieszkancy' wybieramy dane osób mieszkańcych na ulicy Mickiewicza pod numerami 71, 72 i 80, oraz których czynsz jest niższy niż 1000 zł. Wykorzystujemy klauzulę WHERE i łączymy warunki za pomocą operatora OR.
    B. WHERE ulica = 'Mickiewicza' AND numer IN (71, 72, 80) OR czynsz < 1000 // Punkt B w zapytaniu do tabeli 'mieszkancy' wybiera dane osób mieszkańcych na ulicy Mickiewicza pod numerami 71, 72 i 80, oraz których czynsz jest niższy niż 1000 zł. Warunki te muszą być spełnione jednocześnie, więc wykorzystujemy operator AND i OR w odpowiednich miejscach.
    C. WHERE ulica = 'Mickiewicza' AND numer IN (71, 72, 80) AND czynsz < 1000 // W punkcie C używamy klauzuli WHERE, aby wybrać dane osób mieszkańcych na ulicy Mickiewicza pod numerami 71, 72 i 80, oraz których czynsz jest niższy niż 1000 zł. Warunki te muszą być spełnione jednocześnie, dlatego korzystamy z operatorów AND i IN.
    D. WHERE ulica = 'Mickiewicza' AND numer > 70 AND numer < 81 OR czynsz < 1000
 // Punkt D w zapytaniu do tabeli 'mieszkancy' wybiera dane osób mieszkańcych na ulicy Mickiewicza w zakresie numerów od 71 do 80, oraz których czynsz jest niższy niż 1000 zł. Używamy operatorów AND i OR w odpowiednich miejscach, aby łączyć warunki.
    
    783. Wskaż kwerendę, która z tabeli klienci wybierze jedynie nazwiska trzech najlepszych klientów, czyli takich, 
którzy na swoim koncie mają najwięcej punktów (pole całkowite punkty)
    A. SELECT nazwisko FROM klienci LIMIT 3; // Punkt A zapytuje tabelę klienci, ale nie uwzględnia kryterium wyboru najlepszych klientów.
    B. SELECT nazwisko FROM klienci ORDER BY punkty DESC LIMIT 3; // Punkt B zapytuje tabelę klienci, sortuje klientów według punktów malejąco (DESC) i zwraca tylko trzy najlepsze nazwiska klientów.
    C. SELECT nazwisko FROM klienci ORDER BY nazwisko DESC LIMIT 3; // Punkt C zapytuje tabelę klienci, sortuje klientów według nazwisk malejąco (DESC) i zwraca tylko trzy największe nazwiska.
    D. SELECT LIMIT 3 nazwisko FROM klienci ORDER BY nazwisko DESC; // Punkt D jest niepoprawny syntaktycznie, ponieważ umieścił LIMIT przed wyborem kolumny nazwisko. Prawidłową konstrukcją byłoby SELECT nazwisko FROM klienci ORDER BY nazwisko DESC LIMIT 3;
    
    784. Z tabeli mieszkancy należy wybrać niepowtarzające się nazwy miast, w tym celu należy skorzystać 
z wyrażenia SQL zawierającego klauzulę
    A. CHECK // Klauzula CHECK jest używana w języku SQL do sprawdzania warunków dla pojedynczych wierszy podczas operacji INSERT lub UPDATE. Sprawdza czy wartości w kolumnie spełniają określone warunki.
    B. HAVING // Klauzula HAVING jest używana w języku SQL dla filtrowania grup wynikowych na podstawie warunków, które muszą być spełnione przez wyniki agregujące.
    C. UNIQUE // Klauzula UNIQUE jest używana w języku SQL do zapewnienia, że wartości w kolumnie są unikalne i nie mają powtórzeń. Służy do definiowania klucza głównego lub klucza unikalnego dla tabeli.
    D. DISTINCT // Klauzula DISTINCT jest używana w języku SQL do wybierania tylko unikalnych wartości z danej kolumny. Eliminuje powtórzenia i zwraca tylko jedno wystąpienie każdej wartości.
    
    785. Tabela gory, której fragment przedstawiono, zawiera polskie pasma górskie wraz z ich szczytami. Wskaż kwerendę licząca dla każdego pasma górskiego średnią wysokość jego szczytów. // pytanie posiada zdjecie D:

    786. Które dane zostaną wybrane w wyniku działania kwerendy na przedstawionych rekordach? 
SELECT id FROM samochody WHERE rocznik LIKE "2%4"; // pytanie posiada zdjecie D:

    787. Z przedstawionych tabel Artykuly i Autorzy należy wybrać jedynie nazwiska autorów i tytuły ich artykułów, 
które zostały ocenione na 5. Kwerenda wybierająca te dane ma postać // pytanie posiada zdjecie D:

    788. Podczas tworzenia tabeli produkty należy utworzyć pole cena będące reprezentacją ceny produktu. 
Odpowiedni typ dla tego pola, to
    A. DECIMAL(10,2) // Pole cena w tabeli produkty reprezentuje cenę produktu. Jest to liczba zmiennoprzecinkowa o 10 cyfrach i 2 miejscach po przecinku. Umożliwia precyzyjne wyrażenie ceny produktu.
    B. INTEGER(11) // Pole cena w tabeli produkty nie powinno być typu INTEGER(11), ponieważ ta wartość wyznacza liczbę całkowitą o maksymalnej długości 11 cyfr. Nie jest to odpowiedni typ dla reprezentacji ceny produktu.
    C. TINYTEXT // Pole cena w tabeli produkty nie powinno być typu TINYTEXT, ponieważ jest to typ tekstowy o maksymalnej długości 255 znaków. Nie umożliwia on odpowiedniej reprezentacji liczbowej ceny produktu.
    D. ENUM // Pole cena w tabeli produkty nie powinno być typu ENUM, ponieważ jest to typ danych służący do przechowywania zbioru stałych wartości. Nie jest to odpowiedni typ dla reprezentacji liczbowej ceny produktu.
    
    789. Tworząc tabelę, do pola które będzie przyjmowało kolejne liczby całkowite nadawane automatycznie, należy 
dodać własność
    A. NULL // Właściwość NULL oznacza, że pole w tabeli może przyjąć wartość pustą, czyli brak wartości.
    B. NOT NULL // Właściwość NOT NULL oznacza, że pole w tabeli nie może przyjąć wartości pustej, musi być zawsze wypełnione.
    C. PRIMARY KEY // Właściwość PRIMARY KEY oznacza, że pole w tabeli jest unikalne i służy do jednoznacznego identyfikowania rekordów.
    D. AUTO_INCREMENT // Właściwość AUTO_INCREMENT oznacza, że pole w tabeli będzie automatycznie inkrementowane o kolejne liczby całkowite przy dodawaniu nowych rekordów.
    
    790. Obiektem służącym w bazie danych do podsumowywania, wyświetlania i wydruków danych jest
    A. raport // Raport jest obiektem służącym w bazie danych do podsumowywania, wyświetlania i wydruków danych.
    B. zapytanie // Zapytanie jest obiektem służącym w bazie danych do pobierania konkretnych informacji wg określonych kryteriów.
    C. formularz // Formularz jest obiektem służącym w bazie danych do wprowadzania, edycji i wyświetlania danych w sposób graficzny.
    D. zestawienie // Zestawienie jest obiektem służącym w bazie danych do prezentowania danych w formie tabeli lub grafik, uporządkowanej według określonych kategorii.
    
    791. Sklep internetowy korzysta z tabeli faktury. Podczas tworzenia faktury nie zawsze pole dataPlatnosci jest 
wypełniane. Aby to naprawić, na koniec dnia należy wpisać aktualną datę do wierszy, w których to pole jest 
puste (niewypełnione). Można w tym celu posłużyć się kwerendą
    A. UPDATE faktury SET dataPlatnosci=CURTIME() WHERE id = 3; // Zapytanie A aktualizuje pole dataPlatnosci w tabeli faktury, ustawiając na aktualny czas (CURTIME()), dla wiersza o id = 3.
    B. UPDATE faktury SET dataPlatnosci=CURDATE() WHERE dataPlatnosci IS NULL; // Zapytanie B aktualizuje pole dataPlatnosci w tabeli faktury, ustawiając na aktualną datę (CURDATE()), dla wierszy, w których to pole jest puste (IS NULL).
    C. UPDATE faktury SET dataPlatnosci=CURTIME() WHERE dataPlatnosci IS NOT NULL;
 // Zapytanie C aktualizuje pole dataPlatnosci w tabeli faktury, ustawiając na aktualny czas (CURTIME()), dla wierszy, w których to pole jest niepuste (IS NOT NULL).
    D. UPDATE faktury SET dataPlatnosci=CURDATE() WHERE dataplatnosci = '0000-00-
00 '; // Zapytanie D aktualizuje pole dataPlatnosci w tabeli faktury, ustawiając na aktualną datę (CURDATE()), dla wierszy, w których to pole ma wartość '0000-00-00'.
    
    792. Po wydaniu polecenia SQL prezentowanego w ramce użytkownik Ela będzie mógł // pytanie posiada zdjecie D:

    793. Polecenie służące do sprawdzenia i optymalizacji bazy danych to
    A. mysqlshow // Polecenie mysqlshow służy do wyświetlania informacji o bazie danych oraz tabelach w systemie MySQL.
    B. mysqldump // Polecenie mysqldump służy do tworzenia kopii zapasowej bazy danych MySQL w formie pliku tekstowego.
    C. mysqlcheck // Polecenie mysqlcheck służy do sprawdzania i optymalizacji bazy danych MySQL. Może naprawiać uszkodzone tabele oraz wykonywać analizę, optymalizację i naprawę bazy danych.
    D. mysqlimport // Polecenie mysqlimport służy do importowania danych z pliku tekstowego do bazy danych MySQL.
    
    794. W języku HTML 5 atrybut action stosowany jest w znaczniku
    A. < head > // Atrybut action stosowany jest w znaczniku <form>. W języku HTML 5, atrybut action określa adres URL, do którego zostaną wysłane dane po wypełnieniu formularza. Może to być adres do skryptu serwerowego obsługującego dane formularza.
    B. < body > // Nie dotyczy tego pytania.
    C. < code > // Nie dotyczy tego pytania.
    D. < form > // Atrybut action stosowany jest w znaczniku <form>. W języku HTML 5, atrybut action określa adres URL, do którego zostaną wysłane dane po wypełnieniu formularza. Może to być adres do skryptu serwerowego obsługującego dane formularza.
    
    795. Który wykaz znaczników definiujących przedstawiony projekt witryny w sposób semantyczny (znaczeniowy)
jest zgodny ze standardem HTML 5? // pytanie posiada zdjecie D:

    796. O czym informuje przeglądarkę internetową zapis < !DOCTYPE html >?
    A. Dokument został zapisany w języku HTML 4 // Odpowiedź A informuje, że dokument został zapisany w języku HTML 4.
    B. Dokument został zapisany w języku HTML 5 // Odpowiedź B informuje, że dokument został zapisany w języku HTML 5.
    C. W dokumencie wszystkie znaczniki są zapisywane wielkimi literami // Odpowiedź C informuje, że w dokumencie wszystkie znaczniki są zapisywane wielkimi literami.
    D. W dokumencie jest wymagane zamknięcie dla każdego znacznika, również samozamykającego // Odpowiedź D informuje, że w dokumencie jest wymagane zamknięcie dla każdego znacznika, również samozamykającego.
    
    797. W stylu CSS przedstawionym w ramce zdefiniowano klasę uzytkownik. Czcionką koloru niebieskiego na 
stronie będą zapisane // pytanie posiada zdjecie D:

    798. Wskaż paragraf sformatowany przedstawionym stylem CSS. // pytanie posiada zdjecie D:

    799. W arkuszu CSS zapisano przedstawione style. Jeżeli hiperłącze zostanie wybrane, to po powrocie na stronę 
to hiperłącze będzie w kolorze // pytanie posiada zdjecie D:

    800. Kolor zielony ma w notacji szesnastkowej wartość #008000. Wartość ta zapisana w notacji RGB to
    A. rgb(0, 80, 0) // Odpowiedź A: rgb(0, 80, 0) oznacza, że kolor zielony składa się z zerowego czerwonego, 80 zielonego i zerowego niebieskiego składnika. Dzięki temu, otrzymujemy odcień zielonego.
    B. rgb(0, 100, 0) // Odpowiedź B: rgb(0, 100, 0) oznacza, że kolor zielony składa się z zerowego czerwonego, 100 zielonego i zerowego niebieskiego składnika. Dzięki temu, otrzymujemy odcień zielonego.
    C. rgb(0, 128, 0) // Odpowiedź C: rgb(0, 128, 0) oznacza, że kolor zielony składa się z zerowego czerwonego, 128 zielonego i zerowego niebieskiego składnika. Dzięki temu, otrzymujemy odcień zielonego.
    D. rgb(0, 160, 0) // Odpowiedź D: rgb(0, 160, 0) oznacza, że kolor zielony składa się z zerowego czerwonego, 160 zielonego i zerowego niebieskiego składnika. Dzięki temu, otrzymujemy odcień zielonego.
    
    801. Dla uzyskania przedstawionego efektu w edytorze grafiki rastrowej zastosowano // pytanie posiada zdjecie D:

    802. Przedstawiona ikona funkcji edytora grafiki rastrowej o nazwie „różdżka” umożliwia // pytanie posiada zdjecie D:

    803. Testując skrypt JavaScript można wyświetlać w konsoli aktualnie przechowywane wartości zmiennych 
za pomocą funkcji
    A. console.log() // Funkcja console.log() służy do wyświetlania aktualnie przechowywanych wartości zmiennych w konsoli. Jest to przydatne podczas testowania skryptu JavaScript, ponieważ umożliwia sprawdzenie poprawności wartości przechowywanych w zmiennych.
    B. console.warn() // Funkcja console.warn() służy do wyświetlania ostrzeżeń w konsoli. Może być używana do informowania o potencjalnych problemach w skrypcie JavaScript, które nie powodują jednak błędów i nie zatrzymują jego działania.
    C. console.error() // Funkcja console.error() służy do wyświetlania błędów w konsoli. Jeśli w skrypcie JavaScript wystąpił błąd, można użyć tej funkcji do zasygnalizowania tego problemu w konsoli.
    D. console.count() // Funkcja console.count() służy do zliczania wystąpień danej etykiety w konsoli. Może być używana, aby śledzić ilość wykonanych operacji lub sprawdzać częstość występowania określonych zdarzeń w skrypcie JavaScript.
    
    804. Aby za pomocą skryptu JavaScript zmienić wartość cechy elementu opisanej językiem CSS, należy posłużyć 
się szablonem zapisu
    A. document.getElementById(id).innerHTML = < nowa wartość >; // Aby za pomocą skryptu JavaScript zmienić wartość cechy elementu opisanej językiem CSS, należy użyć document.getElementById(id).innerHTML = <nowa wartość>.
    B. document.getElementById(id).< nazwa-atrybutu > = < nowa wartość >; // Aby za pomocą skryptu JavaScript zmienić wartość atrybutu elementu o danym id, należy użyć document.getElementById(id).<nazwa-atrybutu> = <nowa wartość>.
    C. document.getElementById(id).< nazwa właściwości > = < nowa wartość >; // Aby za pomocą skryptu JavaScript zmienić wartość właściwości elementu o danym id, należy użyć document.getElementById(id).<nazwa właściwości> = <nowa wartość>.
    D. document.getElementById(id).style.< nazwa właściwości > = < nowa wartość >; // Aby za pomocą skryptu JavaScript zmienić wartość właściwości CSS elementu o danym id, należy użyć document.getElementById(id).style.<nazwa właściwości> = <nowa wartość>.
    
    805. W której tablicy superglobalnej w środowisku PHP powinno się przechowywać dane związane z logowaniem 
użytkownika w sposób zapewniający ich bezpieczeństwo?
    A. $ _ SESSION // Tablica superglobalna $ _SESSION przechowuje dane związane z logowaniem użytkownika w sposób zapewniający bezpieczeństwo. Jest to możliwe dzięki temu, że dane przechowywane w tej tablicy są przechowywane po stronie serwera, a nie przesyłane do przeglądarki użytkownika. Dzięki temu trudniej jest dla potencjalnego atakującego uzyskać dostęp do tych danych.
    B. $ _ SERVER // Tablica superglobalna $ _SERVER zawiera informacje o środowisku serwera i wykonywanym skrypcie. Nie ma ona związku bezpośredniego z przechowywaniem danych związanych z logowaniem użytkownika.
    C. $ _ COOKIE // Tablica superglobalna $ _COOKIE zawiera dane związane z ciasteczkami, które są małymi plikami przechowywanymi po stronie przeglądarki użytkownika. Nie jest to bezpieczne miejsce na przechowywanie danych logowania.
    D. $ _ FILES // Tablica superglobalna $ _FILES zawiera informacje o przesłanych plikach. Nie ma ona związku bezpośredniego z przechowywaniem danych związanych z logowaniem użytkownika.
    
    806. W wyniku walidacji dokumentu HTML został wygenerowany błąd przedstawiony na zrzucie. Aby go 
wyeliminować należy // pytanie posiada zdjecie D:

    807. Program FileZilla może zostać wykorzystany do
    A. walidacji strony internetowej // Program FileZilla nie może być wykorzystany do walidacji strony internetowej. Walidacja strony internetowej polega na sprawdzaniu poprawności jej kodu i struktury, co jest czynnością związaną z edytorem kodu lub narzędziem do walidacji HTML/CSS.
    B. publikacji strony internetowej na serwerze // Program FileZilla służy do publikacji strony internetowej na serwerze. Dzięki niemu możemy łatwo przesyłać pliki strony z komputera do serwera, co umożliwia udostępnienie strony w Internecie.
    C. zarządzania bazami danych strony internetowej // Program FileZilla nie służy do zarządzania bazami danych strony internetowej. Zarządzanie bazami danych to zadanie, które jest realizowane przez specjalistyczne narzędzia do zarządzania bazami danych, takie jak phpMyAdmin czy MySQL Workbench.
    D. zmiany domyślnych ustawień hostingu dla strony internetowej // Program FileZilla także nie umożliwia zmiany domyślnych ustawień hostingu dla strony internetowej. Ustawienia hostingu są zwykle dostępne przez panel klienta lub interfejs administracyjny serwera, na którym strona jest hostowana.
    
    808. Które z poleceń algorytmu odpowiada graficznej reprezentacji bloku przedstawionego na obrazie? // pytanie posiada zdjecie D:

    809. Metoda projektowania algorytmów, polegająca na podziale problemu na dwa lub więcej mniejszych 
podproblemów, tak długo aż fragmenty staną się wystarczająco proste do bezpośredniego rozwiązania, to
    A. dziel i zwyciężaj // Metoda projektowania algorytmów, dziel i zwyciężaj, polega na podziale problemu na dwa lub więcej mniejszych podproblemów. Następnie te podproblemy są rozwiązywane niezależnie, a ich wyniki są łączone, aby uzyskać ostateczne rozwiązanie. Ten proces jest powtarzany aż do osiągnięcia wystarczająco prostych podproblemów, które można rozwiązać bezpośrednio.
    B. sito Eratostenesa // Sito Eratostenesa to algorytm używany do znajdowania wszystkich liczb pierwszych w określonym przedziale. Algorytm ten polega na oznaczaniu jako skreślone kolejnych wielokrotności liczb pierwszych, a te liczby, które nie zostały skreślone, są liczbami pierwszymi.
    C. słowa Fibonacciego // Słowa Fibonacciego to ciąg liczb, w którym każda liczba jest sumą dwóch poprzednich. Algorytm oparty na Słowach Fibonacciego może być wykorzystywany do rozwiązywania różnych problemów, takich jak planowanie terminów, modelowanie wzrostu populacji itp.
    D. sortowanie przez wybór // Sortowanie przez wybór to prosty algorytm sortowania, który działa w sposób iteracyjny. Polega na przeszukiwaniu listy w celu znalezienia najmniejszego elementu, który zostaje przeniesiony na początek listy. Następnie proces ten jest powtarzany dla pozostałych elementów, aż lista zostanie posortowana.
    
    810. Program zapisany w języku C++ ma za zadanie wczytać zmienną całkowitą liczba i wyświetlić ją wtedy, gdy 
przyjmuje trzycyfrowe wartości parzyste. Instrukcja warunkowa sprawdzająca ten warunek powinna zawierać 
wyrażenie logiczne
    A. liczba % 2 == 0 || liczba > 99 || liczba < 999 // Warunek sprawdza, czy liczba jest parzysta (dzieli się przez 2 bez reszty) lub czy jest trzycyfrowa (większa od 99 i mniejsza od 999). Jeśli któryś z tych warunków jest spełniony, program wyświetla wartość liczby.
    B. liczba % 2 == 0 && liczba > 99 && liczba < 999 // Warunek sprawdza, czy liczba jest parzysta (dzieli się przez 2 bez reszty) oraz czy jest trzycyfrowa (większa od 99 i mniejsza od 999). Oba warunki muszą być spełnione jednocześnie, aby program wyświetlił wartość liczby.
    C. liczba % 2 == 0 || (liczba > 99 && liczba < 999) // Warunek sprawdza, czy liczba jest parzysta (dzieli się przez 2 bez reszty) lub czy jest trzycyfrowa (większa od 99 i mniejsza od 999). Jeśli któryś z tych warunków jest spełniony, program wyświetla wartość liczby.
    D. liczba % 2 == 0 && (liczba > 99 || liczba < 999) // Warunek sprawdza, czy liczba jest parzysta (dzieli się przez 2 bez reszty) oraz czy jest trzycyfrowa (większa od 99 lub mniejsza od 999). Oba warunki muszą być spełnione jednocześnie, lub jeden z nich, aby program wyświetlił wartość liczby.
    
    811. Wskaż instrukcję równoważną funkcjonalnie do instrukcji while zapisanej w języku PHP. // pytanie posiada zdjecie D:

    812. Co będzie wynikiem po wywołaniu przedstawionego skryptu? // pytanie posiada zdjecie D:

    813. W języku C++ zdefiniowano zmienną char zm1[10];
Zmienna ta jest 
    A. liczbą // Zmienna char zm1[10] w języku C++ jest tablicą znaków. Oznacza to, że może przechowywać ciąg znaków o długości 10. Każdy element tablicy jest pojedynczym znakiem.
    B. znakiem // Zmienna char zm1[10] nie jest liczbą. Jest to typ danych, który służy do przechowywania znaków, a nie liczb.
    C. tablicą znaków // Poprawną odpowiedzią jest C. Zmienna char zm1[10] jest tablicą znaków. Oznacza to, że może przechowywać ciąg znaków o długości 10. Każdy element tablicy jest pojedynczym znakiem.
    D. tablicą łańcuchów // Zmienna char zm1[10] nie jest tablicą łańcuchów. Tablica łańcuchów byłaby zdefiniowana jako zmienna typu string[], a nie char[].
    
    814. Która definicja tablicy asocjacyjnej w języku PHP jest poprawna składniowo?
    A. $wiek = array("Anna"=35, "Ewa"=37, "Oliwia"=43);
 // Definicja tablicy asocjacyjnej w języku PHP w punkcie A jest niepoprawna składniowo. Ciąg znaków przed znakiem równości powinien być w cudzysłowiu, np. "Anna".
    B. $wiek = array([Anna, 35], [Ewa, 37], [Oliwia, 43]); // Definicja tablicy asocjacyjnej w języku PHP w punkcie B jest niepoprawna składniowo. Klucze i wartości powinny być w cudzysłowiu i oddzielone przecinkiem, np. ["Anna", 35].
    C. $wiek = array("Anna"=>"35", "Ewa"=>"37", "Oliwia"=>"43"); // Definicja tablicy asocjacyjnej w języku PHP w punkcie C jest poprawna składniowo. Klucze i wartości są oddzielone znakiem =>, a całość jest umieszczona w cudzysłowiu, np. array("Anna"=>"35", "Ewa"=>"37", "Oliwia"=>"43").
    D. $wiek = array({"Anna", "35"}, {"Ewa", "37"}, {"Oliwia", "43"}); // Definicja tablicy asocjacyjnej w języku PHP w punkcie D jest niepoprawna składniowo. Pary klucz-wartość powinny być w oddzielnym nawiasie kwadratowym i oddzielone przecinkiem, np. {["Anna", "35"], ["Ewa", "37"], ["Oliwia", "43"]}.
    
    815. W języku JavaScript, aby sprawdzić jednym poleceniem czy dany napis zawiera w sobie inny napis, można 
skorzystać z metody
    A. repeat() // Metoda repeat() w języku JavaScript pozwala powtórzyć dany napis określoną ilość razy.
    B. substr() // Metoda substr() w języku JavaScript zwraca określoną część napisu na podstawie podanych indeksów.
    C. valueOf() // Metoda valueOf() w języku JavaScript zwraca wartość pierwotną określonego obiektu.
    D. includes() // Metoda includes() w języku JavaScript sprawdza, czy dany napis zawiera się w innym napisie i zwraca wartość logiczną true lub false.
    
    816. W jaki sposób w języku PHP należy ustawić zmienną sesji o nazwie wyborID na wartość 4?
    A. session.wyborID = 4; // W opcji A próbuje się ustawić zmienną sesji, ale zapis jest niepoprawny. Prawidłowy zapis sesji w PHP polega na użyciu superglobalnej tablicy $_SESSION i przypisaniu wartości do odpowiedniego indeksu. W przypadku tego pytania, poprawną odpowiedzią jest opcja D. $ _SESSION["wyborID"] = 4;
    B. session.wyborID = {4}; // Opcja B próbuje użyć nawiasów klamrowych, które w języku PHP są używane do tworzenia tablic asocjacyjnych. Jednak w tym przypadku, nawiasy klamrowe nie są potrzebne do przypisania wartości do zmiennej sesji. Odpowiedź B jest niepoprawna.
    C. $ _SESSION[4] = wyborID; // Opcja C próbuje użyć indeksu jako liczby, co jest niedopuszczalne w przypadku tablicy $_SESSION w PHP. Indeksy w tablicy $_SESSION muszą być łańcuchami znaków. Odpowiedź C jest niepoprawna.
    D. $ _SESSION["wyborID"] = 4; // Opcja D używa poprawnego składniowo zapisu zmiennej sesji w PHP. Zmienna sesji 'wyborID' zostaje przypisana wartość 4 poprzez użycie indeksu jako łańcucha znaków. Ta odpowiedź jest poprawna.
    
    817. W języku PHP zmienna $ _SERVER przechowuje między innymi informacje o
    A. danych dotyczących sesji // Zmienna $ _SERVER w języku PHP przechowuje informacje dotyczące sesji, takie jak identyfikator sesji, czas ostatniej aktywności użytkownika czy preferencje związane z sesją.
    B. adresie IP serwera, nazwie protokołu // Zmienna $ _SERVER przechowuje adres IP serwera oraz nazwę protokołu, którym serwer się komunikuje. Pozwala to na identyfikację serwera i ustalenie sposobu komunikacji z nim.
    C. danych formularza przetwarzanego na serwerze. // Zmienna $ _SERVER nie przechowuje danych formularza przetwarzanego na serwerze. Dane te są zwykle przechowywane w innych zmiennych, takich jak $_POST lub $_GET.
    D. nazwie ciasteczek zapisanych na serwerze i danych z nimi związanych // Zmienna $ _SERVER nie przechowuje nazw ciasteczek zapisanych na serwerze i danych z nimi związanych. Do obsługi ciasteczek służą inne zmienne, takie jak $_COOKIE.
    
    818. Którą wartość zwróci funkcja zapisana w języku C++, jeżeli jej parametrami są a = 4 oraz b = 3? // pytanie posiada zdjecie D:

    819. Program PHP wyświetla aktualny czas w postaci godzina:minuta:sekunda, np. 15:38:20. Czas sformatowany 
w ten sposób zostanie zwrócony przez funkcję
    A. date("H:i:s"); // Funkcja date("H:i:s") w języku PHP zwraca aktualny czas w formacie godzina:minuta:sekunda. Na przykład, jeśli jest godzina 15:38 i 20 sekund, funkcja zwróci wartość "15:38:20".
    B. date("G:m:s"); // Odpowiedź B, date("G:m:s"), nie jest poprawna. Ten format zwraca godzinę w formacie 24-godzinnym, ale w przypadku minut jest używany nieprawidłowy symbol ":" zamiast ".", co powoduje błędne wyświetlanie czasu.
    C. time("H:i:s"); // Odpowiedź C, time("H:i:s"), również nie jest poprawna. Funkcja time() zwraca aktualny czas w formacie unixowym czasu, a nie sformatowanym jako godzina:minuta:sekunda.
    D. time("G:m:s"); // Odpowiedź D, time("G:m:s"), również jest nieprawidłowa. Tak jak w przypadku odpowiedzi B, ten format używa nieprawidłowego symbolu ":" zamiast "." dla minut.
    
    820. Które wyrażenie należy wstawić w miejsce ??? w pętli zapisanej w języku C++, aby zostały wyświetlone 
jedynie elementy tablicy tab // pytanie posiada zdjecie D:

    821. Który zapis definiuje w języku JavaScript komentarz jednoliniowy?
    A. # // Znak '#' nie definiuje w języku JavaScript komentarza jednoliniowego.
    B. ? // Znak '?' nie definiuje w języku JavaScript komentarza jednoliniowego.
    C. / / // Znak '//'' definiuje w języku JavaScript komentarz jednoliniowy. Jest to sposób tworzenia komentarzy, które są ignorowane przez interpreter podczas wykonywania kodu.
    D. /* // Znaki '/*' i '*/' definiują w języku JavaScript komentarz wieloliniowy. Jest to sposób tworzenia komentarzy, które mogą zajmować więcej niż jedną linijkę i są ignorowane przez interpreter.
    
    822. Z relacji przedstawionej na obrazie można wyczytać, że jest ona relacją // pytanie posiada zdjecie D:

    823. Które z mechanizmów są niezbędne dla Systemu Zarządzania Bazą Danych?
    A. Wielodostępność danych // Wielodostępność danych jest niezbędnym mechanizmem dla Systemu Zarządzania Bazą Danych. Oznacza to, że wielu użytkowników może jednocześnie korzystać z bazy danych, wprowadzać do niej zmiany i pobierać informacje. Mechanizm ten zapewnia efektywne i równoczesne dostęp do danych dla różnych użytkowników.
    B. Pakiety do tworzenia statystyk // Pakiety do tworzenia statystyk nie są niezbędne dla Systemu Zarządzania Bazą Danych. Chociaż tworzenie statystyk może być przydatne, nie jest to podstawowy mechanizm, na którym opiera się działanie bazy danych.
    C. System zarządzania wersjami bazy // System zarządzania wersjami bazy jest niezbędnym mechanizmem dla Systemu Zarządzania Bazą Danych. Pozwala on na kontrolowanie i śledzenie zmian dokonywanych w bazie danych, umożliwiając przywracanie poprzednich wersji danych w razie potrzeby.
    D. Przystawka do wizualizacji diagramów encji // Przystawka do wizualizacji diagramów encji nie jest niezbędnym mechanizmem dla Systemu Zarządzania Bazą Danych. Jest to narzędzie pomocne przy projektowaniu bazy danych, ale nie wpływa na jej działanie i nie jest niezbędne do jej zarządzania.
    
    824. Za pomocą której kwerendy w bazie MariaDB można wybrać artykuły, których ceny zawierają się 
w przedziale obustronnie domkniętym < 10, 20 >?
    A. SELECT * FROM Artykuly WHERE Cena IN (10, 20); // Punkt A to kwerenda SELECT * FROM Artykuly WHERE Cena IN (10, 20). Ta kwerenda wybiera artykuły, których cena jest równa 10 lub 20.
    B. SELECT * FROM Artykuly WHERE Cena LIKE 1%, 2%; // Punkt B to kwerenda SELECT * FROM Artykuly WHERE Cena LIKE 1%, 2%. Ta kwerenda nie jest prawidłowa. Kwerenda LIKE jest używana do porównywania wartości tekstowych, a nie liczb.
    C. SELECT * FROM Artykuly WHERE Cena BETWEEN 10 AND 20; // Punkt C to kwerenda SELECT * FROM Artykuly WHERE Cena BETWEEN 10 AND 20. Ta kwerenda wybiera artykuły, których cena zawiera się w przedziale od 10 do 20, włącznie.
    D. SELECT * FROM Artykuly WHERE Cena > 10 AND Cena < 20; // Punkt D to kwerenda SELECT * FROM Artykuly WHERE Cena > 10 AND Cena < 20. Ta kwerenda wybiera artykuły, których cena jest większa od 10 i jednocześnie mniejsza od 20.
    
    825. Z bazy danych należy zwrócić zapytaniem SQL nazwiska pracowników, którzy są kierownikami, a ich pensja 
znajduje się w przedziale jednostronnie domkniętym (3000, 4000 >. Która z klauzul bada ten warunek?
    A. WHERE kierownik = true OR pensja > 3000 OR pensja <= 4000; // Punkt A: W klauzuli WHERE sprawdzana jest wartość kolumny 'kierownik' czy jest równa true lub wartość kolumny 'pensja' jest większa od 3000 lub równa 4000.
    B. WHERE kierownik = true AND pensja => 3000 OR pensja < 4000; // Punkt B: W klauzuli WHERE sprawdzana jest wartość kolumny 'kierownik' czy jest równa true i wartość kolumny 'pensja' jest większa lub równa 3000 lub mniejsza od 4000.
    C. WHERE kierownik = true AND pensja > 3000 AND pensja <= 4000; // Punkt C: W klauzuli WHERE sprawdzana jest wartość kolumny 'kierownik' czy jest równa true i wartość kolumny 'pensja' jest większa od 3000 oraz mniejsza lub równa 4000.
    D. WHERE kierownik = true AND pensja => 3000 AND pensja <= 4000; // Punkt D: W klauzuli WHERE sprawdzana jest wartość kolumny 'kierownik' czy jest równa true i wartość kolumny 'pensja' jest większa lub równa 3000 oraz mniejsza lub równa 4000.
    
    826. Tabela odloty zawiera rekordy przedstawione na obrazie. Zastosowanie zapytania SQL spowoduje 
zwrócenie danych: // pytanie posiada zdjecie D:

    827. W bazie MySQL zdefiniowano podczas tworzenia tabeli pole id. Wpis AUTO_INCREMENT oznacza, że // pytanie posiada zdjecie D:

    828. Tabele: Firmy i Zamowienia są powiązane relacją jeden do wielu. Aby wybrać jedynie id zamówienia wraz 
z odpowiadającą mu nazwą firmy dla firm, których poziom jest równy 4, należy zastosować polecenie // pytanie posiada zdjecie D:

    829. Typowym narzędziem SZBD służącym do generowania zestawień danych w celu ich wydrukowania jest
    A. raport // Raport to narzędzie w SZBD, które służy do generowania zestawień danych w celu ich wydrukowania. Raporty pozwalają na uporządkowanie danych w czytelny sposób i mogą zawierać różne elementy takie jak tabele, wykresy, nagłówki i stopki.
    B. makro // Makro to narzędzie w SZBD, które służy do automatyzacji powtarzalnych czynności. Makra pozwalają na zdefiniowanie sekwencji instrukcji, które mogą być wykonywane w odpowiedzi na określone zdarzenia lub polecenia użytkownika.
    C. formularz // Formularz to narzędzie w SZBD, które służy do interaktywnego wprowadzania i edycji danych. Formularze umożliwiają użytkownikom wygodne wprowadzanie danych poprzez pola tekstowe, listy rozwijane i inne kontrolki.
    D. kwerenda UPDATE // Kwerenda UPDATE to narzędzie w SZBD, które służy do modyfikowania danych w tabelach. Kwerenda UPDATE umożliwia aktualizację wartości w określonych rekordach na podstawie określonych warunków.
    
    830. W języku SQL usunięcie wszystkich danych z tabeli bez usuwania samej tabeli możliwe jest za pomocą 
polecenia
    A. DROP // Polecenie DROP jest używane do całkowitego usunięcia tabeli w języku SQL. Usuwa zarówno dane jak i samą strukturę tabeli.
    B. ALTER // Polecenie ALTER jest używane do modyfikacji struktury tabeli w języku SQL. Można za jego pomocą dodawać, usuwać lub zmieniać kolumny w tabeli.
    C. UPDATE // Polecenie UPDATE jest używane do modyfikacji danych w tabeli w języku SQL. Pozwala na zmianę wartości istniejących rekordów.
    D. TRUNCATE // Polecenie TRUNCATE jest używane do usunięcia wszystkich danych z tabeli, zachowując jej strukturę. Oznacza to, że samą tabelę można nadal wykorzystywać, ale wszystkie dane w niej zostaną usunięte.
    
    831. Pole autor w tabeli ksiazka jest // pytanie posiada zdjecie D:

    832. W bazie danych MySQL, aby wyświetlić wszystkie prawa nadane użytkownikowi anna, można posłużyć się 
poleceniem
    A. GRANT * TO anna; // Polecenie A. GRANT * TO anna; służy do nadawania wszystkich uprawnień użytkownikowi anna w bazie danych MySQL.
    B. SHOW GRANTS FOR anna; // Polecenie B. SHOW GRANTS FOR anna; służy do wyświetlania wszystkich uprawnień nadanych użytkownikowi anna w bazie danych MySQL.
    C. SELECT GRANTS FOR anna; // Polecenie C. SELECT GRANTS FOR anna; nie istnieje w bazie danych MySQL.
    D. REVOKE GRANTS FROM anna; // Polecenie D. REVOKE GRANTS FROM anna; służy do odejmowania uprawnień użytkownikowi anna w bazie danych MySQL.
    
    833. Aby wstawić dane do bazy za pomocą polecenia PHP w jego parametrach należy przekazać // pytanie posiada zdjecie D:

    834. W aplikacji PHP obsługującej bazę danych, aby po wykonaniu dowolnej operacji otrzymać numer błędu oraz 
jego opis, należy zastosować
    A. tylko funkcję mysqli_error // Funkcja mysqli_error służy do otrzymywania opisu błędu po wykonaniu operacji w aplikacji PHP obsługującej bazę danych.
    B. funkcje mysqli_error i mysqli_errno // Funkcje mysqli_error i mysqli_errno służą do otrzymywania numeru błędu oraz jego opisu po wykonaniu operacji w aplikacji PHP obsługującej bazę danych.
    C. funkcje mysqli_error i mysqli_error_number // Funkcje mysqli_error i mysqli_error_number nie istnieją. Poprawne funkcje do otrzymywania numeru błędu i jego opisu to mysqli_error i mysqli_errno.
    D. funkcje mysqli_error i mysqli_connect_errno // Funkcja mysqli_connect_errno służy do otrzymywania numeru błędu po nieudanej próbie połączenia z bazą danych w aplikacji PHP.
    
    835. Na obrazie przedstawiono projekt układu bloków witryny internetowej. Zakładając, że bloki są realizowane 
za pomocą znaczników sekcji, a szerokość została zdefiniowana jedynie dla bloków 2, 3 i 4, ich formatowanie, 
powinno zawierać właściwość // pytanie posiada zdjecie D:

    836. Na obrazie przedstawiono tabelę ze scalonymi komórkami. Które atrybuty scalania zastosowano, aby 
uzyskać ten efekt? // pytanie posiada zdjecie D:

    837. Formularz wysyła dane do skryptu skrypt.php po wciśnięciu przycisku o treści „WYŚLIJ”. Wskaż poprawną 
definicję formularza. // pytanie posiada zdjecie D:

    838. Które formatowanie obramowania odpowiada stylowi border-style: dotted solid;? // pytanie posiada zdjecie D:

    839. Które pole edycyjne zostało sformatowane przedstawionym stylem zakładając, że pozostałe własności pola 
przyjmują wartości domyślne, a użytkownik wpisał imię Krzysztof w przeglądarce? // pytanie posiada zdjecie D:

    840. Które zdanie dotyczące antyaliasingu jest prawdziwe?
    A. Antyaliasing to jeden z filtrów wyostrzających obraz // Antyaliasing to jeden z filtrów wyostrzających obraz. Pomaga wygładzić krawędzie i zmniejszyć efekt schodkowania, co daje bardziej naturalny wygląd obrazu.
    B. Antyaliasing stosuje się na obrazach, w celu dodania przezroczystości // Antyaliasing nie dodaje przezroczystości do obrazów. Jego głównym celem jest eliminowanie schodkowania na krawędziach, niezależnie od przezroczystości obrazu.
    C. Za pomocą antyaliasingu można pozbyć się tak zwanego schodkowania obrazu // Antyaliasing pozwala pozbyć się schodkowania obrazu. Działa poprzez dodawanie subpikseli na krawędziach, co powoduje wygładzenie i poprawę jakości obrazu.
    D. Zastosowanie antyaliasingu odnosi się do krzywych Beziera w grafice wektorowej // Zastosowanie antyaliasingu nie jest specyficzne dla krzywych Beziera w grafice wektorowej. Może być stosowany na różnych typach obrazów, niezależnie od używanych krzywych.
    
    841. Przedstawiona transformacja obrazu rastrowego jest możliwa dzięki funkcji // pytanie posiada zdjecie D:

    842. Który ze skryptów wyświetla aktualną datę oraz czas, w formacie przedstawionym na obrazie? // pytanie posiada zdjecie D:

    843. Efektem wielokrotnego wykonania kodu PHP jest // pytanie posiada zdjecie D:

    844. Aby za pomocą JavaScript w witrynie internetowej wyświetlić aktualną datę i czas można posłużyć się 
instrukcją
    A. echo Date(); // Punkt A - używając instrukcji 'echo Date();' w JavaScript można wyświetlić aktualną datę i czas w witrynie internetowej.
    B. innerHTML = Date(); // Punkt B - używając instrukcji 'innerHTML = Date();' w JavaScript można wyświetlić aktualną datę i czas wewnątrz elementu HTML na stronie internetowej.
    C. echo Date() + Time(); // Punkt C - instrukcja 'echo Date() + Time();' nie jest poprawna w JavaScript. Nie ma funkcji 'echo' ani 'Time()'.
    D. document.write(Date()); // Punkt D - używając instrukcji 'document.write(Date());' w JavaScript można wyświetlić aktualną datę i czas bezpośrednio na stronie internetowej.
    
    845. Brak którego elementu języka HTML wygeneruje błąd walidatora HTML5?
    A. < body > // Element <body> jest jednym z najważniejszych elementów w HTML, ponieważ definiuje całą zawartość strony. Wszystkie elementy, które chcemy wyświetlić na stronie, powinny znajdować się wewnątrz tego elementu.
    B. przynajmniej jednego < h1 > // Element <h1> jest elementem nagłówka w HTML i służy do określania najważniejszego tytułu na stronie. Każda strona powinna zawierać przynajmniej jeden element <h1>, aby poprawnie strukturować informacje na stronie.
    C. prologu < !DOCTYPE html > // Prolog < !DOCTYPE html > jest elementem, który informuje przeglądarkę o tym, w jakiej wersji HTML jest napisana strona. Jest to bardzo ważny element, ponieważ umożliwia poprawną interpretację kodu HTML przez przeglądarkę.
    D. < meta name="author" content="...." > // Element <meta name="author" content="..."> służy do określania autora strony. Jest to informacja, która może być wykorzystywana przez przeglądarki oraz wyszukiwarki internetowe. Nie jest to jednak obowiązkowy element i nie ma wpływu na walidację kodu HTML.
    
    846. Program FileZilla może posłużyć do 
    A. interpretacji kodu PHP // Program FileZilla nie służy do interpretacji kodu PHP. Służy do publikowania strony internetowej. Może być używany do przesyłania plików na serwer za pomocą protokołu FTP.
    B. walidacji strony internetowej // Program FileZilla nie służy do walidacji strony internetowej. Służy do publikowania strony internetowej. Może być używany do przesyłania plików na serwer za pomocą protokołu FTP.
    C. publikowania strony internetowej // Program FileZilla służy do publikowania strony internetowej. Jest to klient FTP, który umożliwia przesyłanie plików między komputerem a serwerem. Użytkownik może łatwo zarządzać plikami na serwerze poprzez interfejs graficzny programu.
    D. testowania prędkości wczytywania strony // Program FileZilla nie służy do testowania prędkości wczytywania strony. Służy do publikowania strony internetowej. Może być używany do przesyłania plików na serwer za pomocą protokołu FTP.
    
    847. Która lista zostanie wyświetlona w przeglądarce po wykonaniu kodu HTML> // pytanie posiada zdjecie D:

    848. Który rodzaj komunikatu jest zawsze przekazywany tylko pionowo w dół, czyli od przełożonego do podwładnego?
    A. Powierzenie zadania // Powierzenie zadania to rodzaj komunikatu przekazywanego pionowo w dół, od przełożonego do podwładnego. Polega na przekazaniu konkretnego zadania lub projektu do wykonania przez podwładnego.
    B. Poszukiwanie rozwiązań // Poszukiwanie rozwiązań to rodzaj komunikatu, który może być przekazywany zarówno pionowo, jak i poziomo w organizacji. Oznacza próbę znalezienia nowych sposobów lub rozwiązań na problemy lub wyzwania, z którymi organizacja się boryka.
    C. Uwagi o polityce organizacji // Uwagi o polityce organizacji są rodzajem komunikatu, który może być przekazywany zarówno pionowo, jak i poziomo w organizacji. Dotyczą polityki, zasad i procedur obowiązujących w organizacji oraz mogą zawierać sugestie lub informacje na temat ich zmiany lub ulepszenia.
    D. Raportowanie // Raportowanie to rodzaj komunikatu przekazywanego pionowo w dół, od podwładnego do przełożonego. Polega na przekazaniu informacji o postępach, wynikach lub problemach związanych z wykonywanymi zadaniami lub projektami.
    
    849. Tabela programy zawiera pola: nazwa_programu, nazwa_producenta, rok_wydania. Aby kwerenda SELECT wybrała wszystkie nazwy producentó tak, by nazwy te nie powtarzały się, należy zapisać:
    A. SELECT nazwa_producenta FROM programy WHERE nazwa_producenta NOT DUPLICATE; // Kwerenda SELECT nazwa_producenta FROM programy WHERE nazwa_producenta NOT DUPLICATE; jest niepoprawna. Nie istnieje polecenie NOT DUPLICATE w SQL, które usuwałoby powtarzające się wartości. Ta kwerenda zwróciłaby wszystkie nazwy producentów, bez usuwania powtórzeń.
    B. SELECT DISTINCT nazwa_producenta FROM programy; // Kwerenda SELECT DISTINCT nazwa_producenta FROM programy; jest poprawna. Polecenie DISTINCT w SQL usuwa duplikaty i zwraca tylko unikalne wartości z wybranego pola. Ta kwerenda zwróci nazwy producentów bez powtórzeń.
    C. SELECT UNIQUE nazwa_producenta FROM programy; // Kwerenda SELECT UNIQUE nazwa_producenta FROM programy; jest niepoprawna. Nie ma polecenia UNIQUE w SQL, które zwracałoby tylko unikalne wartości z wybranego pola.
    D. SELECT nazwa_producenta FROM programy WHERE UNIQUE; // Kwerenda SELECT nazwa_producenta FROM programy WHERE UNIQUE; jest niepoprawna. Nie ma polecenia UNIQUE w SQL, które zwracałoby tylko unikalne wartości z wybranego pola.
    
    850. Za pomocą przedstawionego polecenia można // pytanie posiada zdjecie D:

    851. Prześladowanie, uporczywe nękanie i zastraszanie, stosowanie przemocy psychicznej wobec podwładnego lub współpracownika w miejscu pracy, to
    A. dyskryminacja // Dyskryminacja to nierówność traktowania jednostek lub grup na podstawie pewnych cech, takich jak płeć, rasa, wyznanie czy orientacja seksualna.
    B. manipulacja // Manipulacja to celowe wpływanie na zachowanie lub myślenie innych osób w taki sposób, aby osoba manipulująca osiągnęła swoje korzyści lub cele.
    C. mobbing // Mobbing to forma przemocy psychicznej w miejscu pracy, polegająca na prześladowaniu, nękaniu i zastraszaniu podwładnych lub współpracowników.
    D. perswazja // Perswazja to proces przekonywania, który ma na celu zmienić postawy lub zachowania innych osób poprzez używanie argumentów, manipulację emocjami lub wpływ na ich przekonania.
    
    852. Który znak ostrzegawczy określa strefę ochronną w otoczeniu źródła pola elektromagnetycznego? // pytanie posiada zdjecie D:

    853. Na stronie WWW zdefiniowano rysunek, następnie akapit. Aby rysunek został umieszczony przez przeglądarkę w tej samej linii co akapit, po lewej stronie akapitu, należy w stylu CSS dla rysunku zapisać własność:
    A. float: left; // Własność float: left w stylu CSS dla rysunku umieszcza go po lewej stronie akapitu, w tej samej linii. Działa to poprzez przesunięcie rysunku na lewą stronę i obok niego ustawienie treści akapitu.
    B. style: left; // Własność style: left nie istnieje w CSS i nie wpływa na położenie obiektów na stronie.
    C. align: left; // Własność align: left również nie istnieje w CSS i nie wpływa na położenie obiektów na stronie.
    D. alt: left; // Własność alt: left nie istnieje w CSS i nie ma związku z położeniem obiektów na stronie.
    
    854. W ramce przedstawiono zapisane w języku CSS formatowanie selektora. Zakładając, że żadne inne formatowanie nie jest dodane, wskaż sposób formatowania znaczniki h1 // pytanie posiada zdjecie D:

    100. Kod: SELECT imie, pesel, wiek FROM dane WHERE wiek IN (18,30) spowoduje wybranie:
    A. imion, nazwisk i numerów PESEL osób w wieku poniżej 18 lat // Wynik zapytania SELECT imie, pesel, wiek FROM dane WHERE wiek IN (18,30) to lista osób, które mają 18 lub 30 lat. W zwróconej liście znajdują się imiona, numery PESEL i wiek tych osób.
    B. imion, numerów PESEL i wieku osób z przedziału od 18 do 30 lat // Wynik zapytania SELECT imie, pesel, wiek FROM dane WHERE wiek IN (18,30) to lista osób, które mają wiek pomiędzy 18 a 30 lat. W zwróconej liście znajdują się imiona, numery PESEL i wiek tych osób.
    C. imion, numerów PESEL i wieku osób posiadających powyżej 30 lat // Wynik zapytania SELECT imie, pesel, wiek FROM dane WHERE wiek IN (18,30) to lista osób, które mają wiek powyżej 30 lat. W zwróconej liście znajdują się imiona, numery PESEL i wiek tych osób.
    D. imion, numerów PESEL i wieku osób w wieku równym 18 lub 30 lat // Wynik zapytania SELECT imie, pesel, wiek FROM dane WHERE wiek IN (18,30) to lista osób, które mają 18 lub 30 lat. W zwróconej liście znajdują się imiona, numery PESEL i wiek tych osób.
    
    